{
    "OpenDocumentType": {
        "class": "OpenDocumentType",
        "superClass": null,
        "shortdesc": "Document formats that Photoshop can open.",
        "elementCount": 1,
        "propertyCount": 32,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PHOTOSHOP",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop format.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BMP",
                "@rwaccess": "readonly",
                "shortdesc": "BMP format.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "COMPUSERVEGIF",
                "@rwaccess": "readonly",
                "shortdesc": "CompuServe GIF format.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "PHOTOSHOPEPS",
                "@rwaccess": "readonly",
                "shortdesc": "EPS document produced by Photoshop.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "FILMSTRIP",
                "@rwaccess": "readonly",
                "shortdesc": "Filmstrip format.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "JPEG",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG format.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "PCX",
                "@rwaccess": "readonly",
                "shortdesc": "PCX format.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "PHOTOSHOPPDF",
                "@rwaccess": "readonly",
                "shortdesc": "PDF document produced by Photoshop.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "PHOTOCD",
                "@rwaccess": "readonly",
                "shortdesc": "Photo CD format.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "PICTFILEFORMAT",
                "@rwaccess": "readonly",
                "shortdesc": "PICT file format.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "PICTRESOURCEFORMAT",
                "@rwaccess": "readonly",
                "shortdesc": "PICT resource format.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "PIXAR",
                "@rwaccess": "readonly",
                "shortdesc": "Pixar format.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "PNG",
                "@rwaccess": "readonly",
                "shortdesc": "PNG format.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "RAW",
                "@rwaccess": "readonly",
                "shortdesc": "Raw format.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "SCITEXCT",
                "@rwaccess": "readonly",
                "shortdesc": "Scitex CT format.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "TARGA",
                "@rwaccess": "readonly",
                "shortdesc": "Targa format.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "TIFF",
                "@rwaccess": "readonly",
                "shortdesc": "TIFF format.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "PHOTOSHOPDCS_1",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop DCS 1.0 format.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            },
            {
                "@name": "PHOTOSHOPDCS_2",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop DCS 2.0 format.",
                "datatype": {
                    "type": "int",
                    "value": "19"
                }
            },
            {
                "@name": "PDF",
                "@rwaccess": "readonly",
                "shortdesc": "Generic PDF format.",
                "datatype": {
                    "type": "int",
                    "value": "21"
                }
            },
            {
                "@name": "EPS",
                "@rwaccess": "readonly",
                "shortdesc": "Generic EPS format.",
                "datatype": {
                    "type": "int",
                    "value": "22"
                }
            },
            {
                "@name": "EPSPICTPREVIEW",
                "@rwaccess": "readonly",
                "shortdesc": "EPS format with embedded PICT Preview.",
                "datatype": {
                    "type": "int",
                    "value": "23"
                }
            },
            {
                "@name": "EPSTIFFPREVIEW",
                "@rwaccess": "readonly",
                "shortdesc": "EPS format with embedded TIFF Preview.",
                "datatype": {
                    "type": "int",
                    "value": "24"
                }
            },
            {
                "@name": "ALIASPIX",
                "@rwaccess": "readonly",
                "shortdesc": "Alias PIX format.",
                "datatype": {
                    "type": "int",
                    "value": "25"
                }
            },
            {
                "@name": "ELECTRICIMAGE",
                "@rwaccess": "readonly",
                "shortdesc": "Electric format.",
                "datatype": {
                    "type": "int",
                    "value": "26"
                }
            },
            {
                "@name": "PORTABLEBITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Portable Bitmap format.",
                "datatype": {
                    "type": "int",
                    "value": "27"
                }
            },
            {
                "@name": "WAVEFRONTRLA",
                "@rwaccess": "readonly",
                "shortdesc": "Wavefront RLA format.",
                "datatype": {
                    "type": "int",
                    "value": "28"
                }
            },
            {
                "@name": "SGIRGB",
                "@rwaccess": "readonly",
                "shortdesc": "SGI RGB format.",
                "datatype": {
                    "type": "int",
                    "value": "29"
                }
            },
            {
                "@name": "SOFTIMAGE",
                "@rwaccess": "readonly",
                "shortdesc": "SoftImage format.",
                "datatype": {
                    "type": "int",
                    "value": "30"
                }
            },
            {
                "@name": "WIRELESSBITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Wireless Bitmap format (WBMP)",
                "datatype": {
                    "type": "int",
                    "value": "31"
                }
            },
            {
                "@name": "CAMERARAW",
                "@rwaccess": "readonly",
                "shortdesc": "Camera RAW format.",
                "datatype": {
                    "type": "int",
                    "value": "32"
                }
            },
            {
                "@name": "DICOM",
                "@rwaccess": "readonly",
                "shortdesc": "DICOM format.",
                "datatype": {
                    "type": "int",
                    "value": "33"
                }
            }
        ],
        "methods": []
    },
    "SaveDocumentType": {
        "class": "SaveDocumentType",
        "superClass": null,
        "shortdesc": "Document formats that Photoshop can save to.",
        "elementCount": 1,
        "propertyCount": 24,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PHOTOSHOP",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop format.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BMP",
                "@rwaccess": "readonly",
                "shortdesc": "BMP format.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "COMPUSERVEGIF",
                "@rwaccess": "readonly",
                "shortdesc": "CompuServe GIF format.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "PHOTOSHOPEPS",
                "@rwaccess": "readonly",
                "shortdesc": "EPS document produced by Photoshop.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "JPEG",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG format.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "PCX",
                "@rwaccess": "readonly",
                "shortdesc": "PCX format.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "PHOTOSHOPPDF",
                "@rwaccess": "readonly",
                "shortdesc": "PDF document produced by Photoshop.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "PICTFileFORMAT",
                "@rwaccess": "readonly",
                "shortdesc": "PICT file format.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "PICTRESOURCEFORMAT",
                "@rwaccess": "readonly",
                "shortdesc": "PICT resource format.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "PIXAR",
                "@rwaccess": "readonly",
                "shortdesc": "Pixar format.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "PNG",
                "@rwaccess": "readonly",
                "shortdesc": "PNG format.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "RAW",
                "@rwaccess": "readonly",
                "shortdesc": "Raw format.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "SCITEXCT",
                "@rwaccess": "readonly",
                "shortdesc": "Scitex CT format.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "TARGA",
                "@rwaccess": "readonly",
                "shortdesc": "Targa format.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "TIFF",
                "@rwaccess": "readonly",
                "shortdesc": "TIFF format.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "PHOTOSHOPDCS_1",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop DCS 1.0 format.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            },
            {
                "@name": "PHOTOSHOPDCS_2",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop DCS 2.0 format.",
                "datatype": {
                    "type": "int",
                    "value": "19"
                }
            },
            {
                "@name": "ALIASPIX",
                "@rwaccess": "readonly",
                "shortdesc": "Alias PIX format.",
                "datatype": {
                    "type": "int",
                    "value": "25"
                }
            },
            {
                "@name": "ELECTRICIMAGE",
                "@rwaccess": "readonly",
                "shortdesc": "Electric format.",
                "datatype": {
                    "type": "int",
                    "value": "26"
                }
            },
            {
                "@name": "PORTABLEBITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Portable Bitmap format.",
                "datatype": {
                    "type": "int",
                    "value": "27"
                }
            },
            {
                "@name": "WAVEFRONTRLA",
                "@rwaccess": "readonly",
                "shortdesc": "Wavefront RLA format.",
                "datatype": {
                    "type": "int",
                    "value": "28"
                }
            },
            {
                "@name": "SGIRGB",
                "@rwaccess": "readonly",
                "shortdesc": "SGI RGB format.",
                "datatype": {
                    "type": "int",
                    "value": "29"
                }
            },
            {
                "@name": "SOFTIMAGE",
                "@rwaccess": "readonly",
                "shortdesc": "SoftImage format.",
                "datatype": {
                    "type": "int",
                    "value": "30"
                }
            },
            {
                "@name": "WIRELESSBITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Wireless Bitmap format (WBMP)",
                "datatype": {
                    "type": "int",
                    "value": "31"
                }
            }
        ],
        "methods": []
    },
    "SaveOptionsType": {
        "class": "SaveOptionsType",
        "superClass": null,
        "shortdesc": "The save options for closing a file.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SAVECHANGES",
                "@rwaccess": "readonly",
                "shortdesc": "Save changes.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DONOTSAVECHANGES",
                "@rwaccess": "readonly",
                "shortdesc": "Do not save changes.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PROMPTTOSAVECHANGES",
                "@rwaccess": "readonly",
                "shortdesc": "Ask the user whether to save.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "DialogModes": {
        "class": "DialogModes",
        "superClass": null,
        "shortdesc": "Controls whether Photoshop displays dialogs during scripts.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ALL",
                "@rwaccess": "readonly",
                "shortdesc": "Show all dialogs.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ERROR",
                "@rwaccess": "readonly",
                "shortdesc": "Show only dialogs related to errors.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "NO",
                "@rwaccess": "readonly",
                "shortdesc": "Show no dialogs.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "DocPositionStyle": {
        "class": "DocPositionStyle",
        "superClass": null,
        "shortdesc": "Position of document when printing.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PRINTCENTERED",
                "@rwaccess": "readonly",
                "shortdesc": "Print image centered on page.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SIZETOFIT",
                "@rwaccess": "readonly",
                "shortdesc": "Resize image to fit on page when printing.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "USERDEFINED",
                "@rwaccess": "readonly",
                "shortdesc": "Print using user defined spacing.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PrintColorHandling": {
        "class": "PrintColorHandling",
        "superClass": null,
        "shortdesc": "Color conversion type when printing.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PRINTERMANAGED",
                "@rwaccess": "readonly",
                "shortdesc": "Printer manages color conversions.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PHOTOSHOPMANAGED",
                "@rwaccess": "readonly",
                "shortdesc": "Photoshop manages color conversions.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SEPARATIONS",
                "@rwaccess": "readonly",
                "shortdesc": "Print each channel separately without color conversions.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "DocumentMode": {
        "class": "DocumentMode",
        "superClass": null,
        "shortdesc": "The document's color mode.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "GRAYSCALE",
                "@rwaccess": "readonly",
                "shortdesc": "Grayscale.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "RGB",
                "@rwaccess": "readonly",
                "shortdesc": "RGB.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CMYK",
                "@rwaccess": "readonly",
                "shortdesc": "CMYK.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAB",
                "@rwaccess": "readonly",
                "shortdesc": "Lab.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Bitmap, which uses one of two color values (black or white) to represent the pixels in an image.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "INDEXEDCOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "Indexed color, in which the number of colors in the image is at most 256, the standard number of colors supported by the GIF and PNG-8 formats and many multimedia applications.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "MULTICHANNEL",
                "@rwaccess": "readonly",
                "shortdesc": "Image with multiple color channels.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "DUOTONE",
                "@rwaccess": "readonly",
                "shortdesc": "Duotone mode, which creates monotone, duotone (two-color), tritone (three-color), and quadtone (four-color) grayscale images using one to four custom inks.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            }
        ],
        "methods": []
    },
    "ChangeMode": {
        "class": "ChangeMode",
        "superClass": null,
        "shortdesc": "The destination color mode. Note: Color images must be changed to Grayscale mode before you can change them to Bitmap mode.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "GRAYSCALE",
                "@rwaccess": "readonly",
                "shortdesc": "Grayscale.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "RGB",
                "@rwaccess": "readonly",
                "shortdesc": "RGB.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CMYK",
                "@rwaccess": "readonly",
                "shortdesc": "CMYK.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAB",
                "@rwaccess": "readonly",
                "shortdesc": "Lab.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Bitmap. Note: Color images must be changed to Grayscale mode before you can change them to Bitmap mode.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "INDEXEDCOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "Indexed color, in which the number of colors in the image is reduced to at most 256, the standard number of colors supported by the GIF and PNG-8 formats and many multimedia applications.",
                "description": "This conversion reduces file size by deleting color information from the image. To convert to indexed color, you must start with an image that is 8 bits per channel and in either Grayscale or RGB mode.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "MULTICHANNEL",
                "@rwaccess": "readonly",
                "shortdesc": "Image with multiple color channels.",
                "description": "Uses 256 levels of gray in each channel. Useful for specialized printing. Color channels in the original image become spot color channels in the converted image. A CMYK image converted to Multichannel mode creates cyan, magenta, yellow, and black spot channels. An RGB image converted Multichannel mode creates cyan, magenta, and yellow spot channels. The new grayscale information is based on the color values of the pixels in each channel. Multichannel mode images can be saved in Photoshop, Photoshop 2.0, Photoshop Raw, or Photoshop DCS 2.0 format. To export a multichannel image, save it in Photoshop DCS 2.0 format.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "ColorProfileType": {
        "class": "ColorProfileType",
        "superClass": null,
        "shortdesc": "The type of color model that defines the document's working space.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "The document is not color managed.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "WORKING",
                "@rwaccess": "readonly",
                "shortdesc": "Color manages this document using the working color profile.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CUSTOM",
                "@rwaccess": "readonly",
                "shortdesc": "Color manages this document using a custom color profile.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "DocumentFill": {
        "class": "DocumentFill",
        "superClass": null,
        "shortdesc": "The document window fill type.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "WHITE",
                "@rwaccess": "readonly",
                "shortdesc": "White.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BACKGROUNDCOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "The background color as displayed in the toolbox.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "TRANSPARENT",
                "@rwaccess": "readonly",
                "shortdesc": "Transparent.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "Urgency": {
        "class": "Urgency",
        "superClass": null,
        "shortdesc": "The editorial urgency status of the artwork.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No urgency.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "LOW",
                "@rwaccess": "readonly",
                "shortdesc": "Low.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TWO",
                "@rwaccess": "readonly",
                "shortdesc": "Level 2 (second highest)",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "THREE",
                "@rwaccess": "readonly",
                "shortdesc": "Level 3 (third highest)",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "FOUR",
                "@rwaccess": "readonly",
                "shortdesc": "Level 4 (fourth highest)",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Medium urgency.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "SIX",
                "@rwaccess": "readonly",
                "shortdesc": "Level 6 (third lowest)",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "SEVEN",
                "@rwaccess": "readonly",
                "shortdesc": "Level 7 (second lowest)",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "HIGH",
                "@rwaccess": "readonly",
                "shortdesc": "Highest level of urgency.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            }
        ],
        "methods": []
    },
    "Orientation": {
        "class": "Orientation",
        "superClass": null,
        "shortdesc": "The image orientation on the media.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "LANDSCAPE",
                "@rwaccess": "readonly",
                "shortdesc": "Landscape.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PORTRAIT",
                "@rwaccess": "readonly",
                "shortdesc": "Portrait.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "Intent": {
        "class": "Intent",
        "superClass": null,
        "shortdesc": "The color conversion intent.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PERCEPTUAL",
                "@rwaccess": "readonly",
                "shortdesc": "Gives priority to colors for which the human eye has greater sensitivity.",
                "description": "Suitable for photographic images with a lot of out of gamut colors. This is the standard rendering intent for the Japanese printing industry.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SATURATION",
                "@rwaccess": "readonly",
                "shortdesc": "Tries to produce vivid colors in an image at the expense of color accuracy.",
                "description": "Suitable for business graphics like graphs or charts, where bright saturated colors are more important than the exact relationship between colors.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "RELATIVECOLORIMETRIC",
                "@rwaccess": "readonly",
                "shortdesc": "Compares the extreme highlight of the source color space to that of the destination color space and shifts all colors accordingly. Out of gamut colors are shifted to the closest reproducible color in the destination color space.",
                "description": "The standard rendering intent for printing in North America and Europe.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "ABSOLUTECOLORIMETRIC",
                "@rwaccess": "readonly",
                "shortdesc": "Aims to maintain color accuracy at the expense of preserving relationships between colors and is suitable for proofing to simulate the output of a particular device. This intent is particularly useful for previewing how paper color affects printed colors.",
                "description": "Leaves colors that fall inside the destination gamut unchanged. Out of gamut colors are clipped. No scaling of colors to destination white point is performed.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "Direction": {
        "class": "Direction",
        "superClass": null,
        "shortdesc": "The orientation of the object.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "HORIZONTAL",
                "@rwaccess": "readonly",
                "shortdesc": "Horizontal.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "VERTICAL",
                "@rwaccess": "readonly",
                "shortdesc": "Vertical.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "PurgeTarget": {
        "class": "PurgeTarget",
        "superClass": null,
        "shortdesc": "The cache to be targeted in a purge operation.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "UNDOCACHES",
                "@rwaccess": "readonly",
                "shortdesc": "Clears the undo cache.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "HISTORYCACHES",
                "@rwaccess": "readonly",
                "shortdesc": "Deletes all history states from the History palette.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CLIPBOARDCACHE",
                "@rwaccess": "readonly",
                "shortdesc": "Clears the clipboard.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "ALLCACHES",
                "@rwaccess": "readonly",
                "shortdesc": "Clears all caches.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "AnchorPosition": {
        "class": "AnchorPosition",
        "superClass": null,
        "shortdesc": "The point around which to transform the object.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "TOPLEFT",
                "@rwaccess": "readonly",
                "shortdesc": "The top left corner of the object.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TOPCENTER",
                "@rwaccess": "readonly",
                "shortdesc": "The middle point on the top of the object.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "TOPRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "The top right corner of the object.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "MIDDLELEFT",
                "@rwaccess": "readonly",
                "shortdesc": "The middle point on the left side of the object.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "MIDDLECENTER",
                "@rwaccess": "readonly",
                "shortdesc": "The center of the object.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "MIDDLERIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "The middle point on the right side of the object.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "BOTTOMLEFT",
                "@rwaccess": "readonly",
                "shortdesc": "The bottom left corner of the object.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "BOTTOMCENTER",
                "@rwaccess": "readonly",
                "shortdesc": "The middle point of the bottom of the object.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "BOTTOMRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "The bottom right corner of the object.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            }
        ],
        "methods": []
    },
    "ResampleMethod": {
        "class": "ResampleMethod",
        "superClass": null,
        "shortdesc": "The method to use to resample the image.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "Does not resample.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "NEARESTNEIGHBOR",
                "@rwaccess": "readonly",
                "shortdesc": "Chooses a pixel in the center of the sample area and replaces the entire area with that pixel color. Same as subsampling.",
                "description": "Significantly reduces the conversion time compared with downsampling but results in images that are less smooth and continuous.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "BILINEAR",
                "@rwaccess": "readonly",
                "shortdesc": "Averages the pixels in a sample area and replaces the entire area with the average pixel color at the specified resolution. Same as average downsampling.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "BICUBIC",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a weighted average to determine pixel color, which usually yields better results than the simple averageing method of downsampling.",
                "description": "The slowest but most precise method, resulting in the smoothest gradations.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BICUBICSHARPER",
                "@rwaccess": "readonly",
                "shortdesc": "A good method for reducing the size of an image based on Bicubic interpolation with enhanced sharpening. Maintains the detail in a resampled image.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "BICUBICSMOOTHER",
                "@rwaccess": "readonly",
                "shortdesc": "A good method for enlarging images based on Bicubic interpolation but designed to produce smoother results.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "BICUBICAUTOMATIC",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "AUTOMATIC",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "PRESERVEDETAILS",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            }
        ],
        "methods": []
    },
    "OperatingSystem": {
        "class": "OperatingSystem",
        "superClass": null,
        "shortdesc": "The operating system.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "OS2",
                "@rwaccess": "readonly",
                "shortdesc": "Mac OS\/2 operating system.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "WINDOWS",
                "@rwaccess": "readonly",
                "shortdesc": "Windows operating system.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "ForcedColors": {
        "class": "ForcedColors",
        "superClass": null,
        "shortdesc": "The colors whose inclusion to force in the color table.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No forced colors.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BLACKWHITE",
                "@rwaccess": "readonly",
                "shortdesc": "Forces pure black and white.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PRIMARIES",
                "@rwaccess": "readonly",
                "shortdesc": "Forces red, green, blue, cyan, magenta, yellow, black, and white.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "WEB",
                "@rwaccess": "readonly",
                "shortdesc": "Forces the 216 web-safe colors.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "PaletteType": {
        "class": "PaletteType",
        "superClass": null,
        "shortdesc": "The palette type for converting an image to indexed color.",
        "elementCount": 1,
        "propertyCount": 12,
        "methodCount": 0,
        "properties": [
            {
                "@name": "EXACT",
                "@rwaccess": "readonly",
                "shortdesc": "The palette uses the exact colors appearing in the RGB image; available only if the image uses 256 or fewer colors.",
                "description": "Because the image's palette contains all colors in the image, there is no dithering.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MACOSPALETTE",
                "@rwaccess": "readonly",
                "shortdesc": "The Mac OS default 8-bit palette, whch is based on a uniform sampling of RGB colors.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "WINDOWSPALETTE",
                "@rwaccess": "readonly",
                "shortdesc": "The Windows system's default 8-bit palette, whch is based on a uniform sampling of RGB colors.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "WEBPALETTE",
                "@rwaccess": "readonly",
                "shortdesc": "The 216-color palette that web browsers, regardless of platform, use to display images on a monitor limited to 256 colors.",
                "description": "A subset of the Mac OS 8-bit palette. Use this option to avoid browser dither when viewing images on a monitor display limited to 256 colors.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "UNIFORM",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a palette by uniformly sampling colors from the RGB color cube.",
                "description": "For example, if Photoshop takes six evenly spaced color levels each of red, green, and blue, the combination produces a uniform palette of 216 colors (6 cubed = 6 x 6 x 6 = 216). The total number of colors displayed in an image corresponds to the nearest perfect cube (8, 27, 64, 125, or 216) that is less than the value in the Colors text box.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "LOCALPERCEPTUAL",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a custom palette by giving priority to colors for in the image which the human eye has greater sensitivity.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "LOCALSELECTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a color table similar to the Perceptual color table, but favoring broad areas of color in the image and the preservation of web colors.",
                "description": "Usually produces images with the greatest color integrity.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "LOCALADAPTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a palette by sampling the colors from the spectrum appearing most commonly in the image.",
                "description": "For example, an RGB image with only the colors green and blue produces a palette made primarily of greens and blues.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "MASTERPERCEPTUAL",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a custom palette by giving priority to colors in a group of open images with the same color palette for which the human eye has greater sensitivity.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "MASTERSELECTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a color table similar to the Master Perceptual color table, but favoring broad areas of color and the preservation of web colors.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "MASTERADAPTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a palette by sampling the colors from the spectrum appearing most commonly in a group of open images that share the same color palette.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "PREVIOUSPALETTE",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the custom palette from the previous conversion, making it easy to convert several images with the same custom palette.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            }
        ],
        "methods": []
    },
    "DitherType": {
        "class": "DitherType",
        "superClass": null,
        "shortdesc": "The type of dither.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No dither is used.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DIFFUSION",
                "@rwaccess": "readonly",
                "shortdesc": "Diffuses dither effects in random patterns across adjacent pixels.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PATTERN",
                "@rwaccess": "readonly",
                "shortdesc": "Applies a halftone-like square pattern.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "NOISE",
                "@rwaccess": "readonly",
                "shortdesc": "Applies a random pattern but without diffusing the pattern across adjacent pixels; prevents the appearance of seams.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "MacPreviewType": {
        "class": "MacPreviewType",
        "superClass": null,
        "shortdesc": "The type of image to use as a low-resolution preview in the destination application.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "Does not use a preview.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MONOCHROMETIFF",
                "@rwaccess": "readonly",
                "shortdesc": "Monochrome TIFF.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "EIGHTBITTIFF",
                "@rwaccess": "readonly",
                "shortdesc": "8-bit TIFF.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "MACOSMONOCHROME",
                "@rwaccess": "readonly",
                "shortdesc": "Monochrome.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "MACOSEIGHTBIT",
                "@rwaccess": "readonly",
                "shortdesc": "8-bit.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "MACOSJPEG",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            }
        ],
        "methods": []
    },
    "SaveEncoding": {
        "class": "SaveEncoding",
        "superClass": null,
        "shortdesc": "The encoding to use when saving documents.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ASCII",
                "@rwaccess": "readonly",
                "shortdesc": "ASCII.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "BINARY",
                "@rwaccess": "readonly",
                "shortdesc": "Binary.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "JPEGLOW",
                "@rwaccess": "readonly",
                "shortdesc": "Low quality JPEG encoding (high amount of compression).",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "JPEGMEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium quality JPEG encoding (medium compression).",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "JPEGHIGH",
                "@rwaccess": "readonly",
                "shortdesc": "High quality JPEG encoding.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "JPEGMAXIMUM",
                "@rwaccess": "readonly",
                "shortdesc": "Maximum quality JPEG encoding (very little compression).",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            }
        ],
        "methods": []
    },
    "FormatOptionsType": {
        "class": "FormatOptionsType",
        "superClass": null,
        "shortdesc": "The options for saving a JPEG file.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "STANDARDBASELINE",
                "@rwaccess": "readonly",
                "shortdesc": "Baseline (Standard). Recognized by most web browsers.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "OPTIMIZEDBASELINE",
                "@rwaccess": "readonly",
                "shortdesc": "Baseline (Optimized). Optimized color and a slightly reduced file size.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PROGRESSIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Displays a series of increasingly detailed scans as the image downloads.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PDFEncodingType": {
        "class": "PDFEncodingType",
        "superClass": null,
        "shortdesc": "The type of compression to use when saving a document in PDF format.",
        "elementCount": 1,
        "propertyCount": 15,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No encoding.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "PDFZIP",
                "@rwaccess": "readonly",
                "shortdesc": "Zip compression.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "JPEG",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PDFZIP4BIT",
                "@rwaccess": "readonly",
                "shortdesc": "Zip compression with 4-bit image quality.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "JPEGHIGH",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression with high image quality.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "JPEGMEDHIGH",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression with medium high image quality.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "JPEGMED",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression with medium image quality.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "JPEGMEDLOW",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression with medium low image quality.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "JPEGLOW",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression with low image quality.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "JPEG2000HIGH",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG2000 compression with high image quality.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "JPEG2000MEDHIGH",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG2000 compression with medium high image quality.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "JPEG2000MED",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG2000 compression with medium image quality.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "JPEG2000MEDLOW",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG2000 compression with medium low image quality.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "JPEG2000LOW",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG2000 compression with low image quality.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "JPEG2000LOSSLESS",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG2000 lossless compression.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            }
        ],
        "methods": []
    },
    "PDFStandardType": {
        "class": "PDFStandardType",
        "superClass": null,
        "shortdesc": "The PDF\/X standard with which the document complies.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "The document does not use the PDF\/X standard.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "PDFX1A2001",
                "@rwaccess": "readonly",
                "shortdesc": "PDF\/X-1a standard, which requires all fonts to be embedded, the appropriate PDF bounding boxes to be specified, and color to appear as CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PDFX1A2003",
                "@rwaccess": "readonly",
                "shortdesc": "PDF\/X-1a standard, which requires all fonts to be embedded, the appropriate PDF bounding boxes to be specified, and color to appear as CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PDFX32002",
                "@rwaccess": "readonly",
                "shortdesc": "PDF\/X-3 standard, which requires all fonts to be embedded and the appropriate PDF bounding boxes to be specified, and for color allows either the use of color management and device-independent color (CIE L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "PDFX32003",
                "@rwaccess": "readonly",
                "shortdesc": "PDF\/X-3 standard, which requires all fonts to be embedded and the appropriate PDF bounding boxes to be specified, and for color allows either the use of color management and device-independent color (CIE L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot colors, or both; can be opened in Acrobat 4.0 and Acrobat Reader 4.0 and later.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "PDFX42008",
                "@rwaccess": "readonly",
                "shortdesc": "PDF\/X-4 standard, which requires all fonts to be embedded and the appropriate PDF bounding boxes to be specified, and for color allows either the use of color management and device-independent color (CIE L*a*b, ICC-based color spaces, CalRGB, and CalGray) or CMYK, spot colors, or both; can be opened in Acrobat 8.0 and Acrobat Reader 8.0 and later.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "PDFCompatibilityType": {
        "class": "PDFCompatibilityType",
        "superClass": null,
        "shortdesc": "The PDF version with which to make the document compatible.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PDF13",
                "@rwaccess": "readonly",
                "shortdesc": "PDF 1.3 (Acrobat 4 or higher).",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PDF14",
                "@rwaccess": "readonly",
                "shortdesc": "PDF 1.4 (Acrobat 5 or higher).",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PDF15",
                "@rwaccess": "readonly",
                "shortdesc": "PDF 1.5 (Acrobat 6 or higher).",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "PDF16",
                "@rwaccess": "readonly",
                "shortdesc": "PDF 1.6 (Acrobat 7 or higher)",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "PDF17",
                "@rwaccess": "readonly",
                "shortdesc": "PDF 1.7 (Acrobat 9 or higher)",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "PDFResampleType": {
        "class": "PDFResampleType",
        "superClass": null,
        "shortdesc": "Downsampling options when saving as PDF.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "Does not downsample.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "PDFAVERAGE",
                "@rwaccess": "readonly",
                "shortdesc": "Averages the pixels in a sample area and replaces the entire area with the average pixel color at the specified resolution.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PDFSUBSAMPLE",
                "@rwaccess": "readonly",
                "shortdesc": "Chooses a pixel in the center of the sample area and replaces the entire area with that pixel color; significantly reduces conversion time but results in images that are less smooth and continuous.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PDFBICUBIC",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a weighted average to determine pixel color, which usually yields better results than the simple averaging method of downsampling. The slowest but most precise method, resulting in the smoothest gradations.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PICTCompression": {
        "class": "PICTCompression",
        "superClass": null,
        "shortdesc": "The compression type to use whan saving as PICT.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No compression.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "JPEGLOWPICT",
                "@rwaccess": "readonly",
                "shortdesc": "Low quality JPEG encoding (high amount of compression).",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "JPEGMEDIUMPICT",
                "@rwaccess": "readonly",
                "shortdesc": "Medium quality JPEG encoding (medium amount of compression).",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "JPEGHIGHPICT",
                "@rwaccess": "readonly",
                "shortdesc": "High quality JPEG encoding.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "JPEGMAXIMUMPICT",
                "@rwaccess": "readonly",
                "shortdesc": "Maximum quality JPEG encoding (very little compression).",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            }
        ],
        "methods": []
    },
    "MacExtensionType": {
        "class": "MacExtensionType",
        "superClass": null,
        "shortdesc": "The formatting for the filename extension.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "Does not use an extension.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "LOWERCASE",
                "@rwaccess": "readonly",
                "shortdesc": "The extension is in lowercase letters.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "UPPERCASE",
                "@rwaccess": "readonly",
                "shortdesc": "The extension is in uppercase letters.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "TiffEncodingType": {
        "class": "TiffEncodingType",
        "superClass": null,
        "shortdesc": "The encoding to use when saving to TIFF format.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No compression.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TIFFLZW",
                "@rwaccess": "readonly",
                "shortdesc": "LZW compression, which is lossless and most useful for images with large areas of single color.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "JPEG",
                "@rwaccess": "readonly",
                "shortdesc": "JPEG compression, which is lossy and recommended for continuous-tone images, such as photographs.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "TIFFZIP",
                "@rwaccess": "readonly",
                "shortdesc": "Zip compression, which is lossless and most effective for images that contain large areas of single color.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "LayerCompressionType": {
        "class": "LayerCompressionType",
        "superClass": null,
        "shortdesc": "The layer compression type.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "RLE",
                "@rwaccess": "readonly",
                "shortdesc": "Run Length Encoding, which is lossless.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ZIP",
                "@rwaccess": "readonly",
                "shortdesc": "Zip compression, which is lossless and most effective for images that contain large areas of single color.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "ByteOrderType": {
        "class": "ByteOrderType",
        "superClass": null,
        "shortdesc": "The platform-specific order in which bytes will be read.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "IBM",
                "@rwaccess": "readonly",
                "shortdesc": "IBM PC.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MACOS",
                "@rwaccess": "readonly",
                "shortdesc": "Mac OS.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "DCSType": {
        "class": "DCSType",
        "superClass": null,
        "shortdesc": "The DCS format.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NOCOMPOSITE",
                "@rwaccess": "readonly",
                "shortdesc": "Does not create a composite file.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "GRAYSCALECOMPOSITE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a grayscale composite file in addition to DCS files.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "COLORCOMPOSITE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a color composite file in addition to DCS files.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "TrimType": {
        "class": "TrimType",
        "superClass": null,
        "shortdesc": "The type of pixels to trim around an image.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "TRANSPARENT",
                "@rwaccess": "readonly",
                "shortdesc": "Trims away transparency at the edges of the image, leaving the smallest image containing nontransparent pixels.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "TOPLEFT",
                "@rwaccess": "readonly",
                "shortdesc": "Removes from the image an area the color of the upper left pixel.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BOTTOMRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Removes from the image an area the color of the lower right pixel.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            }
        ],
        "methods": []
    },
    "ColorPicker": {
        "class": "ColorPicker",
        "superClass": null,
        "shortdesc": "The color picker to use.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ADOBE",
                "@rwaccess": "readonly",
                "shortdesc": "The Adobe Color Picker.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "APPLE",
                "@rwaccess": "readonly",
                "shortdesc": "The built-in Apple color picker.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "WINDOWS",
                "@rwaccess": "readonly",
                "shortdesc": "The built-in Windows color picker.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "PLUGIN",
                "@rwaccess": "readonly",
                "shortdesc": "An installed plug-in color picker.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "ResetTarget": {
        "class": "ResetTarget",
        "superClass": null,
        "shortdesc": "The type of object(s) to reset to default settings.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ALLWARNINGS",
                "@rwaccess": "readonly",
                "shortdesc": "Warning dialogs.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ALLTOOLS",
                "@rwaccess": "readonly",
                "shortdesc": "Tools.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "EVERYTHING",
                "@rwaccess": "readonly",
                "shortdesc": "All targets.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SaveBehavior": {
        "class": "SaveBehavior",
        "superClass": null,
        "shortdesc": "The application's behavior regarding image previews and file extensions when a save method is called.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NEVERSAVE",
                "@rwaccess": "readonly",
                "shortdesc": "Never save the item with the file.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ALWAYSSAVE",
                "@rwaccess": "readonly",
                "shortdesc": "Always save the item with the file.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "ASKWHENSAVING",
                "@rwaccess": "readonly",
                "shortdesc": "Prompt the user whether to save the item with the file.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PaintingCursors": {
        "class": "PaintingCursors",
        "superClass": null,
        "shortdesc": "The pointer for the following tools: Marquee, Lasso, Polygonal Lasso, Magic Wand, Crop, Slice, Patch Eyedropper, Pen, Gradient, Line, Paint Bucket, Magnetic Lasso, Magnetic Pen, Freeform Pen, Measure, and Color Sampler.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "STANDARD",
                "@rwaccess": "readonly",
                "shortdesc": "Displays pointers as tool icons.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PRECISE",
                "@rwaccess": "readonly",
                "shortdesc": "Displays pointers as cross hairs.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "BRUSHSIZE",
                "@rwaccess": "readonly",
                "shortdesc": "Displays cursors as brush shapes representing the size of the current brush. Valid only for painting cursors.",
                "description": "Brush size cursors may not appear for very large brushes.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "OtherPaintingCursors": {
        "class": "OtherPaintingCursors",
        "superClass": null,
        "shortdesc": "The pointer for the following tools: Eraser, Pencil, Paintbrush, Healing Brush, Rubber Stamp, Pattern Stamp, Smudge, Blur, Sharpen, Dodge, Burn, Sponge.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "STANDARDOTHER",
                "@rwaccess": "readonly",
                "shortdesc": "Displays pointers as tool icons.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PRECISEOTHER",
                "@rwaccess": "readonly",
                "shortdesc": "Displays pointers as cross hairs.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "GridSize": {
        "class": "GridSize",
        "superClass": null,
        "shortdesc": "The size of grid squares.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No grid is displayed.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "Small grid squares.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium grid squares.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "Large grid squares.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "Units": {
        "class": "Units",
        "superClass": null,
        "shortdesc": "The measurement unit for ruler increments.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PIXELS",
                "@rwaccess": "readonly",
                "shortdesc": "Pixels.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "INCHES",
                "@rwaccess": "readonly",
                "shortdesc": "Inches.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CM",
                "@rwaccess": "readonly",
                "shortdesc": "Centimeters.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "MM",
                "@rwaccess": "readonly",
                "shortdesc": "Millimeters.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "POINTS",
                "@rwaccess": "readonly",
                "shortdesc": "Points.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "PICAS",
                "@rwaccess": "readonly",
                "shortdesc": "Picas.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "PERCENT",
                "@rwaccess": "readonly",
                "shortdesc": "Percent.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "TypeUnits": {
        "class": "TypeUnits",
        "superClass": null,
        "shortdesc": "The measurement unit for type.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PIXELS",
                "@rwaccess": "readonly",
                "shortdesc": "Pixels.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MM",
                "@rwaccess": "readonly",
                "shortdesc": "Millimeters.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "POINTS",
                "@rwaccess": "readonly",
                "shortdesc": "Points.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "PointType": {
        "class": "PointType",
        "superClass": null,
        "shortdesc": "The point type.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "POSTSCRIPT",
                "@rwaccess": "readonly",
                "shortdesc": "72 points per inch.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TRADITIONAL",
                "@rwaccess": "readonly",
                "shortdesc": "72.27 points per inch.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "GridLineStyle": {
        "class": "GridLineStyle",
        "superClass": null,
        "shortdesc": "The line style for nonprinting grids displayed over images.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SOLID",
                "@rwaccess": "readonly",
                "shortdesc": "Solid.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DASHED",
                "@rwaccess": "readonly",
                "shortdesc": "Dashed.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DOTTED",
                "@rwaccess": "readonly",
                "shortdesc": "Dotted.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "GuideLineStyle": {
        "class": "GuideLineStyle",
        "superClass": null,
        "shortdesc": "The line style for nonprinting guides displayed over images.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SOLID",
                "@rwaccess": "readonly",
                "shortdesc": "Solid.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DASHED",
                "@rwaccess": "readonly",
                "shortdesc": "Dashed.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "BlendMode": {
        "class": "BlendMode",
        "superClass": null,
        "shortdesc": "Controls how pixels in the image are blended.",
        "elementCount": 1,
        "propertyCount": 28,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PASSTHROUGH",
                "@rwaccess": "readonly",
                "shortdesc": "Allows any blend modes, advanced blending options, and opacity and fill values applied to layers within a set to affect layers below the set in the Layers palette.",
                "description": "Valid only for layer sets. To restrict blend modes of the layers within a set, change the layer set's blend mode to Normal.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Edits or paints each pixel to make it the result color. (Called \"Threshold\" when you\u2019re working with a bitmapped or indexed-color image.)",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DISSOLVE",
                "@rwaccess": "readonly",
                "shortdesc": "Edits or paints each pixel to make it the result color. However, the result color is a random replacement of the pixels with the base color or the blend color, depending on the opacity at any pixel location.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "DARKEN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and selects the base or blend color\u2014whichever is darker\u2014as the result color. Pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "MULTIPLY",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and multiplies the base color by the blend color. The result color is always a darker color. Multiplying any color with black produces black. Multiplying any color with white leaves the color unchanged. When you\u2019re painting with a color other than black or white, successive strokes with a painting tool produce progressively darker colors. The effect is similar to drawing on the image with multiple marking pens.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "COLORBURN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and darkens the base color to reflect the blend color by increasing the contrast. Blending with white produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "LINEARBURN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and darkens the base color to reflect the blend color by decreasing the brightness. Blending with white produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "LIGHTEN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and selects the base or blend color\u2014whichever is lighter\u2014as the result color. Pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "SCREEN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at each channel\u2019s color information and multiplies the inverse of the blend and base colors. The result color is always a lighter color. Screening with black leaves the color unchanged. Screening with white produces white. The effect is similar to projecting multiple photographic slides on top of each other.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "COLORDODGE",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and brightens the base color to reflect the blend color by decreasing the contrast. Blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "LINEARDODGE",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and brightens the base color to reflect the blend color by increasing the brightness. Blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "OVERLAY",
                "@rwaccess": "readonly",
                "shortdesc": "Multiplies or screens the colors, depending on the base color. Patterns or colors overlay the existing pixels while preserving the highlights and shadows of the base color. The base color is not replaced but is mixed with the blend color to reflect the lightness or darkness of the original color.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "SOFTLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Darkens or lightens the colors, depending on the blend color. The effect is similar to shining a diffused spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened as if it were dodged. If the blend color is darker than 50% gray, the image is darkened as if it were burned in. Painting with pure black or white produces a distinctly darker or lighter area but does not result in pure black or white.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "HARDLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Multiplies or screens the colors, depending on the blend color. The effect is similar to shining a harsh spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened, as if it were screened. This is useful for adding highlights to an image. If the blend color is darker than 50% gray, the image is darkened, as if it were multiplied. This is useful for adding shadows to an image. Painting with pure black or white results in pure black or white.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "VIVIDLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Burns or dodges the colors by increasing or decreasing the contrast, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by decreasing the contrast. If the blend color is darker than 50% gray, the image is darkened by increasing the contrast.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "LINEARLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Burns or dodges the colors by decreasing or increasing the brightness, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by increasing the brightness. If the blend color is darker than 50% gray, the image is darkened by decreasing the brightness.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "PINLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Replaces the colors, depending on the blend color. If the blend color (light source) is lighter than 50% gray, pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change. If the blend color is darker than 50% gray, pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change. This is useful for adding special effects to an image.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "DIFFERENCE",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and subtracts either the blend color from the base color or the base color from the blend color, depending on which has the greater brightness value. Blending with white inverts the base color values; blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            },
            {
                "@name": "EXCLUSION",
                "@rwaccess": "readonly",
                "shortdesc": "Creates an effect similar to but lower in contrast than the Difference mode. Blending with white inverts the base color values. Blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "19"
                }
            },
            {
                "@name": "SUBTRACT",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "29"
                }
            },
            {
                "@name": "DIVIDE",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "30"
                }
            },
            {
                "@name": "HUE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the luminance and saturation of the base color and the hue of the blend color.",
                "datatype": {
                    "type": "int",
                    "value": "20"
                }
            },
            {
                "@name": "SATURATION",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the luminance and hue of the base color and the saturation of the blend color. Painting with this mode in an area with no (0) saturation (gray) causes no change.",
                "datatype": {
                    "type": "int",
                    "value": "21"
                }
            },
            {
                "@name": "COLORBLEND",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the luminance of the base color and the hue and saturation of the blend color. This preserves the gray levels in the image and is useful for coloring monochrome images and for tinting color images.",
                "datatype": {
                    "type": "int",
                    "value": "22"
                }
            },
            {
                "@name": "LUMINOSITY",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the hue and saturation of the base color and the luminance of the blend color. This mode creates an inverse effect from that of the Color mode.",
                "datatype": {
                    "type": "int",
                    "value": "23"
                }
            },
            {
                "@name": "HARDMIX",
                "@rwaccess": "readonly",
                "shortdesc": "Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization\/thresholding.",
                "datatype": {
                    "type": "int",
                    "value": "26"
                }
            },
            {
                "@name": "LIGHTERCOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization\/thresholding.",
                "datatype": {
                    "type": "int",
                    "value": "27"
                }
            },
            {
                "@name": "DARKERCOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization\/thresholding.",
                "datatype": {
                    "type": "int",
                    "value": "28"
                }
            }
        ],
        "methods": []
    },
    "ColorBlendMode": {
        "class": "ColorBlendMode",
        "superClass": null,
        "shortdesc": "The color blend mode type.",
        "elementCount": 1,
        "propertyCount": 29,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Edits or paints each pixel to make it the result color. (Called \"Threshold\" when you\u2019re working with a bitmapped or indexed-color image.)",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DISSOLVE",
                "@rwaccess": "readonly",
                "shortdesc": "Edits or paints each pixel to make it the result color, which is a random replacement of the pixels with the base color or the blend color, depending on the opacity at any pixel location.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "BEHIND",
                "@rwaccess": "readonly",
                "shortdesc": "Edits or paints only on the transparent part of a layer. Works only in layers in which transparent pixels locked = false and is analogous to painting on the back of transparent areas on a sheet of acetate.",
                "datatype": {
                    "type": "int",
                    "value": "24"
                }
            },
            {
                "@name": "CLEAR",
                "@rwaccess": "readonly",
                "shortdesc": "Edits or paints each pixel and makes it transparent. Works only in layers in which transparent pixels locked = false.",
                "datatype": {
                    "type": "int",
                    "value": "25"
                }
            },
            {
                "@name": "DARKEN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and selects the base or blend color\u2014whichever is darker\u2014as the result color. Pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "MULTIPLY",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and multiplies the base color by the blend color. The result color is always a darker color. Multiplying any color with black produces black. Multiplying any color with white leaves the color unchanged. When you\u2019re painting with a color other than black or white, successive strokes with a painting tool produce progressively darker colors. The effect is similar to drawing on the image with multiple marking pens.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "COLORBURN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and darkens the base color to reflect the blend color by increasing the contrast. Blending with white produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "LINEARBURN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and darkens the base color to reflect the blend color by decreasing the brightness. Blending with white produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "LIGHTEN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and selects the base or blend color\u2014whichever is lighter\u2014as the result color. Pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "SCREEN",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at each channel\u2019s color information and multiplies the inverse of the blend and base colors. The result color is always a lighter color. Screening with black leaves the color unchanged. Screening with white produces white. The effect is similar to projecting multiple photographic slides on top of each other.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "COLORDODGE",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and brightens the base color to reflect the blend color by decreasing the contrast. Blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "LINEARDODGE",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and brightens the base color to reflect the blend color by increasing the brightness. Blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "OVERLAY",
                "@rwaccess": "readonly",
                "shortdesc": "Multiplies or screens the colors, depending on the base color. Patterns or colors overlay the existing pixels while preserving the highlights and shadows of the base color. The base color is not replaced but is mixed with the blend color to reflect the lightness or darkness of the original color.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "SOFTLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Darkens or lightens the colors, depending on the blend color. The effect is similar to shining a diffused spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened as if it were dodged. If the blend color is darker than 50% gray, the image is darkened as if it were burned in. Painting with pure black or white produces a distinctly darker or lighter area but does not result in pure black or white.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "HARDLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Multiplies or screens the colors, depending on the blend color. The effect is similar to shining a harsh spotlight on the image. If the blend color (light source) is lighter than 50% gray, the image is lightened, as if it were screened. This is useful for adding highlights to an image. If the blend color is darker than 50% gray, the image is darkened, as if it were multiplied. This is useful for adding shadows to an image. Painting with pure black or white results in pure black or white.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "VIVIDLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Burns or dodges the colors by increasing or decreasing the contrast, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by decreasing the contrast. If the blend color is darker than 50% gray, the image is darkened by increasing the contrast.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "LINEARLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Burns or dodges the colors by decreasing or increasing the brightness, depending on the blend color. If the blend color (light source) is lighter than 50% gray, the image is lightened by increasing the brightness. If the blend color is darker than 50% gray, the image is darkened by decreasing the brightness.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "PINLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Replaces the colors, depending on the blend color. If the blend color (light source) is lighter than 50% gray, pixels darker than the blend color are replaced, and pixels lighter than the blend color do not change. If the blend color is darker than 50% gray, pixels lighter than the blend color are replaced, and pixels darker than the blend color do not change. This is useful for adding special effects to an image.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "DIFFERENCE",
                "@rwaccess": "readonly",
                "shortdesc": "Looks at the color information in each channel and subtracts either the blend color from the base color or the base color from the blend color, depending on which has the greater brightness value. Blending with white inverts the base color values; blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            },
            {
                "@name": "EXCLUSION",
                "@rwaccess": "readonly",
                "shortdesc": "Creates an effect similar to but lower in contrast than the Difference mode. Blending with white inverts the base color values. Blending with black produces no change.",
                "datatype": {
                    "type": "int",
                    "value": "19"
                }
            },
            {
                "@name": "SUBTRACT",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "29"
                }
            },
            {
                "@name": "DIVIDE",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "30"
                }
            },
            {
                "@name": "HUE",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the luminance and saturation of the base color and the hue of the blend color.",
                "datatype": {
                    "type": "int",
                    "value": "20"
                }
            },
            {
                "@name": "SATURATION",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the luminance and hue of the base color and the saturation of the blend color. Painting with this mode in an area with no (0) saturation (gray) causes no change.",
                "datatype": {
                    "type": "int",
                    "value": "21"
                }
            },
            {
                "@name": "COLOR",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the luminance of the base color and the hue and saturation of the blend color. This preserves the gray levels in the image and is useful for coloring monochrome images and for tinting color images.",
                "datatype": {
                    "type": "int",
                    "value": "22"
                }
            },
            {
                "@name": "LUMINOSITY",
                "@rwaccess": "readonly",
                "shortdesc": "Creates a result color with the hue and saturation of the base color and the luminance of the blend color. This mode creates an inverse effect from that of the Color mode.",
                "datatype": {
                    "type": "int",
                    "value": "23"
                }
            },
            {
                "@name": "HARDMIX",
                "@rwaccess": "readonly",
                "shortdesc": "Lighter colors lighten the result, and darker colors darken the result. 50% gray as a blend color has no effect on the result color. Lowering the fill opacity creates less posterization\/thresholding.",
                "datatype": {
                    "type": "int",
                    "value": "26"
                }
            },
            {
                "@name": "LIGHTERCOLOR",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "27"
                }
            },
            {
                "@name": "DARKERCOLOR",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "28"
                }
            }
        ],
        "methods": []
    },
    "RasterizeType": {
        "class": "RasterizeType",
        "superClass": null,
        "shortdesc": "The type of the layer content to rasterize.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "TEXTCONTENTS",
                "@rwaccess": "readonly",
                "shortdesc": "Rasterizes the type on a type layer. Doesn't rasterize any other vector data on the layer.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SHAPE",
                "@rwaccess": "readonly",
                "shortdesc": "Rasterizes a shape layer.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FILLCONTENT",
                "@rwaccess": "readonly",
                "shortdesc": "Rasterizes the fill of a shape layer, leaving the vector mask.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAYERCLIPPINGPATH",
                "@rwaccess": "readonly",
                "shortdesc": "Rasterizes the vector mask of a shape layer, turning it into a layer mask.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "ENTIRELAYER",
                "@rwaccess": "readonly",
                "shortdesc": "Rasterizes all vector data on the layer.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "LINKEDLAYERS",
                "@rwaccess": "readonly",
                "shortdesc": "Rasterizes the selected layers.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            }
        ],
        "methods": []
    },
    "Justification": {
        "class": "Justification",
        "superClass": null,
        "shortdesc": "The placement of paragraph text within the bounding box.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "LEFT",
                "@rwaccess": "readonly",
                "shortdesc": "Aligns the left edges, leaving the right edge ragged.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CENTER",
                "@rwaccess": "readonly",
                "shortdesc": "Text is centered on each line.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "RIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Aligns the right edges, leaving the left edge ragged.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LEFTJUSTIFIED",
                "@rwaccess": "readonly",
                "shortdesc": "Justifies all lines except the last, which is left-aligned.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "CENTERJUSTIFIED",
                "@rwaccess": "readonly",
                "shortdesc": "Justifies all lines except the last, which is center-aligned.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "RIGHTJUSTIFIED",
                "@rwaccess": "readonly",
                "shortdesc": "Justifies all lines except the last, which is right-aligned.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "FULLYJUSTIFIED",
                "@rwaccess": "readonly",
                "shortdesc": "Justifies all lines including the last, which is force-justified.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "AntiAlias": {
        "class": "AntiAlias",
        "superClass": null,
        "shortdesc": "The method to use to smooth edges by softening the color transition between edge pixels and background pixels.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "Does not use anti-aliasing.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SHARP",
                "@rwaccess": "readonly",
                "shortdesc": "Makes type appear its sharpest.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CRISP",
                "@rwaccess": "readonly",
                "shortdesc": "Makes type appear somewhat sharp.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "STRONG",
                "@rwaccess": "readonly",
                "shortdesc": "Makes type appear heavier.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "SMOOTH",
                "@rwaccess": "readonly",
                "shortdesc": "Makes type appear smoother.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "Case": {
        "class": "Case",
        "superClass": null,
        "shortdesc": "The capitalization to use.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Uses uppercase and lowercase letters.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ALLCAPS",
                "@rwaccess": "readonly",
                "shortdesc": "Uses all uppercase letters.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SMALLCAPS",
                "@rwaccess": "readonly",
                "shortdesc": "Uses small caps for lowercase letters.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "Language": {
        "class": "Language",
        "superClass": null,
        "shortdesc": "The language to use.",
        "elementCount": 1,
        "propertyCount": 17,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ENGLISHUSA",
                "@rwaccess": "readonly",
                "shortdesc": "American English.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ENGLISHUK",
                "@rwaccess": "readonly",
                "shortdesc": "British English.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FRENCH",
                "@rwaccess": "readonly",
                "shortdesc": "French.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "CANADIANFRENCH",
                "@rwaccess": "readonly",
                "shortdesc": "Canadian French.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "FINNISH",
                "@rwaccess": "readonly",
                "shortdesc": "Finnish.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "GERMAN",
                "@rwaccess": "readonly",
                "shortdesc": "German.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "OLDGERMAN",
                "@rwaccess": "readonly",
                "shortdesc": "Old German.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "SWISSGERMAN",
                "@rwaccess": "readonly",
                "shortdesc": "Swiss German.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "ITALIAN",
                "@rwaccess": "readonly",
                "shortdesc": "Italian.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "NORWEGIAN",
                "@rwaccess": "readonly",
                "shortdesc": "Norwegian.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "NYNORSKNORWEGIAN",
                "@rwaccess": "readonly",
                "shortdesc": "Nynorsk Norwegian.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "PORTUGUESE",
                "@rwaccess": "readonly",
                "shortdesc": "Portuguese.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "BRAZILLIANPORTUGUESE",
                "@rwaccess": "readonly",
                "shortdesc": "Brazillian Portuguese.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "SPANISH",
                "@rwaccess": "readonly",
                "shortdesc": "Spanish.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "SWEDISH",
                "@rwaccess": "readonly",
                "shortdesc": "Swedish.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "DUTCH",
                "@rwaccess": "readonly",
                "shortdesc": "Dutch.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "DANISH",
                "@rwaccess": "readonly",
                "shortdesc": "Danish.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            }
        ],
        "methods": []
    },
    "TextType": {
        "class": "TextType",
        "superClass": null,
        "shortdesc": "The type of text.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "POINTTEXT",
                "@rwaccess": "readonly",
                "shortdesc": "Text that does not wrap.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PARAGRAPHTEXT",
                "@rwaccess": "readonly",
                "shortdesc": "Text that wraps within a bounding box.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "WarpStyle": {
        "class": "WarpStyle",
        "superClass": null,
        "shortdesc": "The warp style for text.",
        "elementCount": 1,
        "propertyCount": 16,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No warp.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ARC",
                "@rwaccess": "readonly",
                "shortdesc": "The type is warped in the shape of an arc.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "ARCLOWER",
                "@rwaccess": "readonly",
                "shortdesc": "Warp is heavier on the lower or left edge of the text than on the upper or right edge.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "ARCUPPER",
                "@rwaccess": "readonly",
                "shortdesc": "Warp is heavier on the upper or right edge of the text than on the lower or left edge.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "ARCH",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped in the form of an arch.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "BULGE",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped outward on both the upper and lower or right and left edges.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "SHELLLOWER",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped downward or to the right in the shape of a fan-like seashell.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "SHELLUPPER",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped upward or to the left in the shape of a fan-like seashell.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "FLAG",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped in the shape of a waving flag.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "WAVE",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped in the shape of a wave.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "FISH",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped in the shape of a fish.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "RISE",
                "@rwaccess": "readonly",
                "shortdesc": "Text is warped in an undulating, rising pattern.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "FISHEYE",
                "@rwaccess": "readonly",
                "shortdesc": "Text bulges in the middle and is squeezed on the edges as if viewed through a fisheye lens.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "INFLATE",
                "@rwaccess": "readonly",
                "shortdesc": "Text is inflated.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "SQUEEZE",
                "@rwaccess": "readonly",
                "shortdesc": "Text is squeezed.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "TWIST",
                "@rwaccess": "readonly",
                "shortdesc": "Text is twisted.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            }
        ],
        "methods": []
    },
    "TextComposer": {
        "class": "TextComposer",
        "superClass": null,
        "shortdesc": "The text composer.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ADOBESINGLELINE",
                "@rwaccess": "readonly",
                "shortdesc": "Offers a traditional approach to composing type one line at a time. Useful if you prefer to have manual control over how lines break.",
                "description": "Uses the following principles when considering a breakpoint: Compressed or expanded word spacing is preferable to hyphenation; Hyphenation is preferable to compressed or expanded letter spacing; If spacing must be adjusted, compression is better than expansion.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ADOBEEVERYLINE",
                "@rwaccess": "readonly",
                "shortdesc": "Considers a network of break points for a range of lines and thus optimizes earlier lines in the paragraph to eliminate especially unattractive breaks later on. Results in more even spacing and fewer hyphens.",
                "description": "The Adobe Every-line composer approaches composition by identifying possible breakpoints, evaluating them, and assigning a weighted penalty based on these principles: Highest importance is given to evenness of letter and word spacing; Possible breakpoints are evaluated and penalized according to how much they deviate from optimal spacing; Hyphenation is avoided when possible; Breakpoints that require hyphenation are penalized more than those that create uneven spacing; Good breakpoints are preferred over bad breakpoints.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "AutoKernType": {
        "class": "AutoKernType",
        "superClass": null,
        "shortdesc": "The type of kerning to use for characters.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "MANUAL",
                "@rwaccess": "readonly",
                "shortdesc": "Allows manual kerning.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "METRICS",
                "@rwaccess": "readonly",
                "shortdesc": "Uses kern pairs, which contain information about the spacing of specific pairs of letters.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "OPTICAL",
                "@rwaccess": "readonly",
                "shortdesc": "Adjusts the spacing between adjacent characters based on their shapes.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "StrikeThruType": {
        "class": "StrikeThruType",
        "superClass": null,
        "shortdesc": "The strikethrough style.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "STRIKEOFF",
                "@rwaccess": "readonly",
                "shortdesc": "No strikethrough.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "STRIKEHEIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "(For vertical type) The strikethrough is through the height of the text.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "STRIKEBOX",
                "@rwaccess": "readonly",
                "shortdesc": "(For vertical type) The strikethrough is through the em box.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "UnderlineType": {
        "class": "UnderlineType",
        "superClass": null,
        "shortdesc": "The type of underline.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "UNDERLINEOFF",
                "@rwaccess": "readonly",
                "shortdesc": "No underline.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "UNDERLINERIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "(For vertical type) The underline is to the right of the text.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "UNDERLINELEFT",
                "@rwaccess": "readonly",
                "shortdesc": "(For vertical type) The underline is to the left of the text.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SelectionType": {
        "class": "SelectionType",
        "superClass": null,
        "shortdesc": "The selection behavior when a selection already exists.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "REPLACE",
                "@rwaccess": "readonly",
                "shortdesc": "Replace the selected area.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "EXTEND",
                "@rwaccess": "readonly",
                "shortdesc": "Add the selection to an already selected area.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DIMINISH",
                "@rwaccess": "readonly",
                "shortdesc": "Remove the selection from the already selected area.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "INTERSECT",
                "@rwaccess": "readonly",
                "shortdesc": "Make the selection only the area where the new selection intersects the already selected area.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "ExportType": {
        "class": "ExportType",
        "superClass": null,
        "shortdesc": "The export options to use.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ILLUSTRATORPATHS",
                "@rwaccess": "readonly",
                "shortdesc": "Exports Photoshop paths as Adobe Illustrator files.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SAVEFORWEB",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the save for web export options.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "IllustratorPathType": {
        "class": "IllustratorPathType",
        "superClass": null,
        "shortdesc": "The paths to export.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "DOCUMENTBOUNDS",
                "@rwaccess": "readonly",
                "shortdesc": "Exports the document bounds.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ALLPATHS",
                "@rwaccess": "readonly",
                "shortdesc": "Exports all paths.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "NAMEDPATH",
                "@rwaccess": "readonly",
                "shortdesc": "Exports the specified path. To specify the path, see the path name property of the illustrator export options object.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "ChannelType": {
        "class": "ChannelType",
        "superClass": null,
        "shortdesc": "The type of channel.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "COMPONENT",
                "@rwaccess": "readonly",
                "shortdesc": "The channel related to the document color model.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MASKEDAREA",
                "@rwaccess": "readonly",
                "shortdesc": "The apha channel where color indicates a masked area.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SELECTEDAREA",
                "@rwaccess": "readonly",
                "shortdesc": "The lpha channel where color indicates a selected area.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "SPOTCOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "The alpha channel to store a spot color.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "RadialBlurMethod": {
        "class": "RadialBlurMethod",
        "superClass": null,
        "shortdesc": "The blur method to use.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SPIN",
                "@rwaccess": "readonly",
                "shortdesc": "Blurs along concentric circular lines at the specified degree of rotation.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ZOOM",
                "@rwaccess": "readonly",
                "shortdesc": "Blurs along radial lines, as if zooming into or out of the image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "RadialBlurQuality": {
        "class": "RadialBlurQuality",
        "superClass": null,
        "shortdesc": "The radial blur quality.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "DRAFT",
                "@rwaccess": "readonly",
                "shortdesc": "Produces fast but grainy results.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "GOOD",
                "@rwaccess": "readonly",
                "shortdesc": "Produces good results.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "BEST",
                "@rwaccess": "readonly",
                "shortdesc": "Produces best results.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SmartBlurQuality": {
        "class": "SmartBlurQuality",
        "superClass": null,
        "shortdesc": "The smart blur quality.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "LOW",
                "@rwaccess": "readonly",
                "shortdesc": "Low quality.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium quality.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "HIGH",
                "@rwaccess": "readonly",
                "shortdesc": "High quality.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SmartBlurMode": {
        "class": "SmartBlurMode",
        "superClass": null,
        "shortdesc": "The method to use for smart blurring.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Blur is applied to entire image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "EDGEONLY",
                "@rwaccess": "readonly",
                "shortdesc": "Blur is applied only to edges of color transitions.",
                "description": "Where significant contrast occurs, applies black-and-white edges.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "OVERLAYEDGE",
                "@rwaccess": "readonly",
                "shortdesc": "Blur is applied only to edges of color transitions.",
                "description": "Where significant contrast occurs, applies white edges.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "TextureType": {
        "class": "TextureType",
        "superClass": null,
        "shortdesc": "The type of texture or glass surface image to load for a texturizer or glass filter.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "BLOCKS",
                "@rwaccess": "readonly",
                "shortdesc": "The image appears as if viewed through glass blocks.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CANVAS",
                "@rwaccess": "readonly",
                "shortdesc": "The image appears as if painted on canvas.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FROSTED",
                "@rwaccess": "readonly",
                "shortdesc": "The image appears as if frosted.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "TINYLENS",
                "@rwaccess": "readonly",
                "shortdesc": "The image appears as if viewed through an array of tiny lenses.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "FILE",
                "@rwaccess": "readonly",
                "shortdesc": "Texture from an existing document.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "PolarConversionType": {
        "class": "PolarConversionType",
        "superClass": null,
        "shortdesc": "The method of polar distortion to use.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "RECTANGULARTOPOLAR",
                "@rwaccess": "readonly",
                "shortdesc": "The selection is converted from its rectangular to polar coordinates.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "POLARTORECTANGULAR",
                "@rwaccess": "readonly",
                "shortdesc": "The selection is converted from its polar to rectangular coordinates.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "RippleSize": {
        "class": "RippleSize",
        "superClass": null,
        "shortdesc": "The size of undulations.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "Small.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "Large.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "UndefinedAreas": {
        "class": "UndefinedAreas",
        "superClass": null,
        "shortdesc": "The method to use to treat undistorted areas or areas left blank in an image to which a filter in the Distort category has been applied.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "WRAPAROUND",
                "@rwaccess": "readonly",
                "shortdesc": "Fills the undefined space with content from the opposite edge of the image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "REPEATEDGEPIXELS",
                "@rwaccess": "readonly",
                "shortdesc": "Extends the colors of pixels along the edge of the image in the direction specified. Banding may result if the edge pixels are different colors.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "OffsetUndefinedAreas": {
        "class": "OffsetUndefinedAreas",
        "superClass": null,
        "shortdesc": "The method to use to fill the empty space left by offsetting a an image or selection.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SETTOBACKGROUND",
                "@rwaccess": "readonly",
                "shortdesc": "For background layers, sets pixels to the background layer color. For nonbackground layers, sets the pixels to transparent.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "WRAPAROUND",
                "@rwaccess": "readonly",
                "shortdesc": "Fills the undefined space with content from the opposite edge of the image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "REPEATEDGEPIXELS",
                "@rwaccess": "readonly",
                "shortdesc": "Extends the colors of pixels along the edge of the image in the direction specified. Banding may result if the edge pixels are different colors.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SpherizeMode": {
        "class": "SpherizeMode",
        "superClass": null,
        "shortdesc": "The curve (or stretch shape) to use for the distortion.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Distorts the image as if it is wrapped around a sphere.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "HORIZONTAL",
                "@rwaccess": "readonly",
                "shortdesc": "Distorts the image as if it is wrapped around a horizontal cylinder.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "VERTICAL",
                "@rwaccess": "readonly",
                "shortdesc": "Distorts the image as if it is wrapped around a vertical cylinder.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "DisplacementMapType": {
        "class": "DisplacementMapType",
        "superClass": null,
        "shortdesc": "Describes how the displacement map fits the image if the image is not the same size as the map.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "STRETCHTOFIT",
                "@rwaccess": "readonly",
                "shortdesc": "The map is resized.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TILE",
                "@rwaccess": "readonly",
                "shortdesc": "The selection is filled by repeating the map in a pattern.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "WaveType": {
        "class": "WaveType",
        "superClass": null,
        "shortdesc": "The type of wave.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SINE",
                "@rwaccess": "readonly",
                "shortdesc": "Rolling.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TRIANGULAR",
                "@rwaccess": "readonly",
                "shortdesc": "Triangular.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SQUARE",
                "@rwaccess": "readonly",
                "shortdesc": "Square.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "ZigZagType": {
        "class": "ZigZagType",
        "superClass": null,
        "shortdesc": "The method of zigzagging.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "AROUNDCENTER",
                "@rwaccess": "readonly",
                "shortdesc": "Pixels are rotated around the center of the selection.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "OUTFROMCENTER",
                "@rwaccess": "readonly",
                "shortdesc": "Pixels are displaced toward or away from the center of the selection.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PONDRIPPLES",
                "@rwaccess": "readonly",
                "shortdesc": "Pixels are displaced to the upper left or lower right.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "NoiseDistribution": {
        "class": "NoiseDistribution",
        "superClass": null,
        "shortdesc": "The distribution method to use when applying an Add Noise filter.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "UNIFORM",
                "@rwaccess": "readonly",
                "shortdesc": "Distributes color values of noise using random numbers between 0 and plus or minus the specified value, creating a subtle effect.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "GAUSSIAN",
                "@rwaccess": "readonly",
                "shortdesc": "Distributes color values of noise along a bell-shaped curve, creating a speckled effect.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "LensType": {
        "class": "LensType",
        "superClass": null,
        "shortdesc": "The type of lens.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ZOOMLENS",
                "@rwaccess": "readonly",
                "shortdesc": "50-300mm Zoom.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PRIME35",
                "@rwaccess": "readonly",
                "shortdesc": "35mm Prime.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PRIME105",
                "@rwaccess": "readonly",
                "shortdesc": "105mm Prime.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "MOVIEPRIME",
                "@rwaccess": "readonly",
                "shortdesc": "Movie Prime.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "EliminateFields": {
        "class": "EliminateFields",
        "superClass": null,
        "shortdesc": "The type of fields to eliminate.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ODDFIELDS",
                "@rwaccess": "readonly",
                "shortdesc": "Eliminate odd interlaced lines in a video image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "EVENFIELDS",
                "@rwaccess": "readonly",
                "shortdesc": "Eliminate even interlaced lines in a video image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "CreateFields": {
        "class": "CreateFields",
        "superClass": null,
        "shortdesc": "The method for replacing eliminated fields.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "DUPLICATION",
                "@rwaccess": "readonly",
                "shortdesc": "Duplicates existing pixels.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "INTERPOLATION",
                "@rwaccess": "readonly",
                "shortdesc": "Assigns color values to any new pixels that Photoshop creates based on the color values of existing pixels in the image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "PhotoCDSize": {
        "class": "PhotoCDSize",
        "superClass": null,
        "shortdesc": "The pixel dimensions of the image.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "MINIMUM",
                "@rwaccess": "readonly",
                "shortdesc": "64x96 image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "128x192 image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "256x384 image.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "512x768 image.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "EXTRALARGE",
                "@rwaccess": "readonly",
                "shortdesc": "1024x1536 image.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "MAXIMUM",
                "@rwaccess": "readonly",
                "shortdesc": "2048x3072 image.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            }
        ],
        "methods": []
    },
    "BitsPerChannelType": {
        "class": "BitsPerChannelType",
        "superClass": null,
        "shortdesc": "The number of bits per color channel.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ONE",
                "@rwaccess": "readonly",
                "shortdesc": "1 bit per channel.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "EIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "8 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "SIXTEEN",
                "@rwaccess": "readonly",
                "shortdesc": "16 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "THIRTYTWO",
                "@rwaccess": "readonly",
                "shortdesc": "32 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "32"
                }
            }
        ],
        "methods": []
    },
    "PICTBitsPerPixels": {
        "class": "PICTBitsPerPixels",
        "superClass": null,
        "shortdesc": "The number of bits per pixel to use when compressing a PICT file.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "TWO",
                "@rwaccess": "readonly",
                "shortdesc": "2 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FOUR",
                "@rwaccess": "readonly",
                "shortdesc": "4 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "EIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "8 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "SIXTEEN",
                "@rwaccess": "readonly",
                "shortdesc": "16 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "THIRTYTWO",
                "@rwaccess": "readonly",
                "shortdesc": "32 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "32"
                }
            }
        ],
        "methods": []
    },
    "TargaBitsPerPixels": {
        "class": "TargaBitsPerPixels",
        "superClass": null,
        "shortdesc": "The resolution to use when saving an image in Targa format.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SIXTEEN",
                "@rwaccess": "readonly",
                "shortdesc": "16 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "TWENTYFOUR",
                "@rwaccess": "readonly",
                "shortdesc": "24 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "24"
                }
            },
            {
                "@name": "THIRTYTWO",
                "@rwaccess": "readonly",
                "shortdesc": "32 bits per pixel.",
                "datatype": {
                    "type": "int",
                    "value": "32"
                }
            }
        ],
        "methods": []
    },
    "DescValueType": {
        "class": "DescValueType",
        "superClass": null,
        "shortdesc": "The value type of an object.",
        "elementCount": 1,
        "propertyCount": 13,
        "methodCount": 0,
        "properties": [
            {
                "@name": "INTEGERTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Integer.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DOUBLETYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Double.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "UNITDOUBLE",
                "@rwaccess": "readonly",
                "shortdesc": "Unit value of type double.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "STRINGTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "String.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BOOLEANTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Boolean.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "LISTTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Action list.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "OBJECTTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Object.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "ENUMERATEDTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Enumeration.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "REFERENCETYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Reference.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "CLASSTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Class.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "ALIASTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Alias.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "RAWTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Raw.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "LARGEINTEGERTYPE",
                "@rwaccess": "readonly",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            }
        ],
        "methods": []
    },
    "ReferenceFormType": {
        "class": "ReferenceFormType",
        "superClass": null,
        "shortdesc": "The type of action reference object.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NAME",
                "@rwaccess": "readonly",
                "shortdesc": "Name.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "INDEX",
                "@rwaccess": "readonly",
                "shortdesc": "Index.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "IDENTIFIER",
                "@rwaccess": "readonly",
                "shortdesc": "Identifier.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "OFFSET",
                "@rwaccess": "readonly",
                "shortdesc": "Offset.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "ENUMERATED",
                "@rwaccess": "readonly",
                "shortdesc": "Enumerated.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "PROPERTY",
                "@rwaccess": "readonly",
                "shortdesc": "Property.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "CLASSTYPE",
                "@rwaccess": "readonly",
                "shortdesc": "Class.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "BMPDepthType": {
        "class": "BMPDepthType",
        "superClass": null,
        "shortdesc": "The number of bits per channel (also called pixel depth or color depth). The number selected indicates the exponent of 2. For example, a pixel with a bit-depth of EIGHT has 2-to-the-8th, or 256, possible color values.",
        "elementCount": 1,
        "propertyCount": 14,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ONE",
                "@rwaccess": "readonly",
                "shortdesc": "1 bit depth.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "FOUR",
                "@rwaccess": "readonly",
                "shortdesc": "4 bits depth.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "EIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "8 bits depth.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "SIXTEEN",
                "@rwaccess": "readonly",
                "shortdesc": "16 bits depth.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "TWENTYFOUR",
                "@rwaccess": "readonly",
                "shortdesc": "24 bits depth.",
                "datatype": {
                    "type": "int",
                    "value": "24"
                }
            },
            {
                "@name": "THIRTYTWO",
                "@rwaccess": "readonly",
                "shortdesc": "32 bits depth.",
                "datatype": {
                    "type": "int",
                    "value": "32"
                }
            },
            {
                "@name": "BMP_X1R5G5B5",
                "@rwaccess": "readonly",
                "shortdesc": "X1 R5 G5 B5 advanced bit depth specification (same as normal 16 bit mode)",
                "datatype": {
                    "type": "int",
                    "value": "60"
                }
            },
            {
                "@name": "BMP_A1R5G5B5",
                "@rwaccess": "readonly",
                "shortdesc": "A1 R5 G5 B5 advanced bit depth specification.",
                "datatype": {
                    "type": "int",
                    "value": "61"
                }
            },
            {
                "@name": "BMP_R5G6B5",
                "@rwaccess": "readonly",
                "shortdesc": "R5 G6 B5 advanced bit depth specification.",
                "datatype": {
                    "type": "int",
                    "value": "62"
                }
            },
            {
                "@name": "BMP_X4R4G4B4",
                "@rwaccess": "readonly",
                "shortdesc": "X4 R4 G4 B4 advanced bit depth specification.",
                "datatype": {
                    "type": "int",
                    "value": "63"
                }
            },
            {
                "@name": "BMP_A4R4G4B4",
                "@rwaccess": "readonly",
                "shortdesc": "A4 R4 G4 B4 advanced bit depth specification.",
                "datatype": {
                    "type": "int",
                    "value": "64"
                }
            },
            {
                "@name": "BMP_R8G8B8",
                "@rwaccess": "readonly",
                "shortdesc": "R8 G8 B8 advanced bit depth specification (same as normal 24 bit mode)",
                "datatype": {
                    "type": "int",
                    "value": "65"
                }
            },
            {
                "@name": "BMP_X8R8G8B8",
                "@rwaccess": "readonly",
                "shortdesc": "X8 R8 G8 B8 advanced bit depth specification.",
                "datatype": {
                    "type": "int",
                    "value": "66"
                }
            },
            {
                "@name": "BMP_A8R8G8B8",
                "@rwaccess": "readonly",
                "shortdesc": "A8 R8 G8 B8 advanced bit depth specification (same as normal 32 bit mode)",
                "datatype": {
                    "type": "int",
                    "value": "67"
                }
            }
        ],
        "methods": []
    },
    "CopyrightedType": {
        "class": "CopyrightedType",
        "superClass": null,
        "shortdesc": "The copyright status of the document.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "COPYRIGHTEDWORK",
                "@rwaccess": "readonly",
                "shortdesc": "The document is copyrighted.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PUBLICDOMAIN",
                "@rwaccess": "readonly",
                "shortdesc": "The document is in the public domain.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "UNMARKED",
                "@rwaccess": "readonly",
                "shortdesc": "The copyright status is not indicated.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "BitmapConversionType": {
        "class": "BitmapConversionType",
        "superClass": null,
        "shortdesc": "The quality of an image converted to bitmap mode.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "HALFTHRESHOLD",
                "@rwaccess": "readonly",
                "shortdesc": "50% Threshold.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PATTERNDITHER",
                "@rwaccess": "readonly",
                "shortdesc": "Applies a halftone-like square pattern to determine the value of pixels.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DIFFUSIONDITHER",
                "@rwaccess": "readonly",
                "shortdesc": "Applies a random pattern that is usually less noticeable than pattern dither. The dither effects are diffused across adjacent pixels. If you select this algorithm, specify a dither percentage to control the amount of dithering applied to the image.",
                "description": "May cause detectable seams to appear across slice boundaries. Linking slices diffuses the dither pattern across all linked slices, and eliminates the seams.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "HALFTONESCREEN",
                "@rwaccess": "readonly",
                "shortdesc": "Lets you convert a grayscale image to simulated halftone dots.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "CUSTOMPATTERN",
                "@rwaccess": "readonly",
                "shortdesc": "Simulates the effect of printing a grayscale image through a custom halftone screen. This method lets you apply a screen texture, such as a wood grain, to an image. To use this option, you must first define a pattern.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "BitmapHalfToneType": {
        "class": "BitmapHalfToneType",
        "superClass": null,
        "shortdesc": "The shape of the dots (ink deposits) in the halftone screen.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ROUND",
                "@rwaccess": "readonly",
                "shortdesc": "Round.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DIAMOND",
                "@rwaccess": "readonly",
                "shortdesc": "Diamond.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "ELLIPSE",
                "@rwaccess": "readonly",
                "shortdesc": "Ellipse.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LINE",
                "@rwaccess": "readonly",
                "shortdesc": "Line.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "SQUARE",
                "@rwaccess": "readonly",
                "shortdesc": "Square.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "CROSS",
                "@rwaccess": "readonly",
                "shortdesc": "Cross.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            }
        ],
        "methods": []
    },
    "MatteType": {
        "class": "MatteType",
        "superClass": null,
        "shortdesc": "The color to use for matting.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "None.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "FOREGROUND",
                "@rwaccess": "readonly",
                "shortdesc": "The current foreground color.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "BACKGROUND",
                "@rwaccess": "readonly",
                "shortdesc": "The current background color.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "WHITE",
                "@rwaccess": "readonly",
                "shortdesc": "White.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BLACK",
                "@rwaccess": "readonly",
                "shortdesc": "Black.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "SEMIGRAY",
                "@rwaccess": "readonly",
                "shortdesc": "50% gray.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "NETSCAPE",
                "@rwaccess": "readonly",
                "shortdesc": "Gray.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "AdjustmentReference": {
        "class": "AdjustmentReference",
        "superClass": null,
        "shortdesc": "Method to use for interpreting selective color adjustment specifications.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "RELATIVE",
                "@rwaccess": "readonly",
                "shortdesc": "A percentage of the existing color amount.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ABSOLUTE",
                "@rwaccess": "readonly",
                "shortdesc": "A percentage of the whole.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "OpenDocumentMode": {
        "class": "OpenDocumentMode",
        "superClass": null,
        "shortdesc": "The color profile to use.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "GRAYSCALE",
                "@rwaccess": "readonly",
                "shortdesc": "Grayscale.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "RGB",
                "@rwaccess": "readonly",
                "shortdesc": "RGB.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CMYK",
                "@rwaccess": "readonly",
                "shortdesc": "CMYK.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAB",
                "@rwaccess": "readonly",
                "shortdesc": "Lab.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "NewDocumentMode": {
        "class": "NewDocumentMode",
        "superClass": null,
        "shortdesc": "The color profile to use.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "GRAYSCALE",
                "@rwaccess": "readonly",
                "shortdesc": "Grayscale.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "RGB",
                "@rwaccess": "readonly",
                "shortdesc": "RGB.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CMYK",
                "@rwaccess": "readonly",
                "shortdesc": "CMYK.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAB",
                "@rwaccess": "readonly",
                "shortdesc": "Lab.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BITMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Bitmap.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "PhotoCDColorSpace": {
        "class": "PhotoCDColorSpace",
        "superClass": null,
        "shortdesc": "Deprecated.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "RGB8",
                "@rwaccess": "readonly",
                "shortdesc": "RGB with 8 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "RGB16",
                "@rwaccess": "readonly",
                "shortdesc": "RGB with 16 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LAB8",
                "@rwaccess": "readonly",
                "shortdesc": "Lab with 8 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAB16",
                "@rwaccess": "readonly",
                "shortdesc": "Lab with 16 bits per channel.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "StrokeLocation": {
        "class": "StrokeLocation",
        "superClass": null,
        "shortdesc": "The placement of path or selection boundary strokes.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "INSIDE",
                "@rwaccess": "readonly",
                "shortdesc": "The border is placed inside the selection or layer boundaries.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CENTER",
                "@rwaccess": "readonly",
                "shortdesc": "The border is placed in the center of the the selection or layer boundaries.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "OUTSIDE",
                "@rwaccess": "readonly",
                "shortdesc": "The border is placed outside the selection or layer boundaries.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "ColorModel": {
        "class": "ColorModel",
        "superClass": null,
        "shortdesc": "Color models.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "GRAYSCALE",
                "@rwaccess": "readonly",
                "shortdesc": "Grayscale.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "RGB",
                "@rwaccess": "readonly",
                "shortdesc": "RGB.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CMYK",
                "@rwaccess": "readonly",
                "shortdesc": "CMYK.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "LAB",
                "@rwaccess": "readonly",
                "shortdesc": "Lab.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "HSB",
                "@rwaccess": "readonly",
                "shortdesc": "HSB.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "The color model has not yet been assigned.",
                "datatype": {
                    "type": "int",
                    "value": "50"
                }
            }
        ],
        "methods": []
    },
    "JavaScriptExecutionMode": {
        "class": "JavaScriptExecutionMode",
        "superClass": null,
        "shortdesc": "When should a JavaScript debugger be shown.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NEVER",
                "@rwaccess": "readonly",
                "shortdesc": "Never show the JavaScript debugger. Treat runtime errors by throwing a JavaScript exceptions.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ONRUNTIMEERROR",
                "@rwaccess": "readonly",
                "shortdesc": "Show the JavaScript debugger if a runtime error occurs.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "BEFORERUNNING",
                "@rwaccess": "readonly",
                "shortdesc": "Show the JavaScript debugger when the first line of the JavaScript executes.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SourceSpaceType": {
        "class": "SourceSpaceType",
        "superClass": null,
        "shortdesc": "The color space for the source when printing.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "DOCUMENT",
                "@rwaccess": "readonly",
                "shortdesc": "The document color space.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PROOF",
                "@rwaccess": "readonly",
                "shortdesc": "The proof color space.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "LayerKind": {
        "class": "LayerKind",
        "superClass": null,
        "shortdesc": "The types of art layers.",
        "elementCount": 1,
        "propertyCount": 24,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NORMAL",
                "@rwaccess": "readonly",
                "shortdesc": "Normal.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TEXT",
                "@rwaccess": "readonly",
                "shortdesc": "Text.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SOLIDFILL",
                "@rwaccess": "readonly",
                "shortdesc": "Solid color.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "GRADIENTFILL",
                "@rwaccess": "readonly",
                "shortdesc": "Gradient fill.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "PATTERNFILL",
                "@rwaccess": "readonly",
                "shortdesc": "Pattern fill.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "LEVELS",
                "@rwaccess": "readonly",
                "shortdesc": "Levels adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "CURVES",
                "@rwaccess": "readonly",
                "shortdesc": "Curves adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "COLORBALANCE",
                "@rwaccess": "readonly",
                "shortdesc": "Color balance adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "BRIGHTNESSCONTRAST",
                "@rwaccess": "readonly",
                "shortdesc": "Brightness contrast adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "HUESATURATION",
                "@rwaccess": "readonly",
                "shortdesc": "Hue saturation adjustment laye.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "SELECTIVECOLOR",
                "@rwaccess": "readonly",
                "shortdesc": "Selective color adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "CHANNELMIXER",
                "@rwaccess": "readonly",
                "shortdesc": "Channel mixer adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "GRADIENTMAP",
                "@rwaccess": "readonly",
                "shortdesc": "Gradient map adjustment laye.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "INVERSION",
                "@rwaccess": "readonly",
                "shortdesc": "Invert adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "THRESHOLD",
                "@rwaccess": "readonly",
                "shortdesc": "Threshold adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "POSTERIZE",
                "@rwaccess": "readonly",
                "shortdesc": "Posterize adjustment layer.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "SMARTOBJECT",
                "@rwaccess": "readonly",
                "shortdesc": "Smart object layer.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "PHOTOFILTER",
                "@rwaccess": "readonly",
                "shortdesc": "Photo filter layer.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            },
            {
                "@name": "EXPOSURE",
                "@rwaccess": "readonly",
                "shortdesc": "Exposure layer.",
                "datatype": {
                    "type": "int",
                    "value": "19"
                }
            },
            {
                "@name": "LAYER3D",
                "@rwaccess": "readonly",
                "shortdesc": "3D layer.",
                "datatype": {
                    "type": "int",
                    "value": "20"
                }
            },
            {
                "@name": "VIDEO",
                "@rwaccess": "readonly",
                "shortdesc": "Video layer.",
                "datatype": {
                    "type": "int",
                    "value": "21"
                }
            },
            {
                "@name": "BLACKANDWHITE",
                "@rwaccess": "readonly",
                "shortdesc": "Black and white layer.",
                "datatype": {
                    "type": "int",
                    "value": "22"
                }
            },
            {
                "@name": "VIBRANCE",
                "@rwaccess": "readonly",
                "shortdesc": "Vibrance layer.",
                "datatype": {
                    "type": "int",
                    "value": "23"
                }
            },
            {
                "@name": "COLORLOOKUP",
                "@rwaccess": "readonly",
                "shortdesc": "Color lookup layer.",
                "datatype": {
                    "type": "int",
                    "value": "24"
                }
            }
        ],
        "methods": []
    },
    "TransitionType": {
        "class": "TransitionType",
        "superClass": null,
        "shortdesc": "PDF presentation transition types.",
        "elementCount": 1,
        "propertyCount": 18,
        "methodCount": 0,
        "properties": [
            {
                "@name": "BLINDSHORIZONTAL",
                "@rwaccess": "readonly",
                "shortdesc": "Images transition in horizontal stripes like Venetian blinds.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BLINDSVERTICAL",
                "@rwaccess": "readonly",
                "shortdesc": "Images transition in vertical stripes.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DISSOLVE",
                "@rwaccess": "readonly",
                "shortdesc": "One image dissolves into the next.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "BOXIN",
                "@rwaccess": "readonly",
                "shortdesc": "Images transition using a shrinking box shape.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BOXOUT",
                "@rwaccess": "readonly",
                "shortdesc": "Images transition using an expanding box shape.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "GLITTERDOWN",
                "@rwaccess": "readonly",
                "shortdesc": "Images dissolve top to bottom.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "GLITTERRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Images dissolve left to right.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "GLITTERRIGHTDOWN",
                "@rwaccess": "readonly",
                "shortdesc": "Images dissolve top-left to bottom-right.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "Images change with no visible transition.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "RANDOM",
                "@rwaccess": "readonly",
                "shortdesc": "Images transition using random effects.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "SPLITHORIZONTALIN",
                "@rwaccess": "readonly",
                "shortdesc": "The new images roll in from the top and bottom of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "SPLITHORIZONTALOUT",
                "@rwaccess": "readonly",
                "shortdesc": "The new image spreads from the middle of the screen to the top and bottom of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "SPLITVERTICALIN",
                "@rwaccess": "readonly",
                "shortdesc": "The new image rolls in from the left and right edges of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "SPLITVERTICALOUT",
                "@rwaccess": "readonly",
                "shortdesc": "The new image rolls out from the middle of the screen to the left and right edges of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "WIPEDOWN",
                "@rwaccess": "readonly",
                "shortdesc": "The new image rolls in from the top of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "WIPELEFT",
                "@rwaccess": "readonly",
                "shortdesc": "The new image rolls in from the right side of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "WIPERIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "The new image rolls in from the left side of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "WIPEUP",
                "@rwaccess": "readonly",
                "shortdesc": "The new image rolls in from the bottom of the screen.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            }
        ],
        "methods": []
    },
    "GalleryFontType": {
        "class": "GalleryFontType",
        "superClass": null,
        "shortdesc": "Fonts for web photo gallery text.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ARIAL",
                "@rwaccess": "readonly",
                "shortdesc": "Arial font.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "COURIERNEW",
                "@rwaccess": "readonly",
                "shortdesc": "Courier New font.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "HELVETICA",
                "@rwaccess": "readonly",
                "shortdesc": "Helvetica font.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "TIMESNEWROMAN",
                "@rwaccess": "readonly",
                "shortdesc": "Times New Roman font.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "GalleryConstrainType": {
        "class": "GalleryConstrainType",
        "superClass": null,
        "shortdesc": "DEPRECATED. Constrain values for images.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "CONSTRAINWIDTH",
                "@rwaccess": "readonly",
                "shortdesc": "Constrain width.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CONSTRAINHEIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Constrain the height of the image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CONSTRAINBOTH",
                "@rwaccess": "readonly",
                "shortdesc": "Constrain both the height and the width of the image.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "GalleryThumbSizeType": {
        "class": "GalleryThumbSizeType",
        "superClass": null,
        "shortdesc": "DEPRECATED. Web photo gallery thumb size types.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "Small thumbnail.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium thumbnail.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "Large thumbnail.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "CUSTOM",
                "@rwaccess": "readonly",
                "shortdesc": "Custom thumbnail.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "GallerySecurityType": {
        "class": "GallerySecurityType",
        "superClass": null,
        "shortdesc": "DEPRECATED. Web photo gallery security types.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No security.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CUSTOMTEXT",
                "@rwaccess": "readonly",
                "shortdesc": "Custom text security.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FILENAME",
                "@rwaccess": "readonly",
                "shortdesc": "Filename security.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "COPYRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Copyright security.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "CAPTION",
                "@rwaccess": "readonly",
                "shortdesc": "Caption security.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "CREDIT",
                "@rwaccess": "readonly",
                "shortdesc": "Credit security.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "TITLE",
                "@rwaccess": "readonly",
                "shortdesc": "Title security.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "PicturePackageTextType": {
        "class": "PicturePackageTextType",
        "superClass": null,
        "shortdesc": "The function or meaning of text in a Picture Package.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No text.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "USER",
                "@rwaccess": "readonly",
                "shortdesc": "The text is user defined.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FILENAME",
                "@rwaccess": "readonly",
                "shortdesc": "The text is the filename.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "COPYRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "The text is the copyright.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "CAPTION",
                "@rwaccess": "readonly",
                "shortdesc": "The text is a caption.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "CREDIT",
                "@rwaccess": "readonly",
                "shortdesc": "The text is the credit.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "ORIGIN",
                "@rwaccess": "readonly",
                "shortdesc": "The text is the origin.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            }
        ],
        "methods": []
    },
    "GallerySecurityTextColorType": {
        "class": "GallerySecurityTextColorType",
        "superClass": null,
        "shortdesc": "The color to use for text displayed over gallery images as an antitheft deterrent.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "BLACK",
                "@rwaccess": "readonly",
                "shortdesc": "Black text.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "WHITE",
                "@rwaccess": "readonly",
                "shortdesc": "White text.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CUSTOM",
                "@rwaccess": "readonly",
                "shortdesc": "Custom color.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "GallerySecurityTextPositionType": {
        "class": "GallerySecurityTextPositionType",
        "superClass": null,
        "shortdesc": "The position of the text displayed over gallery images as an antitheft deterrent.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "CENTERED",
                "@rwaccess": "readonly",
                "shortdesc": "Text is centered on each image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "UPPERLEFT",
                "@rwaccess": "readonly",
                "shortdesc": "Text is in the upper left corner of each image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LOWERLEFT",
                "@rwaccess": "readonly",
                "shortdesc": "Ltext is in the lower left corner of each image.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "UPPERRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Text is in the upper right corner of each image.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "LOWERRIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Text is in the lower right corner of each image.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "GallerySecurityTextRotateType": {
        "class": "GallerySecurityTextRotateType",
        "superClass": null,
        "shortdesc": "DEPRECATED. web photo gallery security text rotation types.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ZERO",
                "@rwaccess": "readonly",
                "shortdesc": "No rotate.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CLOCKWISE45",
                "@rwaccess": "readonly",
                "shortdesc": "Rotate 45 degrees clock wise.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CLOCKWISE90",
                "@rwaccess": "readonly",
                "shortdesc": "Rotate 90 degrees clock wise.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "COUNTERCLOCKWISE45",
                "@rwaccess": "readonly",
                "shortdesc": "Rotate 45 degrees counter clock wise.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "COUNTERCLOCKWISE90",
                "@rwaccess": "readonly",
                "shortdesc": "Rotate 90 degrees counter clock wise.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "QueryStateType": {
        "class": "QueryStateType",
        "superClass": null,
        "shortdesc": "The permission state for queries.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ALWAYS",
                "@rwaccess": "readonly",
                "shortdesc": "Always maximize compatibility.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ASK",
                "@rwaccess": "readonly",
                "shortdesc": "Always ask about maximize compatibility.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "NEVER",
                "@rwaccess": "readonly",
                "shortdesc": "Never ask about maximize compatibility.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "SaveLogItemsType": {
        "class": "SaveLogItemsType",
        "superClass": null,
        "shortdesc": "The location of history log data.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "METADATA",
                "@rwaccess": "readonly",
                "shortdesc": "Save history log in file metadata.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "LOGFILE",
                "@rwaccess": "readonly",
                "shortdesc": "Save history log in a text file.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LOGFILEANDMETADATA",
                "@rwaccess": "readonly",
                "shortdesc": "Save history log in file metadata and a text file.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "EditLogItemsType": {
        "class": "EditLogItemsType",
        "superClass": null,
        "shortdesc": "The history log edit options.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SESSIONONLY",
                "@rwaccess": "readonly",
                "shortdesc": "Save a history for only for the session.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CONCISE",
                "@rwaccess": "readonly",
                "shortdesc": "Save a concise history log.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DETAILED",
                "@rwaccess": "readonly",
                "shortdesc": "Save a detailed history log.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PathKind": {
        "class": "PathKind",
        "superClass": null,
        "shortdesc": "The type of path.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NORMALPATH",
                "@rwaccess": "readonly",
                "shortdesc": "Normal path.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CLIPPINGPATH",
                "@rwaccess": "readonly",
                "shortdesc": "Clipping path.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "WORKPATH",
                "@rwaccess": "readonly",
                "shortdesc": "Workpath.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "VECTORMASK",
                "@rwaccess": "readonly",
                "shortdesc": "Vector mask path.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "TEXTMASK",
                "@rwaccess": "readonly",
                "shortdesc": "Text mask path.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "ShapeOperation": {
        "class": "ShapeOperation",
        "superClass": null,
        "shortdesc": "Specifies how to combine the shapes if the destination image already has a selection.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SHAPEADD",
                "@rwaccess": "readonly",
                "shortdesc": "Adds the shapes.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SHAPEXOR",
                "@rwaccess": "readonly",
                "shortdesc": "Replaces the shape in the destination image with the loaded selection.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SHAPEINTERSECT",
                "@rwaccess": "readonly",
                "shortdesc": "The resulting shape is the area of intersection between the two shapes.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "SHAPESUBTRACT",
                "@rwaccess": "readonly",
                "shortdesc": "Subtracts the loaded shape from the selection is the destination image.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "PointKind": {
        "class": "PointKind",
        "superClass": null,
        "shortdesc": "The path point kind.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SMOOTHPOINT",
                "@rwaccess": "readonly",
                "shortdesc": "The point can be a curve.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CORNERPOINT",
                "@rwaccess": "readonly",
                "shortdesc": "The point must be a corner.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "ToolType": {
        "class": "ToolType",
        "superClass": null,
        "shortdesc": "Tools for the stroke path command.",
        "elementCount": 1,
        "propertyCount": 16,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PENCIL",
                "@rwaccess": "readonly",
                "shortdesc": "Pencil.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "BRUSH",
                "@rwaccess": "readonly",
                "shortdesc": "Brush.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "ERASER",
                "@rwaccess": "readonly",
                "shortdesc": "Eraser.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "BACKGROUNDERASER",
                "@rwaccess": "readonly",
                "shortdesc": "Background eraser.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "CLONESTAMP",
                "@rwaccess": "readonly",
                "shortdesc": "Clone stamp.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "PATTERNSTAMP",
                "@rwaccess": "readonly",
                "shortdesc": "Pattern stamp.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "HEALINGBRUSH",
                "@rwaccess": "readonly",
                "shortdesc": "Healing brush.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "HISTORYBRUSH",
                "@rwaccess": "readonly",
                "shortdesc": "History brush.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "ARTHISTORYBRUSH",
                "@rwaccess": "readonly",
                "shortdesc": "Art history brush.",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "SMUDGE",
                "@rwaccess": "readonly",
                "shortdesc": "Smudge.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "BLUR",
                "@rwaccess": "readonly",
                "shortdesc": "Blur.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "SHARPEN",
                "@rwaccess": "readonly",
                "shortdesc": "Sharpen.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "DODGE",
                "@rwaccess": "readonly",
                "shortdesc": "Dodge.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "BURN",
                "@rwaccess": "readonly",
                "shortdesc": "Burn.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "SPONGE",
                "@rwaccess": "readonly",
                "shortdesc": "Sponge.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "COLORREPLACEMENTTOOL",
                "@rwaccess": "readonly",
                "shortdesc": "Color replacement tool.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            }
        ],
        "methods": []
    },
    "BatchDestinationType": {
        "class": "BatchDestinationType",
        "superClass": null,
        "shortdesc": "The destination, if any, for batch-processed files.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NODESTINATION",
                "@rwaccess": "readonly",
                "shortdesc": "Leaves all files open.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "SAVEANDCLOSE",
                "@rwaccess": "readonly",
                "shortdesc": "Saves changes and closes all files.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "FOLDER",
                "@rwaccess": "readonly",
                "shortdesc": "Outputs files to a folder.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "FileNamingType": {
        "class": "FileNamingType",
        "superClass": null,
        "shortdesc": "File naming options for the batch command.",
        "elementCount": 1,
        "propertyCount": 18,
        "methodCount": 0,
        "properties": [
            {
                "@name": "DOCUMENTNAMEMIXED",
                "@rwaccess": "readonly",
                "shortdesc": "Use the document name in mixed case.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DOCUMENTNAMELOWER",
                "@rwaccess": "readonly",
                "shortdesc": "Use the document name in lower case.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "DOCUMENTNAMEUPPER",
                "@rwaccess": "readonly",
                "shortdesc": "Use the document name in UPPER case.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "SERIALNUMBER1",
                "@rwaccess": "readonly",
                "shortdesc": "Use a 1-digit serial number.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "SERIALNUMBER2",
                "@rwaccess": "readonly",
                "shortdesc": "Use a 2-digit serial number.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "SERIALNUMBER3",
                "@rwaccess": "readonly",
                "shortdesc": "Use a 3-digit serial number.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "SERIALNUMBER4",
                "@rwaccess": "readonly",
                "shortdesc": "Use a 4-digit serial number.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "SERIALLETTERLOWER",
                "@rwaccess": "readonly",
                "shortdesc": "Use letter serial number lower case (a, b, c, ...)",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            },
            {
                "@name": "SERIALLETTERUPPER",
                "@rwaccess": "readonly",
                "shortdesc": "Use letter serial number UPPER case (A, B, C, ...)",
                "datatype": {
                    "type": "int",
                    "value": "9"
                }
            },
            {
                "@name": "MMDDYY",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as mmddyy.",
                "datatype": {
                    "type": "int",
                    "value": "10"
                }
            },
            {
                "@name": "MMDD",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as mmdd.",
                "datatype": {
                    "type": "int",
                    "value": "11"
                }
            },
            {
                "@name": "YYYYMMDD",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as yyyymmdd.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "YYMMDD",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as yymmdd.",
                "datatype": {
                    "type": "int",
                    "value": "13"
                }
            },
            {
                "@name": "YYDDMM",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as yyddmm.",
                "datatype": {
                    "type": "int",
                    "value": "14"
                }
            },
            {
                "@name": "DDMMYY",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as ddmmyy.",
                "datatype": {
                    "type": "int",
                    "value": "15"
                }
            },
            {
                "@name": "DDMM",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the date formatted as ddmm.",
                "datatype": {
                    "type": "int",
                    "value": "16"
                }
            },
            {
                "@name": "EXTENSIONLOWER",
                "@rwaccess": "readonly",
                "shortdesc": "Use the extension of the file in lower case.",
                "datatype": {
                    "type": "int",
                    "value": "17"
                }
            },
            {
                "@name": "EXTENSIONUPPER",
                "@rwaccess": "readonly",
                "shortdesc": "Use the extension of the file in UPPER case.",
                "datatype": {
                    "type": "int",
                    "value": "18"
                }
            }
        ],
        "methods": []
    },
    "DepthMapSource": {
        "class": "DepthMapSource",
        "superClass": null,
        "shortdesc": "Depth map source options.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No depth map in use.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "TRANSPARENCYCHANNEL",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the transparency channel for the depth map.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LAYERMASK",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the layer mask for the depth map.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "IMAGEHIGHLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the image highlight for the depth map.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "Geometry": {
        "class": "Geometry",
        "superClass": null,
        "shortdesc": "Geometric options for shapes, such as the iris shape in the Lens Blur Filter.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "TRIANGLE",
                "@rwaccess": "readonly",
                "shortdesc": "Triangle.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "PENTAGON",
                "@rwaccess": "readonly",
                "shortdesc": "Pentagon.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "HEXAGON",
                "@rwaccess": "readonly",
                "shortdesc": "Hexagon.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SQUARE",
                "@rwaccess": "readonly",
                "shortdesc": "Square.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "HEPTAGON",
                "@rwaccess": "readonly",
                "shortdesc": "Heptagon.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "OCTAGON",
                "@rwaccess": "readonly",
                "shortdesc": "Octagon.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "ColorReductionType": {
        "class": "ColorReductionType",
        "superClass": null,
        "shortdesc": "The color reduction algorithm.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PERCEPTUAL",
                "@rwaccess": "readonly",
                "shortdesc": "Gives priority to colors for which the human eye has greater sensitivity.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "SELECTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Gives priority to broad areas of color and the preservation of web colors; usually produces images with the greatest color integrity.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ADAPTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Samples color from the spectrum appearing most commonly in the image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "RESTRICTIVE",
                "@rwaccess": "readonly",
                "shortdesc": "Uses the standard 216-color color table common to Windows and Mac OS 8-bit (256-color or web-safe palette); ensures that no browser dither is applied when the image is displayed using 8-bit color.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "CUSTOM",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a color palette that is created or modified by the user. If you open an existing GIF or PNG-8 file, it will have a custom color palette.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "BLACKWHITE",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a set palette of colors.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "GRAYSCALE",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a set palette of colors.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "MACINTOSH",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a set palette of colors.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "WINDOWS",
                "@rwaccess": "readonly",
                "shortdesc": "Uses a set palette of colors.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            }
        ],
        "methods": []
    },
    "CameraRAWSettingsType": {
        "class": "CameraRAWSettingsType",
        "superClass": null,
        "shortdesc": "The default Camera RAW settings.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "CAMERA",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings of the camera.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "SELECTEDIMAGE",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings of the selected image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CUSTOM",
                "@rwaccess": "readonly",
                "shortdesc": "Use the custom settings.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "WhiteBalanceType": {
        "class": "WhiteBalanceType",
        "superClass": null,
        "shortdesc": "The lighting conditions (affects color balance).",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ASSHOT",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings of the camera as shot.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "AUTO",
                "@rwaccess": "readonly",
                "shortdesc": "Automatically use the white balance settings.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DAYLIGHT",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings as shot in daylight.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "CLOUDY",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings as shot on a cloudy day.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "SHADE",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings as shot in the shade.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "TUNGSTEN",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings as shot with tungsten lighting.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "FLUORESCENT",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings as shot with fluorescent lighting.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "FLASH",
                "@rwaccess": "readonly",
                "shortdesc": "Use the settings as shot with a flash.",
                "datatype": {
                    "type": "int",
                    "value": "7"
                }
            },
            {
                "@name": "CUSTOM",
                "@rwaccess": "readonly",
                "shortdesc": "Use the custom settings for the shot parameters.",
                "datatype": {
                    "type": "int",
                    "value": "8"
                }
            }
        ],
        "methods": []
    },
    "ColorSpaceType": {
        "class": "ColorSpaceType",
        "superClass": null,
        "shortdesc": "The type of color space.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ADOBERGB",
                "@rwaccess": "readonly",
                "shortdesc": "Use the Adobe RGB color space.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "COLORMATCHRGB",
                "@rwaccess": "readonly",
                "shortdesc": "Use the ColorMatch RGB color space.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PROPHOTORGB",
                "@rwaccess": "readonly",
                "shortdesc": "Use the ProPhoto RGB color space.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "SRGB",
                "@rwaccess": "readonly",
                "shortdesc": "Use the sRGB color space.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "CameraRAWSize": {
        "class": "CameraRAWSize",
        "superClass": null,
        "shortdesc": "The camera RAW image size.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "MINIMUM",
                "@rwaccess": "readonly",
                "shortdesc": "1536 x 1024 image.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "2048 x 1365 image.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "3072 x 2048 image.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "4096 x 2731 image.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "EXTRALARGE",
                "@rwaccess": "readonly",
                "shortdesc": "5120 x 3413 image.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "MAXIMUM",
                "@rwaccess": "readonly",
                "shortdesc": "6144 x 4096 image.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "MagnificationType": {
        "class": "MagnificationType",
        "superClass": null,
        "shortdesc": "The PDF magnification type.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ACTUALSIZE",
                "@rwaccess": "readonly",
                "shortdesc": "Displays the image at actual size.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "FITPAGE",
                "@rwaccess": "readonly",
                "shortdesc": "Fits the image to the page.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            }
        ],
        "methods": []
    },
    "CropToType": {
        "class": "CropToType",
        "superClass": null,
        "shortdesc": "The style to use when cropping a page.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "BOUNDINGBOX",
                "@rwaccess": "readonly",
                "shortdesc": "Crop to the bounding box.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "MEDIABOX",
                "@rwaccess": "readonly",
                "shortdesc": "Crop to the media box.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "CROPBOX",
                "@rwaccess": "readonly",
                "shortdesc": "Crop to the crop box.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "BLEEDBOX",
                "@rwaccess": "readonly",
                "shortdesc": "Crop to the bleed box.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "TRIMBOX",
                "@rwaccess": "readonly",
                "shortdesc": "Crop to the trim box.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "ARTBOX",
                "@rwaccess": "readonly",
                "shortdesc": "Crop to the art box.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "FontPreviewType": {
        "class": "FontPreviewType",
        "superClass": null,
        "shortdesc": "The type size to use for font previews in the Type tool font menus.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "NONE",
                "@rwaccess": "readonly",
                "shortdesc": "No preview.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "Small type.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium type.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "Large type.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "EXTRALARGE",
                "@rwaccess": "readonly",
                "shortdesc": "Extra large preview.",
                "datatype": {
                    "type": "int",
                    "value": "4"
                }
            },
            {
                "@name": "HUGE",
                "@rwaccess": "readonly",
                "shortdesc": "Huge preview.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            }
        ],
        "methods": []
    },
    "FontSize": {
        "class": "FontSize",
        "superClass": null,
        "shortdesc": "Font size in panels and dialogs.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SMALL",
                "@rwaccess": "readonly",
                "shortdesc": "Small size.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEDIUM",
                "@rwaccess": "readonly",
                "shortdesc": "Medium size.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "LARGE",
                "@rwaccess": "readonly",
                "shortdesc": "Large size.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "MeasurementSource": {
        "class": "MeasurementSource",
        "superClass": null,
        "shortdesc": "The source for recording measurements.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "MEASURESELECTION",
                "@rwaccess": "readonly",
                "shortdesc": "The measure selection.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "MEASURECOUNTTOOL",
                "@rwaccess": "readonly",
                "shortdesc": "The measure count tool.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "MEASURERULERTOOL",
                "@rwaccess": "readonly",
                "shortdesc": "The measure ruler tool.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "MeasurementRange": {
        "class": "MeasurementRange",
        "superClass": null,
        "shortdesc": "The measurement upon which to take action.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "ALLMEASUREMENTS",
                "@rwaccess": "readonly",
                "shortdesc": "All measurements.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "ACTIVEMEASUREMENTS",
                "@rwaccess": "readonly",
                "shortdesc": "Only active measurements.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "Documents": {
        "class": "Documents",
        "superClass": null,
        "shortdesc": "A collection of documents.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "A document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "width",
                            "@optional": "true",
                            "shortdesc": "The width of the document.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "height",
                            "@optional": "true",
                            "shortdesc": "The height of the document.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "resolution",
                            "@optional": "true",
                            "shortdesc": "The resolution of the document (in pixels per inch)",
                            "datatype": {
                                "type": "number",
                                "value": "72"
                            }
                        },
                        {
                            "@name": "name",
                            "@optional": "true",
                            "shortdesc": "The name of the document.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "mode",
                            "@optional": "true",
                            "shortdesc": "The document mode.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/NewDocumentMode",
                                    "@": "NewDocumentMode"
                                },
                                "value": "NewDocumentMode.RGB"
                            }
                        },
                        {
                            "@name": "initialFill",
                            "@optional": "true",
                            "shortdesc": "The initial fill of the document.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/DocumentFill",
                                    "@": "DocumentFill"
                                },
                                "value": "DocumentFill.WHITE"
                            }
                        },
                        {
                            "@name": "pixelAspectRatio",
                            "@optional": "true",
                            "shortdesc": "The initial pixel aspect ratio of the document.",
                            "datatype": {
                                "type": "number",
                                "value": "1.0"
                            }
                        },
                        {
                            "@name": "bitsPerChannel",
                            "@optional": "true",
                            "shortdesc": "The number of bits per channel.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/BitsPerChannelType",
                                    "@": "BitsPerChannelType"
                                },
                                "value": "BitsPerChannelType.EIGHT"
                            }
                        },
                        {
                            "@name": "colorProfileName",
                            "@optional": "true",
                            "shortdesc": "The name of color profile for document.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "Document"
                }
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    }
                }
            }
        ]
    },
    "Layers": {
        "class": "Layers",
        "superClass": null,
        "shortdesc": "The collection of layer objects, including art layer and layer set objects, in the document.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Layer",
                        "@": "Layer"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Layer",
                        "@": "Layer"
                    }
                }
            }
        ]
    },
    "LayerSets": {
        "class": "LayerSets",
        "superClass": null,
        "shortdesc": "The collection of layer set objects in the document.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 4,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerSet",
                        "@": "LayerSet"
                    }
                }
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/LayerSet",
                        "@": "LayerSet"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/LayerSet",
                        "@": "LayerSet"
                    }
                }
            }
        ]
    },
    "ArtLayers": {
        "class": "ArtLayers",
        "superClass": null,
        "shortdesc": "The collection of art layer objects in the document.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 4,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            }
        ]
    },
    "Channels": {
        "class": "Channels",
        "superClass": null,
        "shortdesc": "The collection of channel objects in the document.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 4,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    }
                }
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    }
                }
            }
        ]
    },
    "Guides": {
        "class": "Guides",
        "superClass": null,
        "shortdesc": "Guides associated with the document.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "A guide.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "direction",
                            "shortdesc": "Indicates whether the guide is vertical or horizontal.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Direction",
                                    "@": "Direction"
                                }
                            }
                        },
                        {
                            "@name": "coordinate",
                            "shortdesc": "Location of the guide from origin of image.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "Guide"
                }
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Guide",
                        "@": "Guide"
                    }
                }
            }
        ]
    },
    "HistoryStates": {
        "class": "HistoryStates",
        "superClass": null,
        "shortdesc": "The history state objects associated with the document.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/HistoryState",
                        "@": "HistoryState"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/HistoryState",
                        "@": "HistoryState"
                    }
                }
            }
        ]
    },
    "LayerComps": {
        "class": "LayerComps",
        "superClass": null,
        "shortdesc": "The layer comp objects associated with the document.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds a layer comp.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "name",
                            "shortdesc": "The name of the layer comp.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "comment",
                            "@optional": "true",
                            "shortdesc": "The description of the layer comp.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "appearance",
                            "@optional": "true",
                            "shortdesc": "If true, uses the layer appearance or style for this layer comp.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        },
                        {
                            "@name": "position",
                            "@optional": "true",
                            "shortdesc": "If true, uses the layer position for this layer comp.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        },
                        {
                            "@name": "visibility",
                            "@optional": "true",
                            "shortdesc": "If true, uses the layer visibility for this layer comp.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "LayerComp"
                }
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/LayerComp",
                        "@": "LayerComp"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/LayerComp",
                        "@": "LayerComp"
                    }
                }
            }
        ]
    },
    "TextFonts": {
        "class": "TextFonts",
        "superClass": null,
        "shortdesc": "A collection of fonts available on your computer.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/TextFont",
                        "@": "TextFont"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/TextFont",
                        "@": "TextFont"
                    }
                }
            }
        ]
    },
    "PathItems": {
        "class": "PathItems",
        "superClass": null,
        "shortdesc": "The collection of path item objects in the document.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Creates a new path item.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "name",
                            "shortdesc": "The name for the new path.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "entirePath",
                            "shortdesc": "The item's sub paths.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SubPathInfo",
                                    "@": "SubPathInfo"
                                },
                                "array": ""
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "PathItem"
                }
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/PathItem",
                        "@": "PathItem"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/PathItem",
                        "@": "PathItem"
                    }
                }
            }
        ]
    },
    "SubPathItems": {
        "class": "SubPathItems",
        "superClass": null,
        "shortdesc": "An array of path point info objects that describes a straight or curved segment of a path. You do not use the sub path item object to create a sub path. Rather, you use the sub path item object to retrieve information about a sub path. To create sub paths, see sub path info.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/SubPathItem",
                        "@": "SubPathItem"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/SubPathItem",
                        "@": "SubPathItem"
                    }
                }
            }
        ]
    },
    "PathPoints": {
        "class": "PathPoints",
        "superClass": null,
        "shortdesc": "A collection of path point objects that comprises the path points property of the sub path item object.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/PathPoint",
                        "@": "PathPoint"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/PathPoint",
                        "@": "PathPoint"
                    }
                }
            }
        ]
    },
    "Notifiers": {
        "class": "Notifiers",
        "superClass": null,
        "shortdesc": "A collection of notifier objects in the document.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 4,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Creates a notifier.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "event",
                            "shortdesc": "The class id of the event, four characters or a unique string.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "eventFile",
                            "shortdesc": "The script file to execute when the event occurs.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "eventClass",
                            "@optional": "true",
                            "shortdesc": "The class of the object the event is applied to, four characters or a unique string. When an event applies to multiple types of objects, you use the event class parameter to distinguish which object this Notifier applies to. For example, the Make event (\u201cMk\u201c) applies to documents (\u201cDcmn\u201d), channels (\u201cChnl\u201d) and other objects.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "Notifier"
                }
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Notifier",
                        "@": "Notifier"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Notifier",
                        "@": "Notifier"
                    }
                }
            }
        ]
    },
    "CountItems": {
        "class": "CountItems",
        "superClass": null,
        "shortdesc": "The collection of count items in the document.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Creates a count item.",
                "parameters": {
                    "parameter": {
                        "@name": "position",
                        "shortdesc": "The position of origin.",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitPoint",
                                "@": "UnitPoint"
                            }
                        }
                    }
                },
                "datatype": {
                    "type": "CountItem"
                }
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/CountItem",
                        "@": "CountItem"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/CountItem",
                        "@": "CountItem"
                    }
                }
            }
        ]
    },
    "ColorSamplers": {
        "class": "ColorSamplers",
        "superClass": null,
        "shortdesc": "The collection of color samplers in the document.",
        "elementCount": 2,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "Number of elements in the collection.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Creates a color sampler.",
                "parameters": {
                    "parameter": {
                        "@name": "position",
                        "shortdesc": "The horizontal and vertical (x,y) locations, respectively, of the color sampler.",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitPoint",
                                "@": "UnitPoint"
                            }
                        }
                    }
                },
                "datatype": {
                    "type": "ColorSampler"
                }
            },
            {
                "@name": "getByName",
                "shortdesc": "Get the first element in the collection with the provided name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ColorSampler",
                        "@": "ColorSampler"
                    }
                }
            },
            {
                "@name": "[]",
                "shortdesc": "Get an element in the collection with the provided index.",
                "parameters": {
                    "parameter": {
                        "@name": "index",
                        "datatype": {
                            "type": "uint"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ColorSampler",
                        "@": "ColorSampler"
                    }
                }
            }
        ]
    },
    "OpenOptions": {
        "class": "OpenOptions",
        "superClass": null,
        "shortdesc": "Options that can be specified when opening a document.",
        "elementCount": 1,
        "propertyCount": 0,
        "methodCount": 0,
        "properties": [],
        "methods": []
    },
    "PhotoCDOpenOptions": {
        "class": "PhotoCDOpenOptions",
        "superClass": "OpenOptions",
        "shortdesc": "DEPRECATED.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "pixelSize",
                "shortdesc": "The dimensions of the image.",
                "datatype": {
                    "type": {
                        "@href": "#\/PhotoCDSize",
                        "@": "PhotoCDSize"
                    }
                }
            },
            {
                "@name": "colorProfileName",
                "shortdesc": "The profile to use when reading the image.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The resolution of the image (in pixels per inch)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "colorSpace",
                "shortdesc": "The color space for the image.",
                "datatype": {
                    "type": {
                        "@href": "#\/PhotoCDColorSpace",
                        "@": "PhotoCDColorSpace"
                    }
                }
            },
            {
                "@name": "orientation",
                "shortdesc": "The image orientation.",
                "datatype": {
                    "type": {
                        "@href": "#\/Orientation",
                        "@": "Orientation"
                    }
                }
            }
        ],
        "methods": []
    },
    "RawFormatOpenOptions": {
        "class": "RawFormatOpenOptions",
        "superClass": "OpenOptions",
        "shortdesc": "Options that can be specified when opening a document in RAW format.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "height",
                "shortdesc": "The image height (in pixels)",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "width",
                "shortdesc": "The image width (in pixels)",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "channelNumber",
                "shortdesc": "The number of channels in the image. Valid only when 'bits per channel' = 16. Range: 1 to 56.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "interleaveChannels",
                "shortdesc": "If true, color values are stored sequentially.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "bitsPerChannel",
                "shortdesc": "The number of bits for each channel. Valid values: 8 or 16.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "byteOrder",
                "shortdesc": "The order in which bytes will be read. Valid only when 'bits per channel' = 16.",
                "datatype": {
                    "type": {
                        "@href": "#\/ByteOrderType",
                        "@": "ByteOrderType"
                    }
                }
            },
            {
                "@name": "headerSize",
                "shortdesc": "The number of bytes of information that will appear in the file before actual image information begins; that is, the number of zeroes inserted at the beginning of the file as placeholders. Range: 0 to 1919999.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "retainHeader",
                "shortdesc": "If true, the header is retained when saving.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "GenericPDFOpenOptions": {
        "class": "GenericPDFOpenOptions",
        "superClass": "OpenOptions",
        "shortdesc": "Options that can be specified when opening a generic PDF document.",
        "elementCount": 1,
        "propertyCount": 14,
        "methodCount": 0,
        "properties": [
            {
                "@name": "resolution",
                "shortdesc": "The resolution of the document (in pixels per inch)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "mode",
                "shortdesc": "The document mode.",
                "datatype": {
                    "type": {
                        "@href": "#\/OpenDocumentMode",
                        "@": "OpenDocumentMode"
                    }
                }
            },
            {
                "@name": "antiAlias",
                "shortdesc": "If true, anti-aliasing is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "page",
                "shortdesc": "The number of the page or image to open.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "object",
                "shortdesc": "The number of the 3d object to open.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "constrainProportions",
                "shortdesc": "DEPRECATED.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "height",
                "shortdesc": "DEPRECATED.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "width",
                "shortdesc": "DEPRECATED.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "bitsPerChannel",
                "shortdesc": "The number of bits per channel.",
                "datatype": {
                    "type": {
                        "@href": "#\/BitsPerChannelType",
                        "@": "BitsPerChannelType"
                    }
                }
            },
            {
                "@name": "usePageNumber",
                "shortdesc": "If true, the value specified in the page property refers to a page number. If false, the value specifies an image number.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "use3DObjectNumber",
                "shortdesc": "If true, the value specified in the page property refers to a page number. If false, the value specifies an image number.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "name",
                "shortdesc": "The name of the document.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "cropPage",
                "shortdesc": "The cropping method to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/CropToType",
                        "@": "CropToType"
                    }
                }
            },
            {
                "@name": "suppressWarnings",
                "shortdesc": "If true, suppresses any warnings that may occur during opening.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "GenericEPSOpenOptions": {
        "class": "GenericEPSOpenOptions",
        "superClass": "OpenOptions",
        "shortdesc": "Options that can be specified when opening a generic EPS document.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "height",
                "shortdesc": "The image height.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "width",
                "shortdesc": "The image width.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The resolution of the document (in pixels per inch)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "mode",
                "shortdesc": "The document mode.",
                "datatype": {
                    "type": {
                        "@href": "#\/OpenDocumentMode",
                        "@": "OpenDocumentMode"
                    }
                }
            },
            {
                "@name": "antiAlias",
                "shortdesc": "If true, anti-aliasing is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "constrainProportions",
                "shortdesc": "If true, the image proportions are constrained.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "DICOMOpenOptions": {
        "class": "DICOMOpenOptions",
        "superClass": "OpenOptions",
        "shortdesc": "Options for opening a DICOM document.",
        "elementCount": 1,
        "propertyCount": 7,
        "methodCount": 0,
        "properties": [
            {
                "@name": "anonymize",
                "shortdesc": "If true, patient information is anonymized.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "showOverlays",
                "shortdesc": "If true, overlays are shown (if present).",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "rows",
                "shortdesc": "The number of rows in an n-up configuration.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "columns",
                "shortdesc": "The number of columns in an n-up configuration.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "windowWidth",
                "shortdesc": "The brightness of the image in Houndsfield units.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "windowLevel",
                "shortdesc": "The contrast of the image in Houndsfield units.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "reverse",
                "shortdesc": "If true, the image is inverted.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "CameraRAWOpenOptions": {
        "class": "CameraRAWOpenOptions",
        "superClass": "OpenOptions",
        "shortdesc": "Options for opening a camera RAW document.",
        "elementCount": 1,
        "propertyCount": 27,
        "methodCount": 0,
        "properties": [
            {
                "@name": "colorSpace",
                "shortdesc": "The image color space.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorSpaceType",
                        "@": "ColorSpaceType"
                    }
                }
            },
            {
                "@name": "bitsPerChannel",
                "shortdesc": "The number of bits per channel.",
                "datatype": {
                    "type": {
                        "@href": "#\/BitsPerChannelType",
                        "@": "BitsPerChannelType"
                    }
                }
            },
            {
                "@name": "size",
                "shortdesc": "The size of the new document.",
                "datatype": {
                    "type": {
                        "@href": "#\/CameraRAWSize",
                        "@": "CameraRAWSize"
                    }
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The resolution of the document (in pixels per inch)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "settings",
                "shortdesc": "The global settings for all Camera RAW options.",
                "datatype": {
                    "type": {
                        "@href": "#\/CameraRAWSettingsType",
                        "@": "CameraRAWSettingsType"
                    },
                    "value": "CameraRAWSettingsType.CAMERA"
                }
            },
            {
                "@name": "whiteBalance",
                "shortdesc": "The white balance options for the image.",
                "datatype": {
                    "type": {
                        "@href": "#\/WhiteBalanceType",
                        "@": "WhiteBalanceType"
                    }
                }
            },
            {
                "@name": "temperature",
                "shortdesc": "The temperature of the shot. Range: 2000 to 50000.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "tint",
                "shortdesc": "The tint of the shot. Range: -150 to 150.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "exposure",
                "shortdesc": "The exposure of the shot. Range: -4.0 to 4.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "shadows",
                "shortdesc": "The shadows of the shot. Range: 0 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "brightness",
                "shortdesc": "The brightness of the shot. Range: 0 to 150.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "contrast",
                "shortdesc": "The constrast of the shot. Range: -50 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "saturation",
                "shortdesc": "The saturation of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "sharpness",
                "shortdesc": "The sharpness of the shot. Range: 0 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "luminanceSmoothing",
                "shortdesc": "The luminance smoothing of the shot. Range: 0 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "colorNoiseReduction",
                "shortdesc": "The color noise reduction of the shot. Range: 0 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "chromaticAberrationRC",
                "shortdesc": "The chromatic aberration R\/C of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "chromaticAberrationBY",
                "shortdesc": "The chromatic aberration B\/Y of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "vignettingAmount",
                "shortdesc": "The vignetting amount of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "vignettingMidpoint",
                "shortdesc": "The vignetting mid point of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "shadowTint",
                "shortdesc": "The shadow tint of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "redHue",
                "shortdesc": "The red hue of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "redSaturation",
                "shortdesc": "The red saturation of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "greenHue",
                "shortdesc": "The green hue of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "greenSaturation",
                "shortdesc": "The green saturation of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "blueHue",
                "shortdesc": "The blue hue of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "blueSaturation",
                "shortdesc": "The blue saturation of the shot. Range: -100 to 100.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": []
    },
    "SaveOptions": {
        "class": "SaveOptions",
        "superClass": null,
        "shortdesc": "Options for saving a file.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "SAVECHANGES",
                "@rwaccess": "readonly",
                "shortdesc": "Save changes.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "DONOTSAVECHANGES",
                "@rwaccess": "readonly",
                "shortdesc": "Do not save changes.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PROMPTTOSAVECHANGES",
                "@rwaccess": "readonly",
                "shortdesc": "Ask the user whether to save.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PhotoshopSaveOptions": {
        "class": "PhotoshopSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a Photoshop document.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "layers",
                "shortdesc": "If true, the layers are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "annotations",
                "shortdesc": "If true, the annotations are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "spotColors",
                "shortdesc": "If true, spot colors are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "BMPSaveOptions": {
        "class": "BMPSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in BMP format.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "osType",
                "shortdesc": "The target operating system.",
                "datatype": {
                    "type": {
                        "@href": "#\/OperatingSystem",
                        "@": "OperatingSystem"
                    },
                    "value": "OperatingSystem.WINDOWS"
                }
            },
            {
                "@name": "depth",
                "shortdesc": "The number of bits per sample.",
                "datatype": {
                    "type": {
                        "@href": "#\/BMPDepthType",
                        "@": "BMPDepthType"
                    },
                    "value": "BMPDepthType.TWENTYFOUR"
                }
            },
            {
                "@name": "rleCompression",
                "shortdesc": "If true, RLE compression is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "flipRowOrder",
                "shortdesc": "If true, the image is written from bottom to top.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "GIFSaveOptions": {
        "class": "GIFSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in GIF format.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "colors",
                "shortdesc": "The number of colors in palette. Not valid for all palette types.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "dither",
                "shortdesc": "The type of dither.",
                "datatype": {
                    "type": {
                        "@href": "#\/DitherType",
                        "@": "DitherType"
                    }
                }
            },
            {
                "@name": "ditherAmount",
                "shortdesc": "The amount of dither. Valid only when 'dither type' is diffusion. Range: 1 to 100.",
                "datatype": {
                    "type": "int",
                    "min": "1",
                    "max": "100",
                    "value": "75"
                }
            },
            {
                "@name": "forced",
                "shortdesc": "The type of colors to force into the color palette.",
                "datatype": {
                    "type": {
                        "@href": "#\/ForcedColors",
                        "@": "ForcedColors"
                    }
                }
            },
            {
                "@name": "interlaced",
                "shortdesc": "If true, rows are interlaced.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "matte",
                "shortdesc": "The color to use to fill anti-aliased edges adjacent to transparent areas of the image. Default: white.",
                "datatype": {
                    "type": {
                        "@href": "#\/MatteType",
                        "@": "MatteType"
                    }
                }
            },
            {
                "@name": "palette",
                "shortdesc": "The type of palette to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/PaletteType",
                        "@": "PaletteType"
                    },
                    "value": "PaletteType.LOCALSELECTIVE"
                }
            },
            {
                "@name": "preserveExactColors",
                "shortdesc": "If true, protects colors in the image that contain entries in the color table from being dithered. Valid only when 'dither' = diffusion.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "transparency",
                "shortdesc": "If true, preserves transparent ares of the image during GIF conversion.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "EPSSaveOptions": {
        "class": "EPSSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in EPS format.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "preview",
                "shortdesc": "The type of preview.",
                "datatype": {
                    "type": {
                        "@href": "#\/MacPreviewType",
                        "@": "MacPreviewType"
                    },
                    "value": "MacPreviewType.MONOCHROMETIFF"
                }
            },
            {
                "@name": "encoding",
                "shortdesc": "The type of encoding to use for the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveEncoding",
                        "@": "SaveEncoding"
                    },
                    "value": "SaveEncoding.BINARY"
                }
            },
            {
                "@name": "halftoneScreen",
                "shortdesc": "If true, includes the halftone screen.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "transferFunction",
                "shortdesc": "If true, includes the transfer functions in the document to compensate for dot gain between the image and film.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "psColorManagement",
                "shortdesc": "If true, uses PostScript color management.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "vectorData",
                "shortdesc": "If true, includes vector data. Valid only when the document contains vector data (un-rasterized text).",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "interpolation",
                "shortdesc": "If true, uses image interpolation.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "transparentWhites",
                "shortdesc": "If true, displays white areas as transparent. Valid only for documents in BitMap mode.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "JPEGSaveOptions": {
        "class": "JPEGSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in JPEG format.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "formatOptions",
                "shortdesc": "The download format to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/FormatOptionsType",
                        "@": "FormatOptionsType"
                    },
                    "value": "FormatOptionsType.STANDARDBASELINE"
                }
            },
            {
                "@name": "matte",
                "shortdesc": "The color to use to fill anti-aliased edges adjacent to transparent areas of the image. Default: white.",
                "datatype": {
                    "type": {
                        "@href": "#\/MatteType",
                        "@": "MatteType"
                    }
                }
            },
            {
                "@name": "scans",
                "shortdesc": "The number of scans. Valid only for progressive type JPEG files.",
                "datatype": {
                    "type": "int",
                    "min": "3",
                    "max": "5"
                }
            },
            {
                "@name": "quality",
                "shortdesc": "The quality of the produced image.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "12",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "PDFSaveOptions": {
        "class": "PDFSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in PDF format.",
        "elementCount": 1,
        "propertyCount": 32,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "layers",
                "shortdesc": "If true, the layers are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "annotations",
                "shortdesc": "If true, the annotations are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "spotColors",
                "shortdesc": "If true, the spot colors are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "downgradeColorProfile",
                "shortdesc": "DEPRECATED, ( should the embedded color profile be downgraded to version 2 )",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "transparency",
                "shortdesc": "DEPRECATED.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "interpolation",
                "shortdesc": "DEPRECATED. ( use image interpolation? )",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "vectorData",
                "shortdesc": "DEPRECATED. ( include vector data )",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedFonts",
                "shortdesc": "DEPRECATED. ( embed fonts? Only valid if a text layer is included )",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "useOutlines",
                "shortdesc": "DEPRECATED. ( use outlines for text? Only valid if vector data is included )",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "encoding",
                "shortdesc": "The encoding method to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/PDFEncodingType",
                        "@": "PDFEncodingType"
                    }
                }
            },
            {
                "@name": "jpegQuality",
                "shortdesc": "The quality of the produced image. Valid only for JPEG-encoded PDF documents. Range: 0 to 12.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "12"
                }
            },
            {
                "@name": "presetFile",
                "shortdesc": "The preset file to use for settings; overrides other settings.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "PDFStandard",
                "shortdesc": "The PDF standard to make the document compatible with.",
                "datatype": {
                    "type": {
                        "@href": "#\/PDFStandardType",
                        "@": "PDFStandardType"
                    }
                }
            },
            {
                "@name": "PDFCompatibility",
                "shortdesc": "The PDF version to make the document compatible with.",
                "datatype": {
                    "type": {
                        "@href": "#\/PDFCompatibilityType",
                        "@": "PDFCompatibilityType"
                    }
                }
            },
            {
                "@name": "description",
                "shortdesc": "Description of the save options in use.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "preserveEditing",
                "shortdesc": "If true, allows users to reopen the PDF in Photoshop with native Photoshop data intact.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedThumbnail",
                "shortdesc": "If true, includes a small preview image in Acrobat.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "optimizeForWeb",
                "shortdesc": "If true, improves performance of PDFs on Web servers.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "view",
                "shortdesc": "If true, opens the saved PDF in Acrobat.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "downSample",
                "shortdesc": "The downsample method to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/PDFResampleType",
                        "@": "PDFResampleType"
                    }
                }
            },
            {
                "@name": "downSampleSize",
                "shortdesc": "The size (in pixels per inch) to downsample images to if they exceed the value specified for 'down sample size limit'.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "downSampleSizeLimit",
                "shortdesc": "Limits downsampling or subsampling to images that exceed this value (in pixels per inch).",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "tileSize",
                "shortdesc": "The compression option. Valid only when encoding is JPEG2000.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "convertToEightBit",
                "shortdesc": "If true, converts a 16-bit image to 8-bit for better compatibility with other applications.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "colorConversion",
                "shortdesc": "If true, converts the color profile to the destination profile.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "destinationProfile",
                "shortdesc": "Describes the final RGB or CMYK output device, such as a monitor or press standard.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "profileInclusionPolicy",
                "shortdesc": "If true, shows which profiles to include.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "outputCondition",
                "shortdesc": "An optional comment field for inserting descriptions of the output condition. The text is stored in the PDF\/X file.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "outputConditionID",
                "shortdesc": "The identifier for the output condition.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "registryName",
                "shortdesc": "The URL where the output condition is registered.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": []
    },
    "PICTFileSaveOptions": {
        "class": "PICTFileSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in PICT format.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The number of bits per pixel.",
                "datatype": {
                    "type": {
                        "@href": "#\/PICTBitsPerPixels",
                        "@": "PICTBitsPerPixels"
                    }
                }
            },
            {
                "@name": "compression",
                "shortdesc": "The compression method.",
                "datatype": {
                    "type": {
                        "@href": "#\/PICTCompression",
                        "@": "PICTCompression"
                    },
                    "value": "PICTCompression.NONE"
                }
            }
        ],
        "methods": []
    },
    "PICTResourceSaveOptions": {
        "class": "PICTResourceSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document as a PICT resource file.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The number of bits per pixel.",
                "datatype": {
                    "type": {
                        "@href": "#\/PICTBitsPerPixels",
                        "@": "PICTBitsPerPixels"
                    }
                }
            },
            {
                "@name": "compression",
                "shortdesc": "The compression type.",
                "datatype": {
                    "type": {
                        "@href": "#\/PICTCompression",
                        "@": "PICTCompression"
                    },
                    "value": "PICTCompression.NONE"
                }
            },
            {
                "@name": "resourceID",
                "shortdesc": "The ID of the PICT resource.",
                "datatype": {
                    "type": "int",
                    "value": "128"
                }
            },
            {
                "@name": "name",
                "shortdesc": "The name of PICT resource.",
                "datatype": {
                    "type": "string",
                    "value": "\"\""
                }
            }
        ],
        "methods": []
    },
    "PixarSaveOptions": {
        "class": "PixarSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in Pixar format.",
        "elementCount": 1,
        "propertyCount": 1,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "PNGSaveOptions": {
        "class": "PNGSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in PNG format.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "interlaced",
                "shortdesc": "If true, rows are interlaced.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "compression",
                "shortdesc": "Compression used on the image.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "9",
                    "value": "0"
                }
            }
        ],
        "methods": []
    },
    "RawSaveOptions": {
        "class": "RawSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in RAW format.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "spotColors",
                "shortdesc": "If true, spot colors are saved.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "SGIRGBSaveOptions": {
        "class": "SGIRGBSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in SGI RGB format.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "spotColors",
                "shortdesc": "If true, the spot colors are saved.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "TargaSaveOptions": {
        "class": "TargaSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in TGA (Targa) format.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "resolution",
                "shortdesc": "The number of bits per pixel.",
                "datatype": {
                    "type": {
                        "@href": "#\/TargaBitsPerPixels",
                        "@": "TargaBitsPerPixels"
                    },
                    "value": "TargaBitsPerPixels.TWENTYFOUR"
                }
            },
            {
                "@name": "rleCompression",
                "shortdesc": "If true, RLE compression is used.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "TiffSaveOptions": {
        "class": "TiffSaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in TIFF format.",
        "elementCount": 1,
        "propertyCount": 12,
        "methodCount": 0,
        "properties": [
            {
                "@name": "alphaChannels",
                "shortdesc": "If true, the alpha channels are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "layers",
                "shortdesc": "If true, the layers are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "annotations",
                "shortdesc": "If true, the annotations are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "spotColors",
                "shortdesc": "If true, spot colors are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "imageCompression",
                "shortdesc": "The compression type.",
                "datatype": {
                    "type": {
                        "@href": "#\/TiffEncodingType",
                        "@": "TiffEncodingType"
                    },
                    "value": "TiffEncodingType.NONE"
                }
            },
            {
                "@name": "jpegQuality",
                "shortdesc": "The quality of the produced image, which is inversely proportionate to the amount of JPEG compression. Valid only for JPEG compressed TIFF documents. Range: 0 to 12.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "12"
                }
            },
            {
                "@name": "byteOrder",
                "shortdesc": "The order in which the bytes will be read. Default: Mac OS when running in Mac OS, and IBM PC when running in Windows.",
                "datatype": {
                    "type": {
                        "@href": "#\/ByteOrderType",
                        "@": "ByteOrderType"
                    }
                }
            },
            {
                "@name": "saveImagePyramid",
                "shortdesc": "If true, preserves multi-resolution information.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "transparency",
                "shortdesc": "If true, saves the transparency as an additional alpha channel when the file is opened in another application.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "layerCompression",
                "shortdesc": "The method of compression to use when saving layers (as opposed to saving composite data). Valid only when 'layers' = true.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerCompressionType",
                        "@": "LayerCompressionType"
                    }
                }
            },
            {
                "@name": "interleaveChannels",
                "shortdesc": "If true, the channels in the image are interleaved.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            }
        ],
        "methods": []
    },
    "DCS1_SaveOptions": {
        "class": "DCS1_SaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in Photoshop DCS 1.0 format.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "preview",
                "shortdesc": "The type of preview.",
                "datatype": {
                    "type": {
                        "@href": "#\/MacPreviewType",
                        "@": "MacPreviewType"
                    },
                    "value": "MacPreviewType.MACOSEIGHTBIT"
                }
            },
            {
                "@name": "DCS",
                "shortdesc": "The DCS type.",
                "datatype": {
                    "type": {
                        "@href": "#\/DCSType",
                        "@": "DCSType"
                    },
                    "value": "DCSType.COLORCOMPOSITE"
                }
            },
            {
                "@name": "encoding",
                "shortdesc": "The type of encoding to use for the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveEncoding",
                        "@": "SaveEncoding"
                    },
                    "value": "SaveEncoding.BINARY"
                }
            },
            {
                "@name": "halftoneScreen",
                "shortdesc": "If true, includes halftone screen.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "transferFunction",
                "shortdesc": "If true, includes transfer functions in the document to compensate for dot gain between the image and film.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "vectorData",
                "shortdesc": "If true, includes vector data. Valid only if the document contains vector data (un-rasterized text).",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "interpolation",
                "shortdesc": "If true, image interpolation is used.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            }
        ],
        "methods": []
    },
    "DCS2_SaveOptions": {
        "class": "DCS2_SaveOptions",
        "superClass": "SaveOptions",
        "shortdesc": "Options for saving a document in Photoshop DCS 2.0 format.",
        "elementCount": 1,
        "propertyCount": 10,
        "methodCount": 0,
        "properties": [
            {
                "@name": "spotColors",
                "shortdesc": "If true, the spot colors are saved.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "embedColorProfile",
                "shortdesc": "If true, the color profile is embedded in the document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "preview",
                "shortdesc": "The type of preview.",
                "datatype": {
                    "type": {
                        "@href": "#\/MacPreviewType",
                        "@": "MacPreviewType"
                    },
                    "value": "MacPreviewType.MACOSEIGHTBIT"
                }
            },
            {
                "@name": "DCS",
                "shortdesc": "The DCS type.",
                "datatype": {
                    "type": {
                        "@href": "#\/DCSType",
                        "@": "DCSType"
                    },
                    "value": "DCSType.NOCOMPOSITE"
                }
            },
            {
                "@name": "multiFileDCS",
                "shortdesc": "If true, saves color channels as multiple files.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "encoding",
                "shortdesc": "The type of encoding to use for document.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveEncoding",
                        "@": "SaveEncoding"
                    },
                    "value": "SaveEncoding.BINARY"
                }
            },
            {
                "@name": "halftoneScreen",
                "shortdesc": "If true, includes halftone screen.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "transferFunction",
                "shortdesc": "If true, includes transfer functions in the document to compensate for dot gain between the image and film.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "vectorData",
                "shortdesc": "If true, includes vector data. Valid only if the document contains vector data (un-rasterized text).",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "interpolation",
                "shortdesc": "If true, image interpolation is used.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            }
        ],
        "methods": []
    },
    "ExportOptions": {
        "class": "ExportOptions",
        "superClass": null,
        "shortdesc": "Options for exporting an object.",
        "elementCount": 1,
        "propertyCount": 0,
        "methodCount": 0,
        "properties": [],
        "methods": []
    },
    "ExportOptionsIllustrator": {
        "class": "ExportOptionsIllustrator",
        "superClass": "ExportOptions",
        "shortdesc": "Options for exporting Illustrator paths.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "path",
                "shortdesc": "The path to export.",
                "datatype": {
                    "type": {
                        "@href": "#\/IllustratorPathType",
                        "@": "IllustratorPathType"
                    },
                    "value": "IllustratorPathType.DOCUMENTBOUNDS"
                }
            },
            {
                "@name": "pathName",
                "shortdesc": "The name of the path to export. Valid only for named paths.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": []
    },
    "ExportOptionsSaveForWeb": {
        "class": "ExportOptionsSaveForWeb",
        "superClass": "ExportOptions",
        "shortdesc": "Options for exporting Save For Web files.",
        "elementCount": 1,
        "propertyCount": 17,
        "methodCount": 0,
        "properties": [
            {
                "@name": "format",
                "shortdesc": "The file format to use. Save For Web supports only Compuserve GIF, JPEG, PNG-8, PNG-24, and BMP formats.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveDocumentType",
                        "@": "SaveDocumentType"
                    },
                    "value": "SaveDocumentType.COMPUSERVEGIF"
                }
            },
            {
                "@name": "PNG8",
                "shortdesc": "If true, uses 8 bits. If false, uses 24 bits. Valid only when 'format' = PNG.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "lossy",
                "shortdesc": "The amount of lossiness allowed.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "colorReduction",
                "shortdesc": "The color reduction algorithm.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorReductionType",
                        "@": "ColorReductionType"
                    },
                    "value": "ColorReductionType.SELECTIVE"
                }
            },
            {
                "@name": "colors",
                "shortdesc": "The number of colors in the palette.",
                "datatype": {
                    "type": "int",
                    "value": "256"
                }
            },
            {
                "@name": "dither",
                "shortdesc": "The type of dither.",
                "datatype": {
                    "type": {
                        "@href": "#\/DitherType",
                        "@": "DitherType"
                    },
                    "value": "DitherType.DIFFUSION"
                }
            },
            {
                "@name": "ditherAmount",
                "shortdesc": "The amount of dither. Valid only when 'dither' = diffusion.",
                "datatype": {
                    "type": "int",
                    "value": "100"
                }
            },
            {
                "@name": "transparency",
                "shortdesc": "If true, transparent areas of the image are included in the saved image.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "transparencyDither",
                "shortdesc": "The transparency dither algorithm.",
                "datatype": {
                    "type": {
                        "@href": "#\/DitherType",
                        "@": "DitherType"
                    },
                    "value": "DitherType.NONE"
                }
            },
            {
                "@name": "transparencyAmount",
                "shortdesc": "The amount of transparency dither. Valid only when 'transparency' = true.",
                "datatype": {
                    "type": "int",
                    "value": "100"
                }
            },
            {
                "@name": "interlaced",
                "shortdesc": "If true, the image downloads in multiple passes, progressive.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "matteColor",
                "shortdesc": "The colors to blend transparent pixels against.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "webSnap",
                "shortdesc": "The tolerance amount within which to snap close colors to web palette colors.",
                "datatype": {
                    "type": "int",
                    "value": "0"
                }
            },
            {
                "@name": "optimized",
                "shortdesc": "If true, creates smaller but less compatible files.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "quality",
                "shortdesc": "The quality of the produced image (as a percentage). Range: 0 to 100.",
                "datatype": {
                    "type": "int",
                    "value": "60"
                }
            },
            {
                "@name": "includeProfile",
                "shortdesc": "If true, includes the document's embedded profile.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "blur",
                "shortdesc": "The amount of blur to apply to the image to reduce artifacts.",
                "datatype": {
                    "type": "number",
                    "value": "0"
                }
            }
        ],
        "methods": []
    },
    "DocumentConversionOptions": {
        "class": "DocumentConversionOptions",
        "superClass": null,
        "shortdesc": "Options for converting documents.",
        "elementCount": 1,
        "propertyCount": 0,
        "methodCount": 0,
        "properties": [],
        "methods": []
    },
    "BitmapConversionOptions": {
        "class": "BitmapConversionOptions",
        "superClass": "DocumentConversionOptions",
        "shortdesc": "Options for changing the document mode to Bitmap.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "resolution",
                "shortdesc": "The output resolution (in pixels per inch)",
                "datatype": {
                    "type": "number",
                    "value": "72"
                }
            },
            {
                "@name": "method",
                "shortdesc": "The conversion method.",
                "datatype": {
                    "type": {
                        "@href": "#\/BitmapConversionType",
                        "@": "BitmapConversionType"
                    },
                    "value": "BitmapConversionType.DIFFUSIONDITHER"
                }
            },
            {
                "@name": "patternName",
                "shortdesc": "The name of the pattern to use. Valid only when 'method' = custom.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "frequency",
                "shortdesc": "The number of printer dots per inch. Valid only when 'method' = halftone screen. Range: 1.0 to 999.99.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "angle",
                "shortdesc": "The angle (in degrees) at which to orient individual dots. Valid only when 'method' = halftone screen. Range: -180 to 180.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "shape",
                "shortdesc": "The dot shape. Valid only when 'method' = halftone screen.",
                "datatype": {
                    "type": {
                        "@href": "#\/BitmapHalfToneType",
                        "@": "BitmapHalfToneType"
                    }
                }
            }
        ],
        "methods": []
    },
    "IndexedConversionOptions": {
        "class": "IndexedConversionOptions",
        "superClass": "DocumentConversionOptions",
        "shortdesc": "Options for converting an RGB image to an indexed color model.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "palette",
                "shortdesc": "The type of palette.",
                "datatype": {
                    "type": {
                        "@href": "#\/PaletteType",
                        "@": "PaletteType"
                    },
                    "value": "PaletteType.EXACT"
                }
            },
            {
                "@name": "colors",
                "shortdesc": "The number of colors in the palette. Not valid for all palette types.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "forced",
                "shortdesc": "The type of colors to force into the color palette.",
                "datatype": {
                    "type": {
                        "@href": "#\/ForcedColors",
                        "@": "ForcedColors"
                    }
                }
            },
            {
                "@name": "transparency",
                "shortdesc": "If true, preserves transparent areas of the image during conversion to GIF format.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "dither",
                "shortdesc": "The type of dither.",
                "datatype": {
                    "type": {
                        "@href": "#\/DitherType",
                        "@": "DitherType"
                    }
                }
            },
            {
                "@name": "ditherAmount",
                "shortdesc": "The amount of dither. Valid only when 'dither' = diffusion.",
                "datatype": {
                    "type": "int",
                    "min": "1",
                    "max": "100"
                }
            },
            {
                "@name": "preserveExactColors",
                "shortdesc": "If true, protects colors in the image that contain entries in the color table from being dithered. Valid only when 'dither' = diffusion.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "matte",
                "shortdesc": "The color to use to fill anti-aliased edges adjacent to transparent areas of the image. When transparency = false, the matte color is applied to transparent areas.",
                "datatype": {
                    "type": {
                        "@href": "#\/MatteType",
                        "@": "MatteType"
                    }
                }
            }
        ],
        "methods": []
    },
    "Color": {
        "class": "Color",
        "superClass": null,
        "shortdesc": "A color value.",
        "elementCount": 1,
        "propertyCount": 0,
        "methodCount": 0,
        "properties": [],
        "methods": []
    },
    "SolidColor": {
        "class": "SolidColor",
        "superClass": null,
        "shortdesc": "A color definition used in the document.",
        "elementCount": 2,
        "propertyCount": 14,
        "methodCount": 1,
        "properties": [
            {
                "@name": "model",
                "shortdesc": "The color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorModel",
                        "@": "ColorModel"
                    }
                }
            },
            {
                "@name": "rgb",
                "shortdesc": "The RGB color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "gray",
                "shortdesc": "The grayscale color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/GrayColor",
                        "@": "GrayColor"
                    }
                }
            },
            {
                "@name": "cmyk",
                "shortdesc": "The CMYK color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/CMYKColor",
                        "@": "CMYKColor"
                    }
                }
            },
            {
                "@name": "lab",
                "shortdesc": "The lab color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/LabColor",
                        "@": "LabColor"
                    }
                }
            },
            {
                "@name": "hsb",
                "shortdesc": "The HSB color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/HSBColor",
                        "@": "HSBColor"
                    }
                }
            },
            {
                "@name": "nearestWebColor",
                "@rwaccess": "readonly",
                "shortdesc": "The nearest web color to the current color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "model",
                "shortdesc": "The color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorModel",
                        "@": "ColorModel"
                    }
                }
            },
            {
                "@name": "rgb",
                "shortdesc": "The RGB color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "gray",
                "shortdesc": "The grayscale color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/GrayColor",
                        "@": "GrayColor"
                    }
                }
            },
            {
                "@name": "cmyk",
                "shortdesc": "The CMYK color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/CMYKColor",
                        "@": "CMYKColor"
                    }
                }
            },
            {
                "@name": "lab",
                "shortdesc": "The lab color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/LabColor",
                        "@": "LabColor"
                    }
                }
            },
            {
                "@name": "hsb",
                "shortdesc": "The HSB color model.",
                "datatype": {
                    "type": {
                        "@href": "#\/HSBColor",
                        "@": "HSBColor"
                    }
                }
            },
            {
                "@name": "nearestWebColor",
                "@rwaccess": "readonly",
                "shortdesc": "The nearest web color to the current color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "isEqual",
                "shortdesc": "Compares two colors.",
                "parameters": {
                    "parameter": {
                        "@name": "color",
                        "shortdesc": "Another color to compare with.",
                        "datatype": {
                            "type": {
                                "@href": "#\/SolidColor",
                                "@": "SolidColor"
                            }
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                }
            }
        ]
    },
    "GrayColor": {
        "class": "GrayColor",
        "superClass": "Color",
        "shortdesc": "Options for defining a gray color.",
        "elementCount": 2,
        "propertyCount": 2,
        "methodCount": 0,
        "properties": [
            {
                "@name": "gray",
                "shortdesc": "The gray value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "100",
                    "value": "0"
                }
            },
            {
                "@name": "gray",
                "shortdesc": "The gray value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "100",
                    "value": "0"
                }
            }
        ],
        "methods": []
    },
    "RGBColor": {
        "class": "RGBColor",
        "superClass": "Color",
        "shortdesc": "The definition of an RGB color mode.",
        "elementCount": 2,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "red",
                "shortdesc": "The red color value. Range: 0.0 to 255.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "255",
                    "value": "255"
                }
            },
            {
                "@name": "green",
                "shortdesc": "The green color value. Range: 0.0 to 255.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "255",
                    "value": "255"
                }
            },
            {
                "@name": "blue",
                "shortdesc": "The blue color value. Range: 0.0 to 255.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "255",
                    "value": "255"
                }
            },
            {
                "@name": "hexValue",
                "shortdesc": "The hex representation of this color.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "red",
                "shortdesc": "The red color value. Range: 0.0 to 255.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "255",
                    "value": "255"
                }
            },
            {
                "@name": "green",
                "shortdesc": "The green color value. Range: 0.0 to 255.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "255",
                    "value": "255"
                }
            },
            {
                "@name": "blue",
                "shortdesc": "The blue color value. Range: 0.0 to 255.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "255",
                    "value": "255"
                }
            },
            {
                "@name": "hexValue",
                "shortdesc": "The hex representation of this color.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": []
    },
    "CMYKColor": {
        "class": "CMYKColor",
        "superClass": "Color",
        "shortdesc": "A CMYK color specification.",
        "elementCount": 2,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "cyan",
                "shortdesc": "The cyan color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "magenta",
                "shortdesc": "The magenta color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "yellow",
                "shortdesc": "The yellow color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "black",
                "shortdesc": "The black color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "cyan",
                "shortdesc": "The cyan color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "magenta",
                "shortdesc": "The magenta color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "yellow",
                "shortdesc": "The yellow color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "black",
                "shortdesc": "The black color value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            }
        ],
        "methods": []
    },
    "LabColor": {
        "class": "LabColor",
        "superClass": "Color",
        "shortdesc": "A Lab color specification.",
        "elementCount": 2,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "L",
                "shortdesc": "The L-value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "A",
                "shortdesc": "The a-value. Range: -128.0 and 127.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "B",
                "shortdesc": "The b-value. Range: -128.0 and 127.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "L",
                "shortdesc": "The L-value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "A",
                "shortdesc": "The a-value. Range: -128.0 and 127.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "B",
                "shortdesc": "The b-value. Range: -128.0 and 127.0.",
                "datatype": {
                    "type": "number"
                }
            }
        ],
        "methods": []
    },
    "HSBColor": {
        "class": "HSBColor",
        "superClass": "Color",
        "shortdesc": "An HSB color specification.",
        "elementCount": 2,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "hue",
                "shortdesc": "The hue value. Range: 0.0 to 360.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "saturation",
                "shortdesc": "The saturation value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "brightness",
                "shortdesc": "The brightness value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "hue",
                "shortdesc": "The hue value. Range: 0.0 to 360.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "saturation",
                "shortdesc": "The saturation value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "brightness",
                "shortdesc": "The brightness value. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            }
        ],
        "methods": []
    },
    "NoColor": {
        "class": "NoColor",
        "superClass": "Color",
        "shortdesc": "Represents a missing color.",
        "elementCount": 1,
        "propertyCount": 0,
        "methodCount": 0,
        "properties": [],
        "methods": []
    },
    "PresentationOptions": {
        "class": "PresentationOptions",
        "superClass": null,
        "shortdesc": "Options for the PDF presentation command.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "presentation",
                "shortdesc": "If true, the file type is presentation. If false, the file type is Multi-Page document.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "autoAdvance",
                "shortdesc": "If true, the presentation auto advances.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "interval",
                "shortdesc": "The amount of time (in seconds) before auto advancing the view. Valid only when 'auto advance' is true. Range: 1 to 60.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "loop",
                "shortdesc": "If true, the presentation loops after the last page.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "transition",
                "shortdesc": "The image transition type.",
                "datatype": {
                    "type": {
                        "@href": "#\/TransitionType",
                        "@": "TransitionType"
                    },
                    "value": "TransitionType.NONE"
                }
            },
            {
                "@name": "magnification",
                "shortdesc": "The magnification type when viewing the image.",
                "datatype": {
                    "type": {
                        "@href": "#\/MagnificationType",
                        "@": "MagnificationType"
                    },
                    "value": "MagnificationType.ACTUALSIZE"
                }
            },
            {
                "@name": "includeFilename",
                "shortdesc": "If true, includes the file name for the image.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "PDFFileOptions",
                "shortdesc": "Options for creating the PDF file.",
                "datatype": {
                    "type": {
                        "@href": "#\/PDFSaveOptions",
                        "@": "PDFSaveOptions"
                    }
                }
            }
        ],
        "methods": []
    },
    "GalleryOptions": {
        "class": "GalleryOptions",
        "superClass": null,
        "shortdesc": "Deprecated, the make photo gallery method has moved to Bridge.",
        "elementCount": 1,
        "propertyCount": 12,
        "methodCount": 0,
        "properties": [
            {
                "@name": "layoutStyle",
                "shortdesc": "The style to use for laying out the web page.",
                "datatype": {
                    "type": "string",
                    "value": "Centered Frame 1 - Basic"
                }
            },
            {
                "@name": "emailAddress",
                "shortdesc": "The email address to show on the web page.",
                "datatype": {
                    "type": "string",
                    "value": ""
                }
            },
            {
                "@name": "useShortExtension",
                "shortdesc": "Short web page extension .htm or long web page extension .html.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "useUTF8Encoding",
                "shortdesc": "Web page should use UTF-8 encoding.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeSubFolders",
                "shortdesc": "Include all files found in sub folders of the input folder.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "addSizeAttributes",
                "shortdesc": "Add width and height attributes for images.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "preserveAllMetadata",
                "shortdesc": "Save all of the metadata in the JPEG files.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "bannerOptions",
                "shortdesc": "Options related to banner settings.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryBannerOptions",
                        "@": "GalleryBannerOptions"
                    }
                }
            },
            {
                "@name": "imagesOptions",
                "shortdesc": "Options related to images settings.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryImagesOptions",
                        "@": "GalleryImagesOptions"
                    }
                }
            },
            {
                "@name": "thumbnailOptions",
                "shortdesc": "Options related to thumbnail settings.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryThumbnailOptions",
                        "@": "GalleryThumbnailOptions"
                    }
                }
            },
            {
                "@name": "customColorOptions",
                "shortdesc": "Options related to custom color settings.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryCustomColorOptions",
                        "@": "GalleryCustomColorOptions"
                    }
                }
            },
            {
                "@name": "securityOptions",
                "shortdesc": "Options related to security settings.",
                "datatype": {
                    "type": {
                        "@href": "#\/GallerySecurityOptions",
                        "@": "GallerySecurityOptions"
                    }
                }
            }
        ],
        "methods": []
    },
    "GalleryBannerOptions": {
        "class": "GalleryBannerOptions",
        "superClass": null,
        "shortdesc": "Deprecated, the make photo gallery method has moved to Bridge.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "siteName",
                "shortdesc": "Web photo gallery site name.",
                "datatype": {
                    "type": "string",
                    "value": "Adobe Web Photo Gallery"
                }
            },
            {
                "@name": "photographer",
                "shortdesc": "Web photo gallery photographer.",
                "datatype": {
                    "type": "string",
                    "value": ""
                }
            },
            {
                "@name": "contactInfo",
                "shortdesc": "Web photo gallery contact info.",
                "datatype": {
                    "type": "string",
                    "value": ""
                }
            },
            {
                "@name": "date",
                "shortdesc": "Web photo gallery date.",
                "datatype": {
                    "type": "string",
                    "value": ""
                }
            },
            {
                "@name": "font",
                "shortdesc": "The font setting for the banner text.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryFontType",
                        "@": "GalleryFontType"
                    },
                    "value": "GalleryFontType.ARIAL"
                }
            },
            {
                "@name": "fontSize",
                "shortdesc": "The size of the font for the banner text.",
                "datatype": {
                    "type": "int",
                    "min": "1",
                    "max": "7",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "GalleryImagesOptions": {
        "class": "GalleryImagesOptions",
        "superClass": null,
        "shortdesc": "Deprecated, the make photo gallery method has moved to Bridge.",
        "elementCount": 1,
        "propertyCount": 13,
        "methodCount": 0,
        "properties": [
            {
                "@name": "numericLinks",
                "shortdesc": "Add numeric links.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "resizeImages",
                "shortdesc": "Resize images data.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "dimension",
                "shortdesc": "Resized image dimensions in pixels.",
                "datatype": {
                    "type": "int",
                    "value": "350"
                }
            },
            {
                "@name": "resizeConstraint",
                "shortdesc": "How should the image be constrained.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryConstrainType",
                        "@": "GalleryConstrainType"
                    },
                    "value": "GalleryConstrainType.CONSTRAINBOTH"
                }
            },
            {
                "@name": "imageQuality",
                "shortdesc": "The quality setting for the JPEG image.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "12",
                    "value": "5"
                }
            },
            {
                "@name": "border",
                "shortdesc": "The amount of border pixels you want between your images.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "99",
                    "value": "0"
                }
            },
            {
                "@name": "includeFilename",
                "shortdesc": "Include the file name in the text for the gallery images.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "caption",
                "shortdesc": "Generate a caption for the images.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeCredits",
                "shortdesc": "Include the credits in the text for the gallery images.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeTitle",
                "shortdesc": "Include the title in the text for the gallery images.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeCopyright",
                "shortdesc": "Include the copyright in the text for the gallery images.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "font",
                "shortdesc": "Font for the gallery images text.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryFontType",
                        "@": "GalleryFontType"
                    },
                    "value": "GalleryFontType.ARIAL"
                }
            },
            {
                "@name": "fontSize",
                "shortdesc": "Font size for the gallery images text.",
                "datatype": {
                    "type": "int",
                    "min": "1",
                    "max": "7",
                    "value": "3"
                }
            }
        ],
        "methods": []
    },
    "GalleryThumbnailOptions": {
        "class": "GalleryThumbnailOptions",
        "superClass": null,
        "shortdesc": "Deprecated, the make photo gallery method has moved to Bridge.",
        "elementCount": 1,
        "propertyCount": 12,
        "methodCount": 0,
        "properties": [
            {
                "@name": "includeFilename",
                "shortdesc": "Include file name for thumbnail.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "caption",
                "shortdesc": "With caption.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeCredits",
                "shortdesc": "Include credits for thumbnail.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeTitle",
                "shortdesc": "Include title for thumbnail.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "includeCopyright",
                "shortdesc": "Include copyright for thumbnail.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "font",
                "shortdesc": "Web photo gallery font.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryFontType",
                        "@": "GalleryFontType"
                    },
                    "value": "GalleryFontType.ARIAL"
                }
            },
            {
                "@name": "fontSize",
                "shortdesc": "The size of the font for the thumbnail images text.",
                "datatype": {
                    "type": "int",
                    "min": "1",
                    "max": "7",
                    "value": "3"
                }
            },
            {
                "@name": "size",
                "shortdesc": "The size of the thumbnail images.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryThumbSizeType",
                        "@": "GalleryThumbSizeType"
                    },
                    "value": "GalleryThumbSizeType.MEDIUM"
                }
            },
            {
                "@name": "dimension",
                "shortdesc": "Web photo gallery thumbnail dimension in pixels.",
                "datatype": {
                    "type": "int",
                    "value": "75"
                }
            },
            {
                "@name": "columnCount",
                "shortdesc": "Web photo gallery thumbnail columns.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "rowCount",
                "shortdesc": "Web photo gallery thumbnail rows.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            },
            {
                "@name": "border",
                "shortdesc": "The amount of border pixels you want around your thumbnail images.",
                "datatype": {
                    "type": "int",
                    "min": "0",
                    "max": "99",
                    "value": "0"
                }
            }
        ],
        "methods": []
    },
    "GalleryCustomColorOptions": {
        "class": "GalleryCustomColorOptions",
        "superClass": null,
        "shortdesc": "Deprecated, the make photo gallery method has moved to Bridge.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "backgroundColor",
                "shortdesc": "Background color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "bannerColor",
                "shortdesc": "Banner color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "textColor",
                "shortdesc": "Text color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "activeLinkColor",
                "shortdesc": "Active link color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "linkColor",
                "shortdesc": "Link color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "visitedLinkColor",
                "shortdesc": "Visited link color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            }
        ],
        "methods": []
    },
    "GallerySecurityOptions": {
        "class": "GallerySecurityOptions",
        "superClass": null,
        "shortdesc": "Deprecated, the make photo gallery method has moved to Bridge.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "content",
                "shortdesc": "Web photo gallery security content.",
                "datatype": {
                    "type": {
                        "@href": "#\/GallerySecurityType",
                        "@": "GallerySecurityType"
                    },
                    "value": "GallerySecurityType.NONE"
                }
            },
            {
                "@name": "text",
                "shortdesc": "Web photo gallery security custom text.",
                "datatype": {
                    "type": "string",
                    "value": ""
                }
            },
            {
                "@name": "font",
                "shortdesc": "Web photo gallery security font.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryFontType",
                        "@": "GalleryFontType"
                    },
                    "value": "GalleryFontType.ARIAL"
                }
            },
            {
                "@name": "fontSize",
                "shortdesc": "Web photo gallery security font size.",
                "datatype": {
                    "type": "int",
                    "min": "1",
                    "value": "36"
                }
            },
            {
                "@name": "textColor",
                "shortdesc": "Web page security text color.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "opacity",
                "shortdesc": "Web page security opacity as a percent.",
                "datatype": {
                    "type": "int",
                    "value": "100"
                }
            },
            {
                "@name": "textPosition",
                "shortdesc": "Web photo gallery security text position.",
                "datatype": {
                    "type": {
                        "@href": "#\/GallerySecurityTextPositionType",
                        "@": "GallerySecurityTextPositionType"
                    },
                    "value": "GallerySecurityTextPositionType.CENTERED"
                }
            },
            {
                "@name": "textRotate",
                "shortdesc": "Web photo gallery security text rotate.",
                "datatype": {
                    "type": {
                        "@href": "#\/GallerySecurityTextRotateType",
                        "@": "GallerySecurityTextRotateType"
                    },
                    "value": "GallerySecurityTextRotateType.ZERO"
                }
            }
        ],
        "methods": []
    },
    "ContactSheetOptions": {
        "class": "ContactSheetOptions",
        "superClass": null,
        "shortdesc": "Options that can be specified for a contact sheet.",
        "elementCount": 1,
        "propertyCount": 15,
        "methodCount": 0,
        "properties": [
            {
                "@name": "width",
                "shortdesc": "The width (in pixels) of the resulting document. Range: 100 to 2900.",
                "datatype": {
                    "type": "int",
                    "value": "576"
                }
            },
            {
                "@name": "height",
                "shortdesc": "The height (in pixels) of the resulting document. Range: 100 to 2900.",
                "datatype": {
                    "type": "int",
                    "value": "720"
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The resolution of the document (in pixels per inch). Range: 35 to 1200.",
                "datatype": {
                    "type": "number",
                    "value": "72.0"
                }
            },
            {
                "@name": "mode",
                "shortdesc": "The document color mode.",
                "datatype": {
                    "type": {
                        "@href": "#\/NewDocumentMode",
                        "@": "NewDocumentMode"
                    },
                    "value": "NewDocumentMode.RGB"
                }
            },
            {
                "@name": "flatten",
                "shortdesc": "If true, flattens all layers in the final document.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "acrossFirst",
                "shortdesc": "If true, places the images horizontally first.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "useAutoSpacing",
                "shortdesc": "If true, auto spaces the images in the contact sheet.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "columnCount",
                "shortdesc": "The number of contact sheet columns.",
                "datatype": {
                    "type": "int",
                    "value": "5"
                }
            },
            {
                "@name": "rowCount",
                "shortdesc": "The number of contact sheet rows.",
                "datatype": {
                    "type": "int",
                    "value": "6"
                }
            },
            {
                "@name": "vertical",
                "shortdesc": "The vertical spacing (in pixels) between images. Range: 0 to 29000.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "horizontal",
                "shortdesc": "The horizontal spacing (in pixels) between images. Range: 0 to 29000.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "bestFit",
                "shortdesc": "If true, rotates images for best fit.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "caption",
                "shortdesc": "If true, uses the filename as a caption for the image.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "font",
                "shortdesc": "The font used for the caption.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryFontType",
                        "@": "GalleryFontType"
                    },
                    "value": "GalleryFontType.ARIAL"
                }
            },
            {
                "@name": "fontSize",
                "shortdesc": "The caption font size.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            }
        ],
        "methods": []
    },
    "PicturePackageOptions": {
        "class": "PicturePackageOptions",
        "superClass": null,
        "shortdesc": "Options that can be specified for a Picture Package.",
        "elementCount": 1,
        "propertyCount": 12,
        "methodCount": 0,
        "properties": [
            {
                "@name": "layout",
                "shortdesc": "The layout to use to generate the picture package.",
                "datatype": {
                    "type": "string",
                    "value": "(2)5x7"
                }
            },
            {
                "@name": "resolution",
                "shortdesc": "The resolution of the document (in pixels per inch)",
                "datatype": {
                    "type": "number",
                    "value": "72.0"
                }
            },
            {
                "@name": "mode",
                "shortdesc": "The document color mode.",
                "datatype": {
                    "type": {
                        "@href": "#\/NewDocumentMode",
                        "@": "NewDocumentMode"
                    },
                    "value": "NewDocumentMode.RGB"
                }
            },
            {
                "@name": "flatten",
                "shortdesc": "If true, flattens all layers in the final document.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "content",
                "shortdesc": "The content information.",
                "datatype": {
                    "type": {
                        "@href": "#\/PicturePackageTextType",
                        "@": "PicturePackageTextType"
                    },
                    "value": "PicturePackageTextType.NONE"
                }
            },
            {
                "@name": "text",
                "shortdesc": "The picture package custom text.",
                "datatype": {
                    "type": "string",
                    "value": ""
                }
            },
            {
                "@name": "font",
                "shortdesc": "The font used for security text.",
                "datatype": {
                    "type": {
                        "@href": "#\/GalleryFontType",
                        "@": "GalleryFontType"
                    },
                    "value": "GalleryFontType.ARIAL"
                }
            },
            {
                "@name": "fontSize",
                "shortdesc": "The font size.",
                "datatype": {
                    "type": "int",
                    "value": "12"
                }
            },
            {
                "@name": "opacity",
                "shortdesc": "The web page security text opacity (as a percentage) Range: 0 to 100.",
                "datatype": {
                    "type": "int",
                    "value": "100"
                }
            },
            {
                "@name": "textColor",
                "shortdesc": "The color of the security text.",
                "datatype": {
                    "type": {
                        "@href": "#\/RGBColor",
                        "@": "RGBColor"
                    }
                }
            },
            {
                "@name": "textPosition",
                "shortdesc": "The position of the security text.",
                "datatype": {
                    "type": {
                        "@href": "#\/GallerySecurityTextPositionType",
                        "@": "GallerySecurityTextPositionType"
                    },
                    "value": "GallerySecurityTextPositionType.CENTERED"
                }
            },
            {
                "@name": "textRotate",
                "shortdesc": "The orientation of the security text.",
                "datatype": {
                    "type": {
                        "@href": "#\/GallerySecurityTextRotateType",
                        "@": "GallerySecurityTextRotateType"
                    },
                    "value": "GallerySecurityTextRotateType.ZERO"
                }
            }
        ],
        "methods": []
    },
    "BatchOptions": {
        "class": "BatchOptions",
        "superClass": null,
        "shortdesc": "Options to specify when running a Batch command.",
        "elementCount": 1,
        "propertyCount": 12,
        "methodCount": 0,
        "properties": [
            {
                "@name": "overrideOpen",
                "shortdesc": "If true, overrides action open commands.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "suppressOpen",
                "shortdesc": "If true, suppresses file open options dialogs.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "suppressProfile",
                "shortdesc": "If true, suppresses color profile warnings.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "destination",
                "shortdesc": "The type of destination for the processed files.",
                "datatype": {
                    "type": {
                        "@href": "#\/BatchDestinationType",
                        "@": "BatchDestinationType"
                    },
                    "value": "BatchDestinationType.NODESTINATION"
                }
            },
            {
                "@name": "destinationFolder",
                "shortdesc": "The folder location for the processed files. Valid only when 'destination' = folder.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "overrideSave",
                "shortdesc": "If true, overrides save as action steps with the specified destination.",
                "datatype": {
                    "type": "bool",
                    "value": "false"
                }
            },
            {
                "@name": "fileNaming",
                "shortdesc": "A list of file naming options. Maximum: 6.",
                "datatype": {
                    "type": {
                        "@href": "#\/FileNamingType",
                        "@": "FileNamingType"
                    },
                    "array": ""
                }
            },
            {
                "@name": "startingSerial",
                "shortdesc": "The starting serial number to use in naming files.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "windowsCompatible",
                "shortdesc": "If true, the final file names are Windows compatible.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "macintoshCompatible",
                "shortdesc": "If true, the final file names are Macintosh compatible.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "unixCompatible",
                "shortdesc": "If true, the final file names are Unix compatible.",
                "datatype": {
                    "type": "bool",
                    "value": "true"
                }
            },
            {
                "@name": "errorFile",
                "shortdesc": "The file in which to log errors encountered. To display errors on the screen and stop batch processing when errors occur, leave blank.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            }
        ],
        "methods": []
    },
    "SubPathInfo": {
        "class": "SubPathInfo",
        "superClass": null,
        "shortdesc": "An array of path point info objects that describes a straight or curved segment of a path.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "operation",
                "shortdesc": "The sub path operation on other sub paths.",
                "datatype": {
                    "type": {
                        "@href": "#\/ShapeOperation",
                        "@": "ShapeOperation"
                    }
                }
            },
            {
                "@name": "closed",
                "shortdesc": "If true, the path is closed.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "entireSubPath",
                "shortdesc": "All of the sub path item's path points.",
                "datatype": {
                    "type": {
                        "@href": "#\/PathPointInfo",
                        "@": "PathPointInfo"
                    },
                    "array": ""
                }
            }
        ],
        "methods": []
    },
    "PathPointInfo": {
        "class": "PathPointInfo",
        "superClass": null,
        "shortdesc": "A point on a path, expressed as an array of three coordinate arrays: the anchor point, left direction point, and right direction point. For paths that are straight segments (not curved), the coordinates of all three points are the same. For curved segements, the coordinates are different. The difference between the anchor point and the left or right direction points determines the arc of the curve. You use the left direction point to bend the curve \"outward\" or make it convex; you use the right direction point to bend the curve \"inward\" or make it concave.",
        "elementCount": 2,
        "propertyCount": 8,
        "methodCount": 0,
        "properties": [
            {
                "@name": "anchor",
                "shortdesc": "The x and y coordinates of one end point of the path segment.",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    },
                    "array": ""
                }
            },
            {
                "@name": "leftDirection",
                "shortdesc": "The location of the left direction point (\"in\" position).",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    },
                    "array": ""
                }
            },
            {
                "@name": "rightDirection",
                "shortdesc": "The location of the right direction point (\"out\" position).",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    },
                    "array": ""
                }
            },
            {
                "@name": "kind",
                "shortdesc": "The point type.",
                "datatype": {
                    "type": {
                        "@href": "#\/PointKind",
                        "@": "PointKind"
                    }
                }
            },
            {
                "@name": "anchor",
                "shortdesc": "The x and y coordinates of one end point of the path segment.",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    },
                    "array": ""
                }
            },
            {
                "@name": "leftDirection",
                "shortdesc": "The location of the left direction point (\"in\" position).",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    },
                    "array": ""
                }
            },
            {
                "@name": "rightDirection",
                "shortdesc": "The location of the right direction point (\"out\" position).",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    },
                    "array": ""
                }
            },
            {
                "@name": "kind",
                "shortdesc": "The point type.",
                "datatype": {
                    "type": {
                        "@href": "#\/PointKind",
                        "@": "PointKind"
                    }
                }
            }
        ],
        "methods": []
    },
    "ActionDescriptor": {
        "class": "ActionDescriptor",
        "superClass": null,
        "shortdesc": "A record of key-value pairs for actions, such as those included on the Adobe Photoshop Actions menu. The ActionDescriptor class is part of the Action Manager functionality. For more details on the Action Manager, see the Photoshop Scripting Guide.",
        "elementCount": 1,
        "propertyCount": 1,
        "methodCount": 0,
        "properties": [
            {
                "@name": "count",
                "@rwaccess": "readonly",
                "shortdesc": "The number of keys contained in the descriptor.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": []
    },
    "ActionList": {
        "class": "ActionList",
        "superClass": null,
        "shortdesc": "The list of commands that comprise an Action (such as an Action created using the Actions palette in the Adobe Photoshop application). The action list object is part of the Action Manager functionality. For details on using the Action Manager, see the Photoshop Scripting Guide.",
        "elementCount": 1,
        "propertyCount": 1,
        "methodCount": 0,
        "properties": [
            {
                "@name": "count",
                "@rwaccess": "readonly",
                "shortdesc": "The number of commands that comprise the action.",
                "datatype": {
                    "type": "int"
                }
            }
        ],
        "methods": []
    },
    "ActionReference": {
        "class": "ActionReference",
        "superClass": null,
        "shortdesc": "Contains data describing a referenced Action. The action reference object is part of the Action Manager functionality. For details on using the Action Manager, see the Photoshop Scripting Guide.",
        "elementCount": 1,
        "propertyCount": 0,
        "methodCount": 0,
        "properties": [],
        "methods": []
    },
    "Application": {
        "class": "Application",
        "superClass": null,
        "shortdesc": "The Adobe Photoshop application object, which contains all other Adobe Photoshop objects.",
        "elementCount": 1,
        "propertyCount": 29,
        "methodCount": 42,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "colorSettings",
                "shortdesc": "The name of the selected color setting's set.",
                "datatype": {
                    "type": "any"
                }
            },
            {
                "@name": "activeDocument",
                "shortdesc": "The frontmost document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    }
                }
            },
            {
                "@name": "name",
                "@rwaccess": "readonly",
                "shortdesc": "The application name.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "path",
                "@rwaccess": "readonly",
                "shortdesc": "The full path of the location of the Adobe Photoshop application.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "preferences",
                "@rwaccess": "readonly",
                "shortdesc": "The application preference settings (equivalent to selecting Edit > Preferences in the Adobe Photoshop application in Windows or Photoshop > Preferences in Mac OS).",
                "datatype": {
                    "type": {
                        "@href": "#\/Preferences",
                        "@": "Preferences"
                    }
                }
            },
            {
                "@name": "scriptingVersion",
                "@rwaccess": "readonly",
                "shortdesc": "The version of the Scripting interface.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "freeMemory",
                "@rwaccess": "readonly",
                "shortdesc": "The amount of unused memory available to Photoshop.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "version",
                "@rwaccess": "readonly",
                "shortdesc": "The version of Adobe Photoshop application that you are running.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "displayDialogs",
                "shortdesc": "The dialog mode for the document, which indicates whether or not Photoshop displays dialogs when the script runs.",
                "datatype": {
                    "type": {
                        "@href": "#\/DialogModes",
                        "@": "DialogModes"
                    }
                }
            },
            {
                "@name": "foregroundColor",
                "shortdesc": "The default foreground color (used to paint, fill, and stroke selections).",
                "datatype": {
                    "type": {
                        "@href": "#\/SolidColor",
                        "@": "SolidColor"
                    }
                }
            },
            {
                "@name": "backgroundColor",
                "shortdesc": "The default background color (used to paint, fill, and stroke selections).",
                "datatype": {
                    "type": {
                        "@href": "#\/SolidColor",
                        "@": "SolidColor"
                    }
                }
            },
            {
                "@name": "playbackParameters",
                "shortdesc": "The playback options, which indicate the speed at which Photoshop plays actions.",
                "datatype": {
                    "type": {
                        "@href": "#\/ActionDescriptor",
                        "@": "ActionDescriptor"
                    }
                }
            },
            {
                "@name": "playbackDisplayDialogs",
                "shortdesc": "The dialog mode for playback mode, which indicates whether or not Photoshop displays dialogs in playback mode.",
                "datatype": {
                    "type": {
                        "@href": "#\/DialogModes",
                        "@": "DialogModes"
                    }
                }
            },
            {
                "@name": "notifiersEnabled",
                "shortdesc": "If true, notifiers are enabled.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "windowsFileTypes",
                "@rwaccess": "readonly",
                "shortdesc": "A list of the image file extensions Photoshop can open.",
                "datatype": {
                    "type": "string",
                    "array": ""
                }
            },
            {
                "@name": "macintoshFileTypes",
                "@rwaccess": "readonly",
                "shortdesc": "A list of the image file types Photoshop can open.",
                "datatype": {
                    "type": "string",
                    "array": ""
                }
            },
            {
                "@name": "preferencesFolder",
                "@rwaccess": "readonly",
                "shortdesc": "The full path to the preferences folder.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "locale",
                "@rwaccess": "readonly",
                "shortdesc": "The language locale of the application.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "documents",
                "@rwaccess": "readonly",
                "shortdesc": "The collection of open documents.",
                "datatype": {
                    "type": {
                        "@href": "#\/Documents",
                        "@": "Documents"
                    }
                }
            },
            {
                "@name": "fonts",
                "@rwaccess": "readonly",
                "shortdesc": "The fonts installed on this system.",
                "datatype": {
                    "type": {
                        "@href": "#\/TextFonts",
                        "@": "TextFonts"
                    }
                }
            },
            {
                "@name": "notifiers",
                "@rwaccess": "readonly",
                "shortdesc": "The notifiers currently configured (in the Scripts Events Manager menu in the application).",
                "datatype": {
                    "type": {
                        "@href": "#\/Notifiers",
                        "@": "Notifiers"
                    }
                }
            },
            {
                "@name": "scriptingBuildDate",
                "@rwaccess": "readonly",
                "shortdesc": "The build date of the scripting interface.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "recentFiles",
                "@rwaccess": "readonly",
                "shortdesc": "Files in the Recent Files list.",
                "datatype": {
                    "type": {
                        "@href": "#\/FileArray",
                        "@": "FileArray"
                    }
                }
            },
            {
                "@name": "build",
                "@rwaccess": "readonly",
                "shortdesc": "The build number of Adobe Photoshop application.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "systemInformation",
                "@rwaccess": "readonly",
                "shortdesc": "System information of the host application and machine.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "measurementLog",
                "@rwaccess": "readonly",
                "shortdesc": "The log of measurements taken.",
                "datatype": {
                    "type": {
                        "@href": "#\/MeasurementLog",
                        "@": "MeasurementLog"
                    }
                }
            },
            {
                "@name": "currentTool",
                "shortdesc": "Name of the current tool.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": [
            {
                "@name": "toolSupportsBrushes",
                "shortdesc": "Check if the specified tool supports brushes.",
                "parameters": {
                    "parameter": {
                        "@name": "tool",
                        "shortdesc": "The name of the tool to check.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "saveToolBrushToFile",
                "shortdesc": "PRIVATE - save the current tool brush to a file.",
                "parameters": {
                    "parameter": {
                        "@name": "file",
                        "shortdesc": "File to save the brush to.",
                        "datatype": {
                            "type": {
                                "@href": "$COMMON\/javascript.xml#\/File",
                                "@": "File"
                            }
                        }
                    }
                }
            },
            {
                "@name": "applyToolBrushFromFile",
                "shortdesc": "PRIVATE - set the current tool brush from a file.",
                "parameters": {
                    "parameter": {
                        "@name": "file",
                        "shortdesc": "Brush file to apply.",
                        "datatype": {
                            "type": {
                                "@href": "$COMMON\/javascript.xml#\/File",
                                "@": "File"
                            }
                        }
                    }
                }
            },
            {
                "@name": "thumbnailStyleFile",
                "shortdesc": "PRIVATE - write out a thumbnail file from a style file.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "file",
                            "shortdesc": "Style file to read.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "dest",
                            "shortdesc": "Thumb file to write.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "thumbnailSize",
                            "@optional": "true",
                            "shortdesc": "Size of thumbnail to save.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "backgroundValue",
                            "@optional": "true",
                            "shortdesc": "Background grayvalue.",
                            "datatype": {
                                "type": "number"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "thumbnailText",
                "shortdesc": "PRIVATE - write out a thumbnail file from text parameters.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "dest",
                            "shortdesc": "Thumb file to write.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "text",
                            "@optional": "true",
                            "shortdesc": "Text to render.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "font",
                            "@optional": "true",
                            "shortdesc": "PostScript name of font.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "size",
                            "@optional": "true",
                            "shortdesc": "Size of type.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "color",
                            "@optional": "true",
                            "shortdesc": "Color of type.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SolidColor",
                                    "@": "SolidColor"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "doProgress",
                "shortdesc": "Performs a task with a progress bar. Other progress APIs must be called periodically to update the progress bar and allow cancelling.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "progressString",
                            "shortdesc": "String to show in the progress window.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "javaScriptString",
                            "shortdesc": "JavaScriptString to execute.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "doForcedProgress",
                "shortdesc": "Performs a task with a progress bar. Forces progress bar to display, ignoring the normal heuristics that keep it from showing unnecessarily (e.g. during very short tasks). Other progress APIs must be called periodically to update the progress bar and allow cancelling.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "progressString",
                            "shortdesc": "String to show in the progress window.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "javaScriptString",
                            "shortdesc": "JavaScriptString to execute.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "changeProgressText",
                "shortdesc": "Changes the text that appears in the progress window.",
                "parameters": {
                    "parameter": {
                        "@name": "progressString",
                        "shortdesc": "String to show in the progress window.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "@name": "doProgressTask",
                "shortdesc": "Sections off a portion of the unused progress bar for execution of a subtask. Returns false on cancel.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "taskLength",
                            "shortdesc": "Amount of the unused progress bar to section off, between 0.0 and 1.0.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "javaScriptString",
                            "shortdesc": "JavaScriptString to execute.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "doProgressSegmentTask",
                "shortdesc": "Sections off a portion of the unused progress bar for execution of a subtask. Returns false on cancel. Use when iterating a list of tasks with unequal run times.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "segmentLength",
                            "shortdesc": "The length of the current task.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "done",
                            "shortdesc": "The total length of all completed tasks.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "total",
                            "shortdesc": "The total length of all tasks.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "javaScriptString",
                            "shortdesc": "JavaScriptString to execute.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "doProgressSubTask",
                "shortdesc": "Sections off a portion of the unused progress bar for execution of a subtask. Returns false on cancel. Use when iterating a simple list of tasks with equal run times.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "index",
                            "shortdesc": "The 0-based index of the current task.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "limit",
                            "shortdesc": "The total number of tasks.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "javaScriptString",
                            "shortdesc": "JavaScriptString to execute.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "updateProgress",
                "shortdesc": "Updates the progress bar started by doProgress. Use for manual non-task based progress updating. Returns false on cancel.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "done",
                            "shortdesc": "The number of tasks completed.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "total",
                            "shortdesc": "The total number of tasks.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "togglePalettes",
                "shortdesc": "Toggle palette visibility."
            },
            {
                "@name": "doAction",
                "shortdesc": "Plays the specified action from the Actions palette.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "action",
                            "shortdesc": "The name of the action to play. (Note that the action name is case-sensitive and must match the name as it appears in the Actions palette.)",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "from",
                            "shortdesc": "The name of the action set containing the action being played. (Note that the Action Set name is case-sensitive and must match the name as it appears in the Actions palette.)",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "load",
                "shortdesc": "Loads a support document.",
                "parameters": {
                    "parameter": {
                        "@name": "document",
                        "shortdesc": "The document to load.",
                        "datatype": {
                            "type": {
                                "@href": "$COMMON\/javascript.xml#\/File",
                                "@": "File"
                            }
                        }
                    }
                }
            },
            {
                "@name": "open",
                "shortdesc": "Opens the specified document file(s).",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "document",
                            "shortdesc": "The document(s) to opend.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "as",
                            "@optional": "true",
                            "shortdesc": "The document type (The default is to let Photoshop deduce the format).",
                            "datatype": {
                                "type": "any"
                            }
                        },
                        {
                            "@name": "asSmartObject",
                            "@optional": "true",
                            "shortdesc": "Creates a smart object around the document.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    }
                }
            },
            {
                "@name": "purge",
                "shortdesc": "Purges one or more caches.",
                "parameters": {
                    "parameter": {
                        "@name": "target",
                        "shortdesc": "The caches to purge.",
                        "datatype": {
                            "type": {
                                "@href": "#\/PurgeTarget",
                                "@": "PurgeTarget"
                            }
                        }
                    }
                }
            },
            {
                "@name": "makePhotoGallery",
                "shortdesc": "DEPRECATED. Creates a web photo gallery.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "inputFolder",
                            "shortdesc": "Folder to process or an array of files to process.",
                            "datatype": {
                                "type": "any"
                            }
                        },
                        {
                            "@name": "outputFolder",
                            "shortdesc": "Location for output files.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for the web photo gallery.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/GalleryOptions",
                                    "@": "GalleryOptions"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "makePDFPresentation",
                "shortdesc": "Creates a PDF presentation file.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "inputFiles",
                            "shortdesc": "The input files to include in the presentation.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AliasArray",
                                    "@": "AliasArray"
                                }
                            }
                        },
                        {
                            "@name": "outputFile",
                            "shortdesc": "The location of the output file.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for the PDF presentation.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/PresentationOptions",
                                    "@": "PresentationOptions"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "makePhotomerge",
                "shortdesc": "DEPRECATED. Merges multiple files into one, user interaction required.",
                "parameters": {
                    "parameter": {
                        "@name": "inputFiles",
                        "shortdesc": "List of input files to include.",
                        "datatype": {
                            "type": {
                                "@href": "#\/AliasArray",
                                "@": "AliasArray"
                            }
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "makeContactSheet",
                "shortdesc": "Creates a contact sheet from multiple files.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "inputFiles",
                            "shortdesc": "The files to include.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AliasArray",
                                    "@": "AliasArray"
                                }
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for creating the contact sheet.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ContactSheetOptions",
                                    "@": "ContactSheetOptions"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "makePicturePackage",
                "shortdesc": "Creates a picture package from multiple files.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "inputFiles",
                            "shortdesc": "The files to include.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AliasArray",
                                    "@": "AliasArray"
                                }
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for creating a Picture Package.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/PicturePackageOptions",
                                    "@": "PicturePackageOptions"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "batch",
                "shortdesc": "Runs the batch automation routine; analogous to using the Batch command in Photoshop.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "inputFiles",
                            "shortdesc": "The files to operate on.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AliasArray",
                                    "@": "AliasArray"
                                }
                            }
                        },
                        {
                            "@name": "action",
                            "shortdesc": "The name of the action to play (note that the Action name is case-sensitive and must match the name in the Actions palette).",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "from",
                            "shortdesc": "The name of the action set containing the action being played (note that the Action Set name is case-sensitive and must match the name in the Actions palette).",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for batch automation.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/BatchOptions",
                                    "@": "BatchOptions"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "bringToFront",
                "shortdesc": "Makes Photoshop the active application."
            },
            {
                "@name": "refresh",
                "shortdesc": "Pauses the script until the application refreshes."
            },
            {
                "@name": "refreshFonts",
                "shortdesc": "Force the font list to get refreshed."
            },
            {
                "@name": "putCustomOptions",
                "shortdesc": "Save user objects in the Photoshop registry.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "key",
                            "shortdesc": "The unique string ID for the user object.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "customObject",
                            "shortdesc": "The user-defined custom object to save in the registry.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ActionDescriptor",
                                    "@": "ActionDescriptor"
                                }
                            }
                        },
                        {
                            "@name": "persistent",
                            "@optional": "true",
                            "shortdesc": "If true, the object persists after the script has finished.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "getCustomOptions",
                "shortdesc": "Retrieves user objects from the Photoshop registry for the ID with value key.",
                "parameters": {
                    "parameter": {
                        "@name": "key",
                        "shortdesc": "The unique string ID for the user object.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ActionDescriptor",
                        "@": "ActionDescriptor"
                    }
                }
            },
            {
                "@name": "eraseCustomOptions",
                "shortdesc": "Removes the specified user objects from the Photoshop registry.",
                "parameters": {
                    "parameter": {
                        "@name": "key",
                        "shortdesc": "The unique string ID for user object(s) to remove.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "@name": "featureEnabled",
                "shortdesc": "If true, the specified feature is enabled.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "shortdesc": "The name of the feature.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "openDialog",
                "shortdesc": "Uses the Photoshop open dialog to select files.",
                "datatype": {
                    "type": {
                        "@href": "#\/FileArray",
                        "@": "FileArray"
                    }
                }
            },
            {
                "@name": "runMenuItem",
                "shortdesc": "Run a menu item.",
                "parameters": {
                    "parameter": {
                        "@name": "menuID",
                        "shortdesc": "Id of menu to run.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                }
            },
            {
                "@name": "system",
                "shortdesc": "Perform a system call.",
                "parameters": {
                    "parameter": {
                        "@name": "callString",
                        "shortdesc": "System call string.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "executeAction",
                "shortdesc": "Plays an ActionManager event.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "eventID",
                            "shortdesc": "The event to play.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "descriptor",
                            "@optional": "true",
                            "shortdesc": "The action descriptor to play.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ActionDescriptor",
                                    "@": "ActionDescriptor"
                                }
                            }
                        },
                        {
                            "@name": "displayDialogs",
                            "@optional": "true",
                            "shortdesc": "The display permissions for dialogs and alert messages.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/DialogModes",
                                    "@": "DialogModes"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ActionDescriptor",
                        "@": "ActionDescriptor"
                    }
                }
            },
            {
                "@name": "executeActionGet",
                "shortdesc": "Obtains an action descriptor.",
                "parameters": {
                    "parameter": {
                        "@name": "reference",
                        "shortdesc": "The reference specification of the property.",
                        "datatype": {
                            "type": {
                                "@href": "#\/ActionReference",
                                "@": "ActionReference"
                            }
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ActionDescriptor",
                        "@": "ActionDescriptor"
                    }
                }
            },
            {
                "@name": "stringIDToTypeID",
                "shortdesc": "Converts from a string ID to a runtime ID.",
                "parameters": {
                    "parameter": {
                        "@name": "stringID",
                        "shortdesc": "The ID to convert.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "typeIDToStringID",
                "shortdesc": "Converts from a runtime ID to a string ID.",
                "parameters": {
                    "parameter": {
                        "@name": "typeID",
                        "shortdesc": "The ID to convert.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "charIDToTypeID",
                "shortdesc": "Converts from a four character code to a runtime ID.",
                "parameters": {
                    "parameter": {
                        "@name": "charID",
                        "shortdesc": "The ID to convert.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "typeIDToCharID",
                "shortdesc": "Converts from a runtime ID to a character ID.",
                "parameters": {
                    "parameter": {
                        "@name": "typeID",
                        "shortdesc": "The ID to convert.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "beep",
                "shortdesc": "Alerts the user."
            },
            {
                "@name": "isQuicktimeAvailable",
                "shortdesc": "Returns true if Quicktime is installed.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "showColorPicker",
                "shortdesc": "Display color picker dialog. Returns false if dialog is cancelled, true otherwise.",
                "parameters": {
                    "parameter": {
                        "@name": "pickForeground",
                        "@optional": "true",
                        "shortdesc": "If true the foreground color is chosen, if false the background color is chosen.",
                        "datatype": {
                            "type": "bool",
                            "value": "true"
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                }
            }
        ]
    },
    "Document": {
        "class": "Document",
        "superClass": null,
        "shortdesc": "The active containment object for the layers and all other objects in the script; the basic canvas for the file.",
        "elementCount": 1,
        "propertyCount": 39,
        "methodCount": 27,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "backgroundLayer",
                "@rwaccess": "readonly",
                "shortdesc": "The background layer for the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            },
            {
                "@name": "bitsPerChannel",
                "shortdesc": "The number of bits per channel.",
                "datatype": {
                    "type": {
                        "@href": "#\/BitsPerChannelType",
                        "@": "BitsPerChannelType"
                    }
                }
            },
            {
                "@name": "colorProfileType",
                "shortdesc": "The type of color model that defines the working space of the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorProfileType",
                        "@": "ColorProfileType"
                    }
                }
            },
            {
                "@name": "colorProfileName",
                "shortdesc": "The name of the color profile. Valid only when no value is specified for color profile kind (to indicate a custom color profile).",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "mode",
                "@rwaccess": "readonly",
                "shortdesc": "The color profile.",
                "datatype": {
                    "type": {
                        "@href": "#\/DocumentMode",
                        "@": "DocumentMode"
                    }
                }
            },
            {
                "@name": "componentChannels",
                "@rwaccess": "readonly",
                "shortdesc": "The color component channels for this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    },
                    "array": ""
                }
            },
            {
                "@name": "activeHistoryState",
                "shortdesc": "The current history state for this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/HistoryState",
                        "@": "HistoryState"
                    }
                }
            },
            {
                "@name": "activeHistoryBrushSource",
                "shortdesc": "The history state to use with the history brush.",
                "datatype": {
                    "type": {
                        "@href": "#\/HistoryState",
                        "@": "HistoryState"
                    }
                }
            },
            {
                "@name": "activeLayer",
                "shortdesc": "The selected layer.",
                "datatype": {
                    "type": {
                        "@href": "#\/Layer",
                        "@": "Layer"
                    }
                }
            },
            {
                "@name": "activeChannels",
                "shortdesc": "The selected channels.",
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    },
                    "array": ""
                }
            },
            {
                "@name": "info",
                "@rwaccess": "readonly",
                "shortdesc": "Metadata about the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/DocumentInfo",
                        "@": "DocumentInfo"
                    }
                }
            },
            {
                "@name": "printSettings",
                "@rwaccess": "readonly",
                "shortdesc": "Document print settings.",
                "datatype": {
                    "type": {
                        "@href": "#\/DocumentPrintSettings",
                        "@": "DocumentPrintSettings"
                    }
                }
            },
            {
                "@name": "fullName",
                "@rwaccess": "readonly",
                "shortdesc": "The full path name of the document.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "height",
                "@rwaccess": "readonly",
                "shortdesc": "The height of the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "managed",
                "@rwaccess": "readonly",
                "shortdesc": "If true, the document is a workgroup document.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "saved",
                "@rwaccess": "readonly",
                "shortdesc": "If true, the document been saved since the last change.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "name",
                "@rwaccess": "readonly",
                "shortdesc": "The document name.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "path",
                "@rwaccess": "readonly",
                "shortdesc": "The path to the document.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "quickMaskMode",
                "shortdesc": "If true, the document is in Quick Mask mode.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "resolution",
                "@rwaccess": "readonly",
                "shortdesc": "The resolution of the document (in pixels per inch)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "selection",
                "@rwaccess": "readonly",
                "shortdesc": "The selected area of the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Selection",
                        "@": "Selection"
                    }
                }
            },
            {
                "@name": "width",
                "@rwaccess": "readonly",
                "shortdesc": "The width of the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "histogram",
                "@rwaccess": "readonly",
                "shortdesc": "A histogram showing the number of pixels at each color intensity level for the composite channel.",
                "description": "Valid only when 'mode' = RGB, CMYK, or indexed.",
                "datatype": {
                    "type": "int",
                    "array": ""
                }
            },
            {
                "@name": "pixelAspectRatio",
                "shortdesc": "The (custom) pixel aspect ratio of the document. Range: 0.100 to 10.000.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "xmpMetadata",
                "@rwaccess": "readonly",
                "shortdesc": "The XMP properties of the document. The Camera RAW settings are stored here.",
                "datatype": {
                    "type": {
                        "@href": "#\/XMPMetadata",
                        "@": "XMPMetadata"
                    }
                }
            },
            {
                "@name": "measurementScale",
                "@rwaccess": "readonly",
                "shortdesc": "The measurement scale of the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/MeasurementScale",
                        "@": "MeasurementScale"
                    }
                }
            },
            {
                "@name": "id",
                "@rwaccess": "readonly",
                "shortdesc": "The unique ID of this document.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "layers",
                "@rwaccess": "readonly",
                "shortdesc": "The layers collection in the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Layers",
                        "@": "Layers"
                    }
                }
            },
            {
                "@name": "layerSets",
                "@rwaccess": "readonly",
                "shortdesc": "The layer sets collection in the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerSets",
                        "@": "LayerSets"
                    }
                }
            },
            {
                "@name": "artLayers",
                "@rwaccess": "readonly",
                "shortdesc": "The art layers collection in the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayers",
                        "@": "ArtLayers"
                    }
                }
            },
            {
                "@name": "channels",
                "@rwaccess": "readonly",
                "shortdesc": "The channels collection in this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Channels",
                        "@": "Channels"
                    }
                }
            },
            {
                "@name": "guides",
                "@rwaccess": "readonly",
                "shortdesc": "The guides in this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Guides",
                        "@": "Guides"
                    }
                }
            },
            {
                "@name": "historyStates",
                "@rwaccess": "readonly",
                "shortdesc": "The history states collection in this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/HistoryStates",
                        "@": "HistoryStates"
                    }
                }
            },
            {
                "@name": "layerComps",
                "@rwaccess": "readonly",
                "shortdesc": "The layer comps collection in this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerComps",
                        "@": "LayerComps"
                    }
                }
            },
            {
                "@name": "pathItems",
                "@rwaccess": "readonly",
                "shortdesc": "The path items collection in this document.",
                "datatype": {
                    "type": {
                        "@href": "#\/PathItems",
                        "@": "PathItems"
                    }
                }
            },
            {
                "@name": "countItems",
                "@rwaccess": "readonly",
                "shortdesc": "The current count items in the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/CountItems",
                        "@": "CountItems"
                    }
                }
            },
            {
                "@name": "colorSamplers",
                "@rwaccess": "readonly",
                "shortdesc": "The current color samplers associated with the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorSamplers",
                        "@": "ColorSamplers"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "duplicate",
                "shortdesc": "Duplicate this object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "relativeObject",
                            "datatype": {
                                "type": "Object"
                            }
                        },
                        {
                            "@name": "insertionLocation",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ElementPlacement",
                                    "@": "ElementPlacement"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    }
                }
            },
            {
                "@name": "close",
                "shortdesc": "Closes the document.",
                "parameters": {
                    "parameter": {
                        "@name": "saving",
                        "@optional": "true",
                        "shortdesc": "Specifies whether changes should be saved before closing.",
                        "datatype": {
                            "type": {
                                "@href": "#\/SaveOptionsType",
                                "@": "SaveOptionsType"
                            },
                            "value": "SaveOptionsType.PROMPTTOSAVECHANGES"
                        }
                    }
                }
            },
            {
                "@name": "convertProfile",
                "shortdesc": "Converts the document from using one color profile to using another.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "destinationProfile",
                            "shortdesc": "The color profile to convert to. Either a string specifying a color profile, one of the working color spaces, or Lab color.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "intent",
                            "shortdesc": "The conversion intent.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Intent",
                                    "@": "Intent"
                                }
                            }
                        },
                        {
                            "@name": "blackPointCompensation",
                            "@optional": "true",
                            "shortdesc": "If true, black point compensation is used.",
                            "datatype": {
                                "type": "bool"
                            }
                        },
                        {
                            "@name": "dither",
                            "@optional": "true",
                            "shortdesc": "If true, dither is used.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "changeMode",
                "shortdesc": "Changes the mode of the document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "destinationMode",
                            "shortdesc": "The mode to change to.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ChangeMode",
                                    "@": "ChangeMode"
                                }
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for changing the mode.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/DocumentConversionOptions",
                                    "@": "DocumentConversionOptions"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "crop",
                "shortdesc": "Crops the document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "bounds",
                            "shortdesc": "The area to crop.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitRect",
                                    "@": "UnitRect"
                                }
                            }
                        },
                        {
                            "@name": "angle",
                            "@optional": "true",
                            "shortdesc": "The angle of cropping bounds.",
                            "datatype": {
                                "type": "number",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "width",
                            "@optional": "true",
                            "shortdesc": "The width of the resulting document.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "height",
                            "@optional": "true",
                            "shortdesc": "The height of the resulting document.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "exportDocument",
                "shortdesc": "Exports the document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "exportIn",
                            "shortdesc": "The file to export to.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "exportAs",
                            "@optional": "true",
                            "shortdesc": "The type of export.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ExportType",
                                    "@": "ExportType"
                                },
                                "value": "ExportType.ILLUSTRATORPATHS"
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for the specified export type.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ExportOptions",
                                    "@": "ExportOptions"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "flipCanvas",
                "shortdesc": "Flips the canvas horizontally or vertically.",
                "parameters": {
                    "parameter": {
                        "@name": "direction",
                        "shortdesc": "The direction in which to flip the canvas.",
                        "datatype": {
                            "type": {
                                "@href": "#\/Direction",
                                "@": "Direction"
                            }
                        }
                    }
                }
            },
            {
                "@name": "importAnnotations",
                "shortdesc": "Imports annotations into the document.",
                "parameters": {
                    "parameter": {
                        "@name": "file",
                        "shortdesc": "The document to import annotations from.",
                        "datatype": {
                            "type": {
                                "@href": "$COMMON\/javascript.xml#\/File",
                                "@": "File"
                            }
                        }
                    }
                }
            },
            {
                "@name": "flatten",
                "shortdesc": "Flattens all layers."
            },
            {
                "@name": "mergeVisibleLayers",
                "shortdesc": "Flattens all visible layers in the document."
            },
            {
                "@name": "paste",
                "shortdesc": "Pastes contents of the clipboard into the document.",
                "parameters": {
                    "parameter": {
                        "@name": "intoSelection",
                        "@optional": "true",
                        "shortdesc": "If true, contents are pasted into the current selection.",
                        "datatype": {
                            "type": "bool",
                            "value": "false"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            },
            {
                "@name": "print",
                "shortdesc": "Prints the document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "sourceSpace",
                            "@optional": "true",
                            "shortdesc": "The color space for the source.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SourceSpaceType",
                                    "@": "SourceSpaceType"
                                },
                                "value": "SourceSpaceType.DOCUMENT"
                            }
                        },
                        {
                            "@name": "printSpace",
                            "@optional": "true",
                            "shortdesc": "The color space for the printer. Can be \"nothing\" (meaning same as source); one of the working spaces or Lab color; or a string specifying a color space. Default: nothing.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "intent",
                            "@optional": "true",
                            "shortdesc": "The color conversion intent.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Intent",
                                    "@": "Intent"
                                },
                                "value": "Intent.RELATIVECOLORIMETRIC"
                            }
                        },
                        {
                            "@name": "blackPointCompensation",
                            "@optional": "true",
                            "shortdesc": "If true, black point compensation is used.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "printOneCopy",
                "shortdesc": "Print one copy of the document."
            },
            {
                "@name": "revealAll",
                "shortdesc": "Expands the document to show clipped sections."
            },
            {
                "@name": "rasterizeAllLayers",
                "shortdesc": "Rasterizes all layers."
            },
            {
                "@name": "recordMeasurements",
                "shortdesc": "Records the measurements of document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "source",
                            "@optional": "true",
                            "shortdesc": "The source of the measurements to record.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/MeasurementSource",
                                    "@": "MeasurementSource"
                                }
                            }
                        },
                        {
                            "@name": "dataPoints",
                            "@optional": "true",
                            "shortdesc": "An array of identifiers of data points to record. Any data points not appropriate for the specified source are ignored.",
                            "datatype": {
                                "type": "string",
                                "array": ""
                            }
                        }
                    ]
                }
            },
            {
                "@name": "rotateCanvas",
                "shortdesc": "Rotates the canvas.",
                "parameters": {
                    "parameter": {
                        "@name": "angle",
                        "shortdesc": "The number of degrees to rotate. A positive angle rotates the canvas clockwise; a negative value rotates the canvas counter-clockwise.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "resizeCanvas",
                "shortdesc": "Changes the size of the canvas.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "width",
                            "@optional": "true",
                            "shortdesc": "The desired width of the canvas.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "height",
                            "@optional": "true",
                            "shortdesc": "The desired height of the canvas.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The anchor point to resize around.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "resizeImage",
                "shortdesc": "Changes the size of the image.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "width",
                            "@optional": "true",
                            "shortdesc": "The desired width of the image.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "height",
                            "@optional": "true",
                            "shortdesc": "The desired height of the image.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "resolution",
                            "@optional": "true",
                            "shortdesc": "The resolution (in pixels per inch)",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "resampleMethod",
                            "@optional": "true",
                            "shortdesc": "The downsample method.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ResampleMethod",
                                    "@": "ResampleMethod"
                                },
                                "value": "ResampleMethod.BICUBIC"
                            }
                        },
                        {
                            "@name": "amount",
                            "@optional": "true",
                            "shortdesc": "Amount of noise value when using preserve details (range: 0 - 100)",
                            "datatype": {
                                "type": "int",
                                "min": "0",
                                "max": "100",
                                "value": "0"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "splitChannels",
                "shortdesc": "Splits the channels of the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    },
                    "array": ""
                }
            },
            {
                "@name": "save",
                "shortdesc": "Saves the document."
            },
            {
                "@name": "saveAs",
                "shortdesc": "Saves the document with the specified save options.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "saveIn",
                            "shortdesc": "The file to save to, specified as a string containing the full file path or an alias. If not specified, the document is saved to its existing file.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "options",
                            "@optional": "true",
                            "shortdesc": "Options for the specified file type.",
                            "datatype": {
                                "type": "any"
                            }
                        },
                        {
                            "@name": "asCopy",
                            "@optional": "true",
                            "shortdesc": "Saves the document as a copy, leaving the original open.",
                            "datatype": {
                                "type": "bool"
                            }
                        },
                        {
                            "@name": "extensionType",
                            "@optional": "true",
                            "shortdesc": "Appends the specified extension to the file name.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/MacExtensionType",
                                    "@": "MacExtensionType"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "suspendHistory",
                "shortdesc": "Provides a single history state for the entire script. Allows a single undo for all actions taken in the script.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "historyString",
                            "shortdesc": "The string to use for the history state.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "javaScriptString",
                            "shortdesc": "A string of JavaScript code to execute during the suspension of history.",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "trap",
                "shortdesc": "Applies trapping to a CMYK document. Valid only when 'mode' = CMYK.",
                "parameters": {
                    "parameter": {
                        "@name": "width",
                        "shortdesc": "The trap width in pixels.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                }
            },
            {
                "@name": "trim",
                "shortdesc": "Trims the transparent area around the image on the specified sides of the canvas.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "type",
                            "@optional": "true",
                            "shortdesc": "The color or type of pixels to base the trim on.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/TrimType",
                                    "@": "TrimType"
                                },
                                "value": "TrimType.TOPLEFT"
                            }
                        },
                        {
                            "@name": "top",
                            "@optional": "true",
                            "shortdesc": "If true, trims away the top of the document.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        },
                        {
                            "@name": "left",
                            "@optional": "true",
                            "shortdesc": "If true, trims away the left of the document.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        },
                        {
                            "@name": "bottom",
                            "@optional": "true",
                            "shortdesc": "If true, trims away the bottom of the document.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        },
                        {
                            "@name": "right",
                            "@optional": "true",
                            "shortdesc": "If true, trims away the right of the document.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "duplicate",
                "shortdesc": "Creates a duplicate of the document object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "name",
                            "@optional": "true",
                            "shortdesc": "The name of the new document.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "mergeLayersOnly",
                            "@optional": "true",
                            "shortdesc": "If ture, duplicates merged layers only.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Document",
                        "@": "Document"
                    }
                }
            },
            {
                "@name": "autoCount",
                "shortdesc": "Counts the objects in the document.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "channel",
                            "shortdesc": "The channel to use for counting.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Channel",
                                    "@": "Channel"
                                }
                            }
                        },
                        {
                            "@name": "threshold",
                            "shortdesc": "Threshold to use for counting. Range: 0 to 255.",
                            "datatype": {
                                "type": "int",
                                "min": "0",
                                "max": "255"
                            }
                        }
                    ]
                }
            }
        ]
    },
    "DocumentInfo": {
        "class": "DocumentInfo",
        "superClass": null,
        "shortdesc": "Metadata about a document object. These values can be set by selecting File > File Info in the Adobe Photoshop application.",
        "elementCount": 1,
        "propertyCount": 25,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "title",
                "shortdesc": "The document title.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "author",
                "shortdesc": "The author.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "authorPosition",
                "shortdesc": "The author's position.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "caption",
                "shortdesc": "The caption.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "captionWriter",
                "shortdesc": "The caption author.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "jobName",
                "shortdesc": "The job name.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "copyrighted",
                "shortdesc": "The copyright status.",
                "datatype": {
                    "type": {
                        "@href": "#\/CopyrightedType",
                        "@": "CopyrightedType"
                    }
                }
            },
            {
                "@name": "copyrightNotice",
                "shortdesc": "The copyright notice.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "ownerUrl",
                "shortdesc": "The url of the copyright info.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "keywords",
                "shortdesc": "A list of keywords.",
                "datatype": {
                    "type": "string",
                    "array": ""
                }
            },
            {
                "@name": "category",
                "shortdesc": "The document category.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "supplementalCategories",
                "shortdesc": "Other categories.",
                "datatype": {
                    "type": "string",
                    "array": ""
                }
            },
            {
                "@name": "creationDate",
                "shortdesc": "The creation date.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "city",
                "shortdesc": "The city.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "provinceState",
                "shortdesc": "The state or province.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "country",
                "shortdesc": "The country.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "credit",
                "shortdesc": "The author credit.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "source",
                "shortdesc": "The source.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "headline",
                "shortdesc": "The headline.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "instructions",
                "shortdesc": "Instructions for using or processing the image.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "transmissionReference",
                "shortdesc": "The transmission reference.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "urgency",
                "shortdesc": "The document urgency.",
                "datatype": {
                    "type": {
                        "@href": "#\/Urgency",
                        "@": "Urgency"
                    }
                }
            },
            {
                "@name": "exif",
                "@rwaccess": "readonly",
                "shortdesc": "For JPEG images, information stored with digital photographs including camera type, date and time of photo, and file size.",
                "datatype": {
                    "type": "any",
                    "array": ""
                }
            }
        ],
        "methods": []
    },
    "Preferences": {
        "class": "Preferences",
        "superClass": null,
        "shortdesc": "Options to define for the preferences property of the application object, basically equivalent to selecting Edit > Preferences (Windows) or Photoshop > Preferences in the Adobe Photoshop application.",
        "elementCount": 1,
        "propertyCount": 56,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "colorPicker",
                "shortdesc": "The color picker to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorPicker",
                        "@": "ColorPicker"
                    }
                }
            },
            {
                "@name": "interpolation",
                "shortdesc": "The method to use to assign color values to any new pixels created when an image is resampled or resized.",
                "datatype": {
                    "type": {
                        "@href": "#\/ResampleMethod",
                        "@": "ResampleMethod"
                    }
                }
            },
            {
                "@name": "exportClipboard",
                "shortdesc": "If true, retains Adobe Photoshop contents on the clipboard after you exit the application.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "showToolTips",
                "shortdesc": "If true, pop-up definitions are displayed on mouseover.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "keyboardZoomResizesWindows",
                "shortdesc": "If true, automatically resizes the window when zooming in or out using keyboard shortcuts.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "autoUpdateOpenDocuments",
                "shortdesc": "If true, automatically updates open documents.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "showAsianTextOptions",
                "shortdesc": "If true, Asian text options are displayed in the Paragraph palette.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "beepWhenDone",
                "shortdesc": "If true, alerts the user when a process finishes.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "dynamicColorSliders",
                "shortdesc": "If true, dynamic color sliders appear in the Color palette.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "savePaletteLocations",
                "shortdesc": "If true, makes new palette locations the default location.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "showEnglishFontNames",
                "shortdesc": "If true, Asian font names are listed in English.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "useShiftKeyForToolSwitch",
                "shortdesc": "If true, enables cycling through a set of hidden tools.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "textFontSize",
                "shortdesc": "Size of the small font used in panels and dialogs.",
                "datatype": {
                    "type": {
                        "@href": "#\/FontSize",
                        "@": "FontSize"
                    }
                }
            },
            {
                "@name": "numberOfHistoryStates",
                "shortdesc": "The number of history states to preserve. Range: 1 to 100.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "createFirstSnapshot",
                "shortdesc": "If true, automatically makes the first snapshot when a new document is created.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "nonLinearHistory",
                "shortdesc": "If true, allows non-linear history.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "smartQuotes",
                "shortdesc": "If true, curly quote marks are used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "imagePreviews",
                "shortdesc": "The behavior mode to use when saving files.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveBehavior",
                        "@": "SaveBehavior"
                    }
                }
            },
            {
                "@name": "iconPreview",
                "shortdesc": "If true, shows the image preview as a thumbnail.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "fullSizePreview",
                "shortdesc": "If true, shows the image preview as a full size image.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "macOSThumbnail",
                "shortdesc": "If true, creates a thumbnail when saving the image in Mac OS.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "windowsThumbnail",
                "shortdesc": "If true, creates a thumbnail when saving the image in Windows. (Requires hardware support.)",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "appendExtension",
                "shortdesc": "Save files with extensions on Windows.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveBehavior",
                        "@": "SaveBehavior"
                    }
                }
            },
            {
                "@name": "useLowerCaseExtension",
                "shortdesc": "If true, the file extension is lowercase.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "askBeforeSavingLayeredTIFF",
                "shortdesc": "If true, asks the user to verify layer preservation options when saving a file in TIFF format.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "maximizeCompatibility",
                "shortdesc": "The behavior to use to check whether to maximize compatibility when opening Adobe Photoshop (PSD) files.",
                "datatype": {
                    "type": {
                        "@href": "#\/QueryStateType",
                        "@": "QueryStateType"
                    }
                }
            },
            {
                "@name": "recentFileListLength",
                "shortdesc": "The number of items in the recent file list. Range: 0 to 30.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "colorChannelsInColor",
                "shortdesc": "If true, displays component channels in the Channels palette in color.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "useDiffusionDither",
                "shortdesc": "If true, uses diffusion dither.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "pixelDoubling",
                "shortdesc": "If true, halves the resolution or (doubles the size of pixels) to make previews display more quickly.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "paintingCursors",
                "shortdesc": "The type of pointer to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/PaintingCursors",
                        "@": "PaintingCursors"
                    }
                }
            },
            {
                "@name": "otherCursors",
                "shortdesc": "The type of pointer to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/OtherPaintingCursors",
                        "@": "OtherPaintingCursors"
                    }
                }
            },
            {
                "@name": "gridSize",
                "shortdesc": "The size of grid squares.",
                "datatype": {
                    "type": {
                        "@href": "#\/GridSize",
                        "@": "GridSize"
                    }
                }
            },
            {
                "@name": "useVideoAlpha",
                "shortdesc": "If true, enables Adobe Photoshop to send transparency information to your computer\u2019s video board. (Requires hardware support.)",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "gamutWarningOpacity",
                "shortdesc": "The opacity (as a percentage) of the warning color for out-of-gamut colors. Range: 0 to 100.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "rulerUnits",
                "shortdesc": "The unit that the scripting system uses when receiving and returning values.",
                "datatype": {
                    "type": {
                        "@href": "#\/Units",
                        "@": "Units"
                    }
                }
            },
            {
                "@name": "typeUnits",
                "shortdesc": "The unit type-size that the numeric inputs are assumed to represent.",
                "datatype": {
                    "type": {
                        "@href": "#\/TypeUnits",
                        "@": "TypeUnits"
                    }
                }
            },
            {
                "@name": "columnWidth",
                "shortdesc": "The width of columns (in points)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "columnGutter",
                "shortdesc": "The gutter of columns (in points)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "pointSize",
                "shortdesc": "The point\/pica size.",
                "datatype": {
                    "type": {
                        "@href": "#\/PointType",
                        "@": "PointType"
                    }
                }
            },
            {
                "@name": "guideStyle",
                "shortdesc": "The formatting style for non-printing guide lines.",
                "datatype": {
                    "type": {
                        "@href": "#\/GuideLineStyle",
                        "@": "GuideLineStyle"
                    }
                }
            },
            {
                "@name": "gridStyle",
                "shortdesc": "The formatting style for non-printing grid lines.",
                "datatype": {
                    "type": {
                        "@href": "#\/GridLineStyle",
                        "@": "GridLineStyle"
                    }
                }
            },
            {
                "@name": "gridSubDivisions",
                "shortdesc": "The value by which to subdivide the grid.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "showSliceNumber",
                "shortdesc": "If true, displays slice numbers in the document window when using the Slice tool.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "useAdditionalPluginFolder",
                "shortdesc": "If true, uses an additional folder for compatible plug-ins stored with a different application.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "additionalPluginFolder",
                "shortdesc": "The path to the additional plug-in folder. Valid only when 'use additional plugin folder' = true.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "imageCacheLevels",
                "shortdesc": "The number of images to hold in the cache. Range: 1 to 8.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "imageCacheForHistograms",
                "shortdesc": "If true, shows the current image cache used to create the histogram.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "maxRAMuse",
                "shortdesc": "Maximum percentage of available RAM used by Photoshop.",
                "datatype": {
                    "type": "int",
                    "min": "5",
                    "max": "100"
                }
            },
            {
                "@name": "useHistoryLog",
                "shortdesc": "Turn on and off the history logging.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "saveLogItems",
                "shortdesc": "Options for saving the history items.",
                "datatype": {
                    "type": {
                        "@href": "#\/SaveLogItemsType",
                        "@": "SaveLogItemsType"
                    }
                }
            },
            {
                "@name": "editLogItems",
                "shortdesc": "Options for edit log items.",
                "datatype": {
                    "type": {
                        "@href": "#\/EditLogItemsType",
                        "@": "EditLogItemsType"
                    }
                }
            },
            {
                "@name": "saveLogItemsFile",
                "shortdesc": "File to save the history log.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "fontPreviewSize",
                "shortdesc": "Show font previews in the type tool font menus.",
                "datatype": {
                    "type": {
                        "@href": "#\/FontPreviewType",
                        "@": "FontPreviewType"
                    }
                }
            }
        ],
        "methods": []
    },
    "DocumentPrintSettings": {
        "class": "DocumentPrintSettings",
        "superClass": null,
        "shortdesc": "Print settings for a document.",
        "elementCount": 1,
        "propertyCount": 28,
        "methodCount": 1,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "caption",
                "shortdesc": "Description field from File Info.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "labels",
                "shortdesc": "Prints the document title.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "cornerCropMarks",
                "shortdesc": "Print corner crop marks.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "centerCropMarks",
                "shortdesc": "Print center crop marks.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "colorBars",
                "shortdesc": "Print color calibration bars.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "registrationMarks",
                "shortdesc": "Print registration marks.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "negative",
                "shortdesc": "Invert the image colors.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "flip",
                "shortdesc": "Flip the image horizontally.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "interpolate",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "vectorData",
                "shortdesc": "Include vector data.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "backgroundColor",
                "shortdesc": "Background color of page.",
                "datatype": {
                    "type": {
                        "@href": "#\/SolidColor",
                        "@": "SolidColor"
                    }
                }
            },
            {
                "@name": "renderIntent",
                "shortdesc": "Color conversion intent when print space is different from the source space.",
                "datatype": {
                    "type": {
                        "@href": "#\/Intent",
                        "@": "Intent"
                    }
                }
            },
            {
                "@name": "hardProof",
                "shortdesc": "Print a hard proof.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "printSpace",
                "shortdesc": "Color space for printer. Can be nothing (meaning same as source) or a string specifying a specific color profile.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "mapBlack",
                "shortdesc": "Map blacks.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "printBorder",
                "shortdesc": "Width of the print border.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "bleedWidth",
                "shortdesc": "Bleed width.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "colorHandling",
                "shortdesc": "Color handling.",
                "datatype": {
                    "type": {
                        "@href": "#\/PrintColorHandling",
                        "@": "PrintColorHandling"
                    }
                }
            },
            {
                "@name": "copies",
                "shortdesc": "Number of copies.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "docPosition",
                "@rwaccess": "readonly",
                "shortdesc": "Position of image when printing.",
                "datatype": {
                    "type": {
                        "@href": "#\/DocPositionStyle",
                        "@": "DocPositionStyle"
                    }
                }
            },
            {
                "@name": "posY",
                "@rwaccess": "readonly",
                "shortdesc": "Y position of image on page.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "posX",
                "@rwaccess": "readonly",
                "shortdesc": "X position of image on page.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "printerName",
                "shortdesc": "Name of printer.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "scale",
                "@rwaccess": "readonly",
                "shortdesc": "Scale of image on page.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "activePrinter",
                "shortdesc": "Currently selected printer.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "printers",
                "@rwaccess": "readonly",
                "shortdesc": "List of available printers.",
                "datatype": {
                    "type": "string",
                    "array": ""
                }
            }
        ],
        "methods": [
            {
                "@name": "setPagePosition",
                "shortdesc": "Set the position of the image on the page.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "docPosition",
                            "shortdesc": "Position of the image on page when printing. Can be centered, scale to fit, or user defined.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/DocPositionStyle",
                                    "@": "DocPositionStyle"
                                }
                            }
                        },
                        {
                            "@name": "posX",
                            "@optional": "true",
                            "shortdesc": "X position of image on page.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "posY",
                            "@optional": "true",
                            "shortdesc": "Y position of image on page.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "scale",
                            "@optional": "true",
                            "shortdesc": "Position of the image on page when printing. Can be centered, scale to fit, or user defined.",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        }
                    ]
                }
            }
        ]
    },
    "Selection": {
        "class": "Selection",
        "superClass": null,
        "shortdesc": "The selected area of the document or layer.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 25,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "bounds",
                "@rwaccess": "readonly",
                "shortdesc": "The bounding rectangle of the entire selection.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitRect",
                        "@": "UnitRect"
                    }
                }
            },
            {
                "@name": "solid",
                "@rwaccess": "readonly",
                "shortdesc": "If true, the bounding rectangle a solid rectangle.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": [
            {
                "@name": "clear",
                "shortdesc": "Clears the selection and does not copy it to the clipboard."
            },
            {
                "@name": "copy",
                "shortdesc": "Copies the selection to the clipboard.",
                "parameters": {
                    "parameter": {
                        "@name": "merge",
                        "@optional": "true",
                        "shortdesc": "If true the copy includes all visible layers. If false, copies only from the current layer.",
                        "datatype": {
                            "type": "bool"
                        }
                    }
                }
            },
            {
                "@name": "cut",
                "shortdesc": "Cuts the current selection to the clipboard."
            },
            {
                "@name": "selectBorder",
                "shortdesc": "Selects the selection border only (in the specified width); subsequent actions do not affect the selected area within the borders.",
                "parameters": {
                    "parameter": {
                        "@name": "width",
                        "shortdesc": "The width of the border selection.",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitValue",
                                "@": "UnitValue"
                            }
                        }
                    }
                }
            },
            {
                "@name": "contract",
                "shortdesc": "Contracts the selection.",
                "parameters": {
                    "parameter": {
                        "@name": "by",
                        "shortdesc": "The amount to contract the selection.",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitValue",
                                "@": "UnitValue"
                            }
                        }
                    }
                }
            },
            {
                "@name": "fill",
                "shortdesc": "Fills the selection.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "fillType",
                            "shortdesc": "The color or history state with which to fill the object.",
                            "datatype": {
                                "type": "any"
                            }
                        },
                        {
                            "@name": "mode",
                            "@optional": "true",
                            "shortdesc": "The color blend mode.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ColorBlendMode",
                                    "@": "ColorBlendMode"
                                },
                                "value": "ColorBlendMode.NORMAL"
                            }
                        },
                        {
                            "@name": "opacity",
                            "@optional": "true",
                            "shortdesc": "The opacity as a percentage. Range: 1 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "preserveTransparency",
                            "@optional": "true",
                            "shortdesc": "If true, perserves transparencies.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "stroke",
                "shortdesc": "Strokes the selection.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "strokeColor",
                            "shortdesc": "The color to stroke the selection with.",
                            "datatype": {
                                "type": "any"
                            }
                        },
                        {
                            "@name": "width",
                            "shortdesc": "The stroke width.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "location",
                            "@optional": "true",
                            "shortdesc": "The stroke location.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/StrokeLocation",
                                    "@": "StrokeLocation"
                                },
                                "value": "StrokeLocation.CENTER"
                            }
                        },
                        {
                            "@name": "mode",
                            "@optional": "true",
                            "shortdesc": "The color blend mode.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ColorBlendMode",
                                    "@": "ColorBlendMode"
                                },
                                "value": "ColorBlendMode.NORMAL"
                            }
                        },
                        {
                            "@name": "opacity",
                            "@optional": "true",
                            "shortdesc": "The opacity of the stroke color as a percentage. Range: 1 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "preserveTransparency",
                            "@optional": "true",
                            "shortdesc": "If true, preserves transparency.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "selectAll",
                "shortdesc": "Selects the entire layer."
            },
            {
                "@name": "deselect",
                "shortdesc": "Deselects the current selection."
            },
            {
                "@name": "select",
                "shortdesc": "Selects the specified region.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "region",
                            "shortdesc": "Array of x and y coordinates that describe the corners of the selection, in the format [[x1, y1], [x2,y2],[x3, y3], [x4,y4]]",
                            "datatype": {
                                "type": "any",
                                "array": ""
                            }
                        },
                        {
                            "@name": "type",
                            "@optional": "true",
                            "shortdesc": "The method for combining the new selection with the existing selection.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SelectionType",
                                    "@": "SelectionType"
                                },
                                "value": "SelectionType.REPLACE"
                            }
                        },
                        {
                            "@name": "feather",
                            "@optional": "true",
                            "shortdesc": "The feather amount.",
                            "datatype": {
                                "type": "number",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "antiAlias",
                            "@optional": "true",
                            "shortdesc": "If true, anti-aliasing is used.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "expand",
                "shortdesc": "Expands the selection.",
                "parameters": {
                    "parameter": {
                        "@name": "by",
                        "shortdesc": "The amount to expand the selection.",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitValue",
                                "@": "UnitValue"
                            }
                        }
                    }
                }
            },
            {
                "@name": "feather",
                "shortdesc": "Feathers the edges of the selection.",
                "parameters": {
                    "parameter": {
                        "@name": "by",
                        "shortdesc": "The amount to feather the edge.",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitValue",
                                "@": "UnitValue"
                            }
                        }
                    }
                }
            },
            {
                "@name": "grow",
                "shortdesc": "Grows the selection to include all adjacent pixels falling within the specified tolerance range.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "tolerance",
                            "shortdesc": "The tolerance range. Range: 0 to 255.",
                            "datatype": {
                                "type": "int",
                                "min": "0",
                                "max": "255"
                            }
                        },
                        {
                            "@name": "antiAlias",
                            "shortdesc": "If true, anti-aliasing is used.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "invert",
                "shortdesc": "Inverts the selection."
            },
            {
                "@name": "similar",
                "shortdesc": "Grows the selection to include pixels throughout the image falling within the tolerance range.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "tolerance",
                            "shortdesc": "The tolerance range. Range: 0 to 255.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "antiAlias",
                            "shortdesc": "If true, anti-aliasing is used.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "smooth",
                "shortdesc": "Cleans up stray pixels left inside or outside a color-based selection (within the radius specified in pixels).",
                "parameters": {
                    "parameter": {
                        "@name": "radius",
                        "shortdesc": "The sample radius in pixels. Range: 0 to 100.",
                        "datatype": {
                            "type": "int",
                            "min": "0",
                            "max": "100"
                        }
                    }
                }
            },
            {
                "@name": "store",
                "shortdesc": "Saves the selection as a channel.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "into",
                            "shortdesc": "The channel to save the selection to.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Channel",
                                    "@": "Channel"
                                }
                            }
                        },
                        {
                            "@name": "combination",
                            "@optional": "true",
                            "shortdesc": "How to add the selection to the existing contents of the channel.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SelectionType",
                                    "@": "SelectionType"
                                },
                                "value": "SelectionType.REPLACE"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "load",
                "shortdesc": "Loads the selection from the specified channel.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "from",
                            "shortdesc": "The channel to load the selection from.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Channel",
                                    "@": "Channel"
                                }
                            }
                        },
                        {
                            "@name": "combination",
                            "@optional": "true",
                            "shortdesc": "How to combine the channel contents with the existing selection.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SelectionType",
                                    "@": "SelectionType"
                                },
                                "value": "SelectionType.REPLACE"
                            }
                        },
                        {
                            "@name": "inverting",
                            "@optional": "true",
                            "shortdesc": "If true, selects the inverse of the channel contents.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "translate",
                "shortdesc": "Moves the object relative to its current position.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "deltaX",
                            "@optional": "true",
                            "shortdesc": "The amount to move the object horizontally.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "deltaY",
                            "@optional": "true",
                            "shortdesc": "The amount to move the object vertically.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "translateBoundary",
                "shortdesc": "Moves the boundary of selection relative to its current position.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "deltaX",
                            "@optional": "true",
                            "shortdesc": "The amount to move the object horizontally.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "deltaY",
                            "@optional": "true",
                            "shortdesc": "The amount to move the object vertically.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "rotate",
                "shortdesc": "Rotates the object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "angle",
                            "shortdesc": "The number of degrees to rotate the object.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The point to rotate about.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "rotateBoundary",
                "shortdesc": "Rotates the boundary of the selection.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "angle",
                            "shortdesc": "The rotation angle (in degrees)",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The point to rotate about.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "resize",
                "shortdesc": "Resizes the selected area to the specified dimensions and anchor position.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "horizontal",
                            "@optional": "true",
                            "shortdesc": "The amount to scale the selection horizontally (as a percentage).",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "vertical",
                            "@optional": "true",
                            "shortdesc": "The amount to scale the selection vertically (as a percentage).",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The point to scale around.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "resizeBoundary",
                "shortdesc": "Scales the boundary of the selection.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "horizontal",
                            "@optional": "true",
                            "shortdesc": "The amount to scale the object horizontally (as a percentage).",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "vertical",
                            "@optional": "true",
                            "shortdesc": "The amount to scale the object vertically (as a percentage).",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The point to scale around.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "makeWorkPath",
                "shortdesc": "Makes this selection item the workpath for this document.",
                "parameters": {
                    "parameter": {
                        "@name": "tolerance",
                        "@optional": "true",
                        "shortdesc": "The tolerance in pixels.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            }
        ]
    },
    "LayerSet": {
        "class": "LayerSet",
        "superClass": "Layer",
        "shortdesc": "A group of layer objects, which can include art layer objects and other (nested) layer set objects. A single command or set of commands manipulates all layers in a layer set object.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "enabledChannels",
                "shortdesc": "The channels that are enabled for the layer set. Must be a list of component channels.",
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    },
                    "array": ""
                }
            },
            {
                "@name": "layers",
                "@rwaccess": "readonly",
                "shortdesc": "The layers in this layer set.",
                "datatype": {
                    "type": {
                        "@href": "#\/Layers",
                        "@": "Layers"
                    }
                }
            },
            {
                "@name": "layerSets",
                "@rwaccess": "readonly",
                "shortdesc": "The layer sets contained within the layer set.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerSets",
                        "@": "LayerSets"
                    }
                }
            },
            {
                "@name": "artLayers",
                "@rwaccess": "readonly",
                "shortdesc": "The art layers contained in this layer set.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayers",
                        "@": "ArtLayers"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerSet",
                        "@": "LayerSet"
                    }
                }
            },
            {
                "@name": "merge",
                "shortdesc": "Merges the layer set.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            }
        ]
    },
    "ArtLayer": {
        "class": "ArtLayer",
        "superClass": "Layer",
        "shortdesc": "An object within a document that contains the visual elements of the image (equivalent to a layer in the Adobe Photoshop application).",
        "elementCount": 1,
        "propertyCount": 16,
        "methodCount": 63,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "fillOpacity",
                "shortdesc": "The interior opacity of the layer. Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "layerMaskDensity",
                "shortdesc": "The density of the layer mask (between 0.0 and 100.0)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "layerMaskFeather",
                "shortdesc": "The feather of the layer mask (between 0.0 and 250.0)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "vectorMaskDensity",
                "shortdesc": "The density of the vector mask (between 0.0 and 100.0)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "vectorMaskFeather",
                "shortdesc": "The feather of the vector mask (between 0.0 and 250.0)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "filterMaskDensity",
                "shortdesc": "The density of the filter mask (between 0.0 and 100.0)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "filterMaskFeather",
                "shortdesc": "The feather of the filter mask (between 0.0 and 250.0)",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "grouped",
                "shortdesc": "If true, the layer is grouped with the layer below.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "isBackgroundLayer",
                "shortdesc": "If true, the layer is a background layer.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "pixelsLocked",
                "shortdesc": "If true, the pixels in the layer's image cannot be edited.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "positionLocked",
                "shortdesc": "If true, the pixels in the layer's image cannot be moved within the layer.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "transparentPixelsLocked",
                "shortdesc": "If true, editing is confined to the opaque portions of the layer.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "kind",
                "shortdesc": "Sets the layer kind (such as 'text layer') for an empty layer. Valid only when the layer is empty and when 'is background layer ' is false. You can use the 'kind ' property to make a background layer a normal layer; however, to make a layer a background layer, you must set 'is background layer' to true.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerKind",
                        "@": "LayerKind"
                    }
                }
            },
            {
                "@name": "textItem",
                "@rwaccess": "readonly",
                "shortdesc": "The text that is associated with the layer. Valid only when 'kind' is text layer.",
                "datatype": {
                    "type": {
                        "@href": "#\/TextItem",
                        "@": "TextItem"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            },
            {
                "@name": "applyStyle",
                "shortdesc": "Applies the specified style to the layer.",
                "parameters": {
                    "parameter": {
                        "@name": "styleName",
                        "shortdesc": "The layer style to apply.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                }
            },
            {
                "@name": "applyStyleFile",
                "parameters": {
                    "parameter": {
                        "@name": "file",
                        "shortdesc": "Style file to apply.",
                        "datatype": {
                            "type": {
                                "@href": "$COMMON\/javascript.xml#\/File",
                                "@": "File"
                            }
                        }
                    }
                }
            },
            {
                "@name": "saveStyleFile",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "file",
                            "shortdesc": "File to save the style to.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "thumbnail",
                            "@optional": "true",
                            "shortdesc": "File to save the style thumbnail to.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "thumbnailSize",
                            "@optional": "true",
                            "shortdesc": "Size of thumbnail to save.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "backgroundValue",
                            "@optional": "true",
                            "shortdesc": "Background grayvalue.",
                            "datatype": {
                                "type": "number"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "clear",
                "shortdesc": "Cuts the layer without moving it to the clipboard."
            },
            {
                "@name": "copy",
                "shortdesc": "Copies the layer to the clipboard.",
                "parameters": {
                    "parameter": {
                        "@name": "merge",
                        "@optional": "true",
                        "shortdesc": "If true, the copy includes all visible layers. If false, the copy only copies from the current layer.",
                        "datatype": {
                            "type": "bool",
                            "value": "false"
                        }
                    }
                }
            },
            {
                "@name": "cut",
                "shortdesc": "Cuts the layer to the clipboard."
            },
            {
                "@name": "merge",
                "shortdesc": "Merges the layer down, removing the layer from the document. Returns a reference to the art layer that this layer is merged into.",
                "datatype": {
                    "type": {
                        "@href": "#\/ArtLayer",
                        "@": "ArtLayer"
                    }
                }
            },
            {
                "@name": "rasterize",
                "shortdesc": "Converts the targeted content in the layer into a flat, raster image.",
                "parameters": {
                    "parameter": {
                        "@name": "target",
                        "shortdesc": "What to rasterize.",
                        "datatype": {
                            "type": {
                                "@href": "#\/RasterizeType",
                                "@": "RasterizeType"
                            }
                        }
                    }
                }
            },
            {
                "@name": "applyAverage",
                "shortdesc": "Applies the average filter."
            },
            {
                "@name": "applyGaussianBlur",
                "shortdesc": "Applies the gaussian blur filter.",
                "parameters": {
                    "parameter": {
                        "@name": "radius",
                        "shortdesc": "The blur width in pixels. Range: 1.0 to 250.0.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "applyLensBlur",
                "shortdesc": "Apply the lens blur filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "source",
                            "@optional": "true",
                            "shortdesc": "The source for the depth map.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/DepthMapSource",
                                    "@": "DepthMapSource"
                                },
                                "value": "DepthMapSource.NONE"
                            }
                        },
                        {
                            "@name": "focalDistance",
                            "@optional": "true",
                            "shortdesc": "The blur focal distance (in pixels) for the depth map. RangeL 0 to 255. Valid only when 'source' is transparency or layer mask.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "invertDepthMap",
                            "@optional": "true",
                            "shortdesc": "If true, inverts the depth map.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        },
                        {
                            "@name": "shape",
                            "@optional": "true",
                            "shortdesc": "The shape of the iris.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/Geometry",
                                    "@": "Geometry"
                                },
                                "value": "Geometry.HEXAGON"
                            }
                        },
                        {
                            "@name": "radius",
                            "@optional": "true",
                            "shortdesc": "The radius of the iris. Range: 0 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "15"
                            }
                        },
                        {
                            "@name": "bladeCurvature",
                            "@optional": "true",
                            "shortdesc": "The blade curvature of the iris. Range: 0 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "rotation",
                            "@optional": "true",
                            "shortdesc": "The rotation of the iris (in degrees). Range: 0 to 360.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "brightness",
                            "@optional": "true",
                            "shortdesc": "The brightness for the specular highlights. Range: 0 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "threshold",
                            "@optional": "true",
                            "shortdesc": "The threshold for the specular highlights. Range: 0 to 255.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "amount",
                            "@optional": "true",
                            "shortdesc": "The amount of noise. Range: 0 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "distribution",
                            "@optional": "true",
                            "shortdesc": "The distribution value for the noise.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/NoiseDistribution",
                                    "@": "NoiseDistribution"
                                },
                                "value": "NoiseDistribution.UNIFORM"
                            }
                        },
                        {
                            "@name": "monochromatic",
                            "@optional": "true",
                            "shortdesc": "If true, the noise is monochromatic.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyBlur",
                "shortdesc": "Applies the blur filter."
            },
            {
                "@name": "applyBlurMore",
                "shortdesc": "Applies the blur more filter."
            },
            {
                "@name": "applyMotionBlur",
                "shortdesc": "Applies the motion blur filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "angle",
                            "shortdesc": "The angle (in degrees). Range: -360 to 360.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "radius",
                            "shortdesc": "The radius (in pixels). Range: 1 to 999.",
                            "datatype": {
                                "type": "number"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyRadialBlur",
                "shortdesc": "Applies the radial blur filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "amount",
                            "shortdesc": "The amount of blur. Range: 1 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "blurMethod",
                            "shortdesc": "The blur method to use.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/RadialBlurMethod",
                                    "@": "RadialBlurMethod"
                                }
                            }
                        },
                        {
                            "@name": "blurQuality",
                            "shortdesc": "The smoothness or graininess of the blurred image.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/RadialBlurQuality",
                                    "@": "RadialBlurQuality"
                                }
                            }
                        },
                        {
                            "@name": "blurCenter",
                            "@optional": "true",
                            "shortdesc": "Position (unit value)",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitPoint",
                                    "@": "UnitPoint"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applySmartBlur",
                "shortdesc": "Applies the smart blur filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "radius",
                            "shortdesc": "The blur radius. Range: 0 - 1000.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "threshold",
                            "shortdesc": "The blur threshold. Range: 0 - 1000.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "blurQuality",
                            "shortdesc": "The smoothness or graininess of the blurred image.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SmartBlurQuality",
                                    "@": "SmartBlurQuality"
                                }
                            }
                        },
                        {
                            "@name": "mode",
                            "shortdesc": "The smart blur mode.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SmartBlurMode",
                                    "@": "SmartBlurMode"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyDiffuseGlow",
                "shortdesc": "Applies the diffuse glow filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "graininess",
                            "shortdesc": "The amount of graininess. Range: 0 to 10.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "glowAmount",
                            "shortdesc": "The glow amount. Range: 0 to 20.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "clearAmount",
                            "shortdesc": "The clear amount. Range: 0 to 20.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyDisplace",
                "shortdesc": "Applies the displace filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "horizontalScale",
                            "shortdesc": "The amount of horizontal distortion. Range: -999 to 999.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "verticalScale",
                            "shortdesc": "The amount of vertical distortion. Range: -999 to 999.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "displacementType",
                            "shortdesc": "The displacement type.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/DisplacementMapType",
                                    "@": "DisplacementMapType"
                                }
                            }
                        },
                        {
                            "@name": "undefinedAreas",
                            "shortdesc": "The treatment of undistorted areas.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UndefinedAreas",
                                    "@": "UndefinedAreas"
                                }
                            }
                        },
                        {
                            "@name": "displacementMapFile",
                            "shortdesc": "The distortion image map.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyGlassEffect",
                "shortdesc": "Applies the glass filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "distortion",
                            "shortdesc": "The amount of distortion. Range: 0 to 20.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "smoothness",
                            "shortdesc": "The smoothness. Range: 1 to 15.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "scaling",
                            "shortdesc": "The amount of scaling. Range: 50 to 200.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "invert",
                            "@optional": "true",
                            "shortdesc": "If true, the texture is inverted.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        },
                        {
                            "@name": "texture",
                            "@optional": "true",
                            "shortdesc": "The type of texture.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/TextureType",
                                    "@": "TextureType"
                                }
                            }
                        },
                        {
                            "@name": "textureFile",
                            "@optional": "true",
                            "shortdesc": "The file from which to load the texture type.",
                            "datatype": {
                                "type": {
                                    "@href": "$COMMON\/javascript.xml#\/File",
                                    "@": "File"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyOceanRipple",
                "shortdesc": "Applies the ocean ripple filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "size",
                            "shortdesc": "The ripple size. Range: 1 to 15.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "magnitude",
                            "shortdesc": "The ripple magnitude. Range: 0 to 20.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyPinch",
                "shortdesc": "Applies the pinch filter.",
                "parameters": {
                    "parameter": {
                        "@name": "amount",
                        "shortdesc": "The pinch amount. Range: -100 to 100.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                }
            },
            {
                "@name": "applyPolarCoordinates",
                "shortdesc": "Applies the polar coordinates filter.",
                "parameters": {
                    "parameter": {
                        "@name": "conversion",
                        "shortdesc": "The conversion type.",
                        "datatype": {
                            "type": {
                                "@href": "#\/PolarConversionType",
                                "@": "PolarConversionType"
                            }
                        }
                    }
                }
            },
            {
                "@name": "applyRipple",
                "shortdesc": "Applies the ripple filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "amount",
                            "shortdesc": "The ripple amount. Range: -999 to 999.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "size",
                            "shortdesc": "The ripple size.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/RippleSize",
                                    "@": "RippleSize"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyShear",
                "shortdesc": "Applies the shear filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "curve",
                            "shortdesc": "Specification of the shear curve in points as x,y coordinate pairs in the format [[x1, y1],[x2, y2]]. Any number of coordinate pairs can be specified.",
                            "datatype": {
                                "type": "any",
                                "array": ""
                            }
                        },
                        {
                            "@name": "undefinedAreas",
                            "shortdesc": "The treatment of areas left blank by the distortion.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UndefinedAreas",
                                    "@": "UndefinedAreas"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applySpherize",
                "shortdesc": "Applies the spherize filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "amount",
                            "shortdesc": "The amount of distortion. Range: -100 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "mode",
                            "shortdesc": "The distortion mode.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SpherizeMode",
                                    "@": "SpherizeMode"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyTwirl",
                "shortdesc": "Applies the twirl filter.",
                "parameters": {
                    "parameter": {
                        "@name": "angle",
                        "shortdesc": "The twirl angle. Range: -999 to 999.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                }
            },
            {
                "@name": "applyWave",
                "shortdesc": "Applies the wave filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "generatorNumber",
                            "shortdesc": "The number of generators. Range: 1 to 999.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "minimumWavelength",
                            "shortdesc": "The minimum wave length. Range: 1 to 998.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "maximumWavelength",
                            "shortdesc": "The maximum wave length. Range: 2 to (minimum wavelength + 1)",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "minimumAmplitude",
                            "shortdesc": "The minimum amplitude. Range: 1 to 998.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "maximumAmplitude",
                            "shortdesc": "The maximum amplitude. Range: 2 to (minimum amplitude + 1)",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "horizontalScale",
                            "shortdesc": "The amount of horizontal scale (as a percentage). Range: 1 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "verticalScale",
                            "shortdesc": "The amount of vertical scale (as a percentage). Range: 1 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "waveType",
                            "shortdesc": "The wave type.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/WaveType",
                                    "@": "WaveType"
                                }
                            }
                        },
                        {
                            "@name": "undefinedAreas",
                            "shortdesc": "The treatment of areas left blank by the distortion.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UndefinedAreas",
                                    "@": "UndefinedAreas"
                                }
                            }
                        },
                        {
                            "@name": "randomSeed",
                            "shortdesc": "The random seed.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyZigZag",
                "shortdesc": "Applies the zigzag filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "amount",
                            "shortdesc": "The amount of zigzag. Range: -100 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "ridges",
                            "shortdesc": "The ridge length.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "style",
                            "shortdesc": "The zigzag style.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ZigZagType",
                                    "@": "ZigZagType"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyAddNoise",
                "shortdesc": "Applies the add noise filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "amount",
                            "shortdesc": "The amount of noise (as a percentage). Range: 0.1 to 400.0.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "distribution",
                            "shortdesc": "The noise distribution type.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/NoiseDistribution",
                                    "@": "NoiseDistribution"
                                }
                            }
                        },
                        {
                            "@name": "monochromatic",
                            "shortdesc": "If true, applies the filter only to the tonal elements in the image without changing the colors.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyDespeckle",
                "shortdesc": "Applies the despeckle filter."
            },
            {
                "@name": "applyDustAndScratches",
                "shortdesc": "Applies the dust and scratches filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "radius",
                            "shortdesc": "The size (in pixels) of the area searched for dissimilar pixels. Range: 1 to 16.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "threshold",
                            "shortdesc": "Determines how dissimilar the pixels should be before they are eliminated. Range: 0 to 255.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyMedianNoise",
                "shortdesc": "Applies the median noise filter.",
                "parameters": {
                    "parameter": {
                        "@name": "radius",
                        "shortdesc": "The size of the area searched for pixels of similar brightness. Range: 0 to 100.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "applyClouds",
                "shortdesc": "Applies the clouds filter."
            },
            {
                "@name": "applyDifferenceClouds",
                "shortdesc": "Applies the difference clouds filter."
            },
            {
                "@name": "applyLensFlare",
                "shortdesc": "Applies the lens flare filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "brightness",
                            "shortdesc": "The flare brightness. Range: 10 to 300.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "flareCenter",
                            "shortdesc": "The position of the flare center.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitPoint",
                                    "@": "UnitPoint"
                                }
                            }
                        },
                        {
                            "@name": "lensType",
                            "shortdesc": "The lens type.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/LensType",
                                    "@": "LensType"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyTextureFill",
                "shortdesc": "Applies the texture fill filter.",
                "parameters": {
                    "parameter": {
                        "@name": "textureFile",
                        "shortdesc": "The texture file. Must be a grayscale Photoshop file.",
                        "datatype": {
                            "type": {
                                "@href": "$COMMON\/javascript.xml#\/File",
                                "@": "File"
                            }
                        }
                    }
                }
            },
            {
                "@name": "applySharpen",
                "shortdesc": "Applies the sharpen filter."
            },
            {
                "@name": "applySharpenEdges",
                "shortdesc": "Applies the sharpen edges filter."
            },
            {
                "@name": "applySharpenMore",
                "shortdesc": "Applies the sharpen more filter."
            },
            {
                "@name": "applyUnSharpMask",
                "shortdesc": "Applies the unsharp mask filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "amount",
                            "shortdesc": "The amount of sharpening (as a percentage). Range: 1 to 500.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "radius",
                            "shortdesc": "The radius in pixels. Range: 0.1 to 250.0.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "threshold",
                            "shortdesc": "The contrast threshold. Range: 0 to 255.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyDeInterlace",
                "shortdesc": "Applies the de-interlace filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "eliminateFields",
                            "shortdesc": "The fields to eliminate.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/EliminateFields",
                                    "@": "EliminateFields"
                                }
                            }
                        },
                        {
                            "@name": "createFields",
                            "shortdesc": "The method to use to replace eliminated fields.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/CreateFields",
                                    "@": "CreateFields"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyNTSC",
                "shortdesc": "Applies the NTSC colors filter."
            },
            {
                "@name": "applyCustomFilter",
                "shortdesc": "Applies the custom filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "characteristics",
                            "shortdesc": "The custom filter characteristics. This is an array of 25 values that corresponds to a left-to-right, top-to- bottom traversal of the array presented in the Custom dialog in the user interface (Filter > Other > Custom).",
                            "datatype": {
                                "type": "int",
                                "array": ""
                            }
                        },
                        {
                            "@name": "scale",
                            "shortdesc": "The value by which to divide the sum of the brightness values of the pixels included in the calculation.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "offset",
                            "shortdesc": "The value to be added to the result of the scale calculation.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "applyHighPass",
                "shortdesc": "Applies the high pass filter.",
                "parameters": {
                    "parameter": {
                        "@name": "radius",
                        "shortdesc": "The width (in pixels) of the radius where edge details are retained.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "applyMaximum",
                "shortdesc": "Applies the maximum filter.",
                "parameters": {
                    "parameter": {
                        "@name": "radius",
                        "shortdesc": "The choke area (in pixels). Range: 0 to 100.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "applyMinimum",
                "shortdesc": "Applies the minimum filter.",
                "parameters": {
                    "parameter": {
                        "@name": "radius",
                        "shortdesc": "The spread area (in pixels). Range: 0 to 100.",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "applyOffset",
                "shortdesc": "Applies the offset filter.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "horizontal",
                            "shortdesc": "The amount (in pixels) to move the selection horizontally (to the right). Range: -6144 to 6144.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "vertical",
                            "shortdesc": "The amount (in pixels) to move the selection vertically (downward). Range: -6144 to 6144.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "undefinedAreas",
                            "shortdesc": "The method for filling areas left blank by the offset.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/OffsetUndefinedAreas",
                                    "@": "OffsetUndefinedAreas"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "adjustLevels",
                "shortdesc": "Adjusts levels of the selected channels.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "inputRangeStart",
                            "shortdesc": "The input levels minimum. Range: 0 to 253.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "inputRangeEnd",
                            "shortdesc": "The input levels maximum. Range: (input range start + 2) to 253.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "inputRangeGamma",
                            "shortdesc": "The input levels gamma. Range: 0.10 to 9.99.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "outputRangeStart",
                            "shortdesc": "The output levels minimum. Range: 0 to 253.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "outputRangeEnd",
                            "shortdesc": "The output levels maximum. Range: (output range start + 2) to 253.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "autoLevels",
                "shortdesc": "Adjust the levels of the selected channels using the auto levels option."
            },
            {
                "@name": "autoContrast",
                "shortdesc": "Adjusts the contrast of the selected channels automatically."
            },
            {
                "@name": "adjustCurves",
                "shortdesc": "Adjusts the tonal range of the selected channel using up to fourteen points.",
                "parameters": {
                    "parameter": {
                        "@name": "curveShape",
                        "shortdesc": "The curve points. The number of points must be between 2 and 14.",
                        "datatype": {
                            "type": {
                                "@href": "#\/Point",
                                "@": "Point"
                            },
                            "array": ""
                        }
                    }
                }
            },
            {
                "@name": "adjustBrightnessContrast",
                "shortdesc": "Adjusts the brightness and constrast.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "brightness",
                            "shortdesc": "The brightness amount. Range: -100 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        },
                        {
                            "@name": "contrast",
                            "shortdesc": "The contrast amount. Range: -100 to 100.",
                            "datatype": {
                                "type": "int"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "adjustColorBalance",
                "shortdesc": "Adjusts the color balance of the layer's component channels.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "shadows",
                            "@optional": "true",
                            "shortdesc": "The adjustments for the shadows. The array must include three values (in the range -100 to 100), which represent cyan or red, magenta or green, and yellow or blue, when the document mode is CMYK or RGB.",
                            "datatype": {
                                "type": "int",
                                "array": ""
                            }
                        },
                        {
                            "@name": "midtones",
                            "@optional": "true",
                            "shortdesc": "The adjustments for the midtones. The array must include three values (in the range -100 to 100), which represent cyan or red, magenta or green, and yellow or blue, when the document mode is CMYK or RGB.",
                            "datatype": {
                                "type": "int",
                                "array": ""
                            }
                        },
                        {
                            "@name": "highlights",
                            "@optional": "true",
                            "shortdesc": "The adjustments for the highlights. The array must include three values (in the range -100 to 100), which represent cyan or red, magenta or green, and yellow or blue, when the document mode is CMYK or RGB.",
                            "datatype": {
                                "type": "int",
                                "array": ""
                            }
                        },
                        {
                            "@name": "preserveLuminosity",
                            "@optional": "true",
                            "shortdesc": "If true, luminosity is preserved.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "desaturate",
                "shortdesc": "Converts a color image to a grayscale image in the current color mode by assigning equal values of each component color to each pixel."
            },
            {
                "@name": "selectiveColor",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "selectionMethod",
                            "shortdesc": "Modifies the amount of a process color in a specified primary color without affecting the other primary colors.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AdjustmentReference",
                                    "@": "AdjustmentReference"
                                }
                            }
                        },
                        {
                            "@name": "reds",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "yellows",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "greens",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "cyans",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "blues",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "magentas",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "whites",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "neutrals",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        },
                        {
                            "@name": "blacks",
                            "@optional": "true",
                            "shortdesc": "Array of 4 values: cyan, magenta, yellow, black.",
                            "datatype": {
                                "type": "number",
                                "array": ""
                            }
                        }
                    ]
                }
            },
            {
                "@name": "mixChannels",
                "shortdesc": "Modifies a targeted (output) color channel using a mix of the existing color channels in the image. (output channels = An array of channel specifications. For each component channel, specify a list of adjustment values (-200 to 200) followed by a 'constant' value (-200 to 200).) When monochrome = true, the maximum number of channel value specifications is 1. Valid only when 'document mode' = RGB or CMYK. RGB arrays must include four doubles. CMYK arrays must include five doubles.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "outputChannels",
                            "shortdesc": "A list of channel specifications. For each component channel that the document has, you must specify a list of adjustment values followed by a 'constant' value.",
                            "datatype": {
                                "type": "any",
                                "array": ""
                            }
                        },
                        {
                            "@name": "monochrome",
                            "@optional": "true",
                            "shortdesc": "If true, uses monochrome mixing. Note: If this is true, you can only specify one channel value.",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "invert",
                "shortdesc": "Inverts the colors in the layer by converting the brightness value of each pixel in the channels to the inverse value on the 256-step color-values scale."
            },
            {
                "@name": "equalize",
                "shortdesc": "Redistributes the brightness values of pixels in an image to more evenly represent the entire range of brightness levels within the image."
            },
            {
                "@name": "threshold",
                "shortdesc": "Converts grayscale or color images to high-contrast, B\/W images by converting pixels lighter than the specified threshold to white and pixels darker than the threshold to black.",
                "parameters": {
                    "parameter": {
                        "@name": "level",
                        "shortdesc": "The threshold level.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                }
            },
            {
                "@name": "posterize",
                "shortdesc": "Specifies the number of tonal levels for each channel and then maps pixels to the closest matching level.",
                "parameters": {
                    "parameter": {
                        "@name": "levels",
                        "shortdesc": "The tonal levels. Range: 2 to 255.",
                        "datatype": {
                            "type": "int"
                        }
                    }
                }
            },
            {
                "@name": "photoFilter",
                "shortdesc": "Adjusts the layer's color balance and temperature as if a color filter had been applied.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "fillColor",
                            "@optional": "true",
                            "shortdesc": "The color to use for the fill.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SolidColor",
                                    "@": "SolidColor"
                                }
                            }
                        },
                        {
                            "@name": "density",
                            "@optional": "true",
                            "shortdesc": "The density (as a percentage) of the filter effect. Range: 1 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "25"
                            }
                        },
                        {
                            "@name": "preserveLuminosity",
                            "@optional": "true",
                            "shortdesc": "If true, luminosity is preserved.",
                            "datatype": {
                                "type": "bool",
                                "value": "true"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "shadowHighlight",
                "shortdesc": "Adjusts the range of tones in the shadows and highlights.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "shadowAmount",
                            "@optional": "true",
                            "shortdesc": "The shadow amount, as a percentage. Range: 0 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "50"
                            }
                        },
                        {
                            "@name": "shadowWidth",
                            "@optional": "true",
                            "shortdesc": "The shadow width, as a percentage. Range: 0 to 100 for tonal width (0 = narrow), (100 = broad).",
                            "datatype": {
                                "type": "int",
                                "value": "50"
                            }
                        },
                        {
                            "@name": "shadowRaduis",
                            "@optional": "true",
                            "shortdesc": "The shadow radius (in pixels). Range: 0 to 2500.",
                            "datatype": {
                                "type": "int",
                                "value": "30"
                            }
                        },
                        {
                            "@name": "highlightAmount",
                            "@optional": "true",
                            "shortdesc": "The highlight amount, as a percentage. Range: 0 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "highlightWidth",
                            "@optional": "true",
                            "shortdesc": "The highlight width. Range: 0 to 100 for tonal width (0 = narrow), (100 = broad).",
                            "datatype": {
                                "type": "int",
                                "value": "50"
                            }
                        },
                        {
                            "@name": "highlightRaduis",
                            "@optional": "true",
                            "shortdesc": "The highlight radius (in pixels). Range: 0 to 2500.",
                            "datatype": {
                                "type": "int",
                                "value": "30"
                            }
                        },
                        {
                            "@name": "colorCorrection",
                            "@optional": "true",
                            "shortdesc": "The amount to adjust the colors in the changed portion of the image. Range: -100 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "20"
                            }
                        },
                        {
                            "@name": "midtoneContrast",
                            "@optional": "true",
                            "shortdesc": "The amount of midtone contrast. Range: -100 to 100.",
                            "datatype": {
                                "type": "int",
                                "value": "0"
                            }
                        },
                        {
                            "@name": "blackClip",
                            "@optional": "true",
                            "shortdesc": "Fractions of whites to be clipped. Range: 0.000 to 50.000.",
                            "datatype": {
                                "type": "number",
                                "value": "0.01"
                            }
                        },
                        {
                            "@name": "whiteClip",
                            "@optional": "true",
                            "shortdesc": "Fractions of blacks to be clipped. Range: 0.000 to 50.000.",
                            "datatype": {
                                "type": "number",
                                "value": "0.01"
                            }
                        }
                    ]
                }
            }
        ]
    },
    "Layer": {
        "class": "Layer",
        "superClass": null,
        "shortdesc": "A layer object.",
        "elementCount": 1,
        "propertyCount": 13,
        "methodCount": 10,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "name",
                "shortdesc": "The name of the layer.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "allLocked",
                "shortdesc": "If true, the layer's contents and settings are locked.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "blendMode",
                "shortdesc": "The mode to use when compositing an object.",
                "datatype": {
                    "type": {
                        "@href": "#\/BlendMode",
                        "@": "BlendMode"
                    }
                }
            },
            {
                "@name": "linkedLayers",
                "@rwaccess": "readonly",
                "shortdesc": "The layers linked to this layer.",
                "datatype": {
                    "type": {
                        "@href": "#\/Layer",
                        "@": "Layer"
                    },
                    "array": ""
                }
            },
            {
                "@name": "opacity",
                "shortdesc": "The layer's master opacity (as a percentage). Range: 0.0 to 100.0.",
                "datatype": {
                    "type": "number",
                    "min": "0",
                    "max": "100"
                }
            },
            {
                "@name": "visible",
                "shortdesc": "If true, the layer is visible.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "id",
                "@rwaccess": "readonly",
                "shortdesc": "The unique ID of this layer.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "itemIndex",
                "@rwaccess": "readonly",
                "shortdesc": "The layer index sans layer groups, how Photoshop would index them.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "bounds",
                "@rwaccess": "readonly",
                "shortdesc": "If the Layer is a layer set, this property returns a reference to the corresponding layer set object.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitRect",
                        "@": "UnitRect"
                    }
                }
            },
            {
                "@name": "boundsNoEffects",
                "@rwaccess": "readonly",
                "shortdesc": "Bounding rectangle of the Layer not including effects.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitRect",
                        "@": "UnitRect"
                    }
                }
            },
            {
                "@name": "xmpMetadata",
                "@rwaccess": "readonly",
                "shortdesc": "XMP metadata associated with the Layer.",
                "datatype": {
                    "type": {
                        "@href": "#\/XMPMetadata",
                        "@": "XMPMetadata"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "move",
                "shortdesc": "Move the object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "relativeObject",
                            "datatype": {
                                "type": "Object"
                            }
                        },
                        {
                            "@name": "insertionLocation",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ElementPlacement",
                                    "@": "ElementPlacement"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Layer",
                        "@": "Layer"
                    }
                }
            },
            {
                "@name": "duplicate",
                "shortdesc": "Duplicate this object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "relativeObject",
                            "datatype": {
                                "type": "Object"
                            }
                        },
                        {
                            "@name": "insertionLocation",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ElementPlacement",
                                    "@": "ElementPlacement"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Layer",
                        "@": "Layer"
                    }
                }
            },
            {
                "@name": "moveToEnd",
                "shortdesc": "...",
                "parameters": {
                    "parameter": {
                        "@name": "layerSet",
                        "@optional": "true",
                        "datatype": {
                            "type": {
                                "@href": "#\/LayerSet",
                                "@": "LayerSet"
                            }
                        }
                    }
                }
            },
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "unlink",
                "shortdesc": "Unlinks the layer."
            },
            {
                "@name": "link",
                "shortdesc": "Links the layer with the specified layer.",
                "parameters": {
                    "parameter": {
                        "@name": "with",
                        "shortdesc": "The layer to link to.",
                        "datatype": {
                            "type": {
                                "@href": "#\/Layer",
                                "@": "Layer"
                            }
                        }
                    }
                }
            },
            {
                "@name": "translate",
                "shortdesc": "Moves the object relative to its current position.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "deltaX",
                            "@optional": "true",
                            "shortdesc": "The amount to move the object horizontally.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        },
                        {
                            "@name": "deltaY",
                            "@optional": "true",
                            "shortdesc": "The amount to move the object vertically.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/UnitValue",
                                    "@": "UnitValue"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "rotate",
                "shortdesc": "Rotates the object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "angle",
                            "shortdesc": "The number of degrees to rotate the object.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The point to rotate about.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "resize",
                "shortdesc": "Scales the object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "horizontal",
                            "@optional": "true",
                            "shortdesc": "The amount to scale the object horizontally (as a percentage).",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "vertical",
                            "@optional": "true",
                            "shortdesc": "The amount to scale the object vertically (as a percentage).",
                            "datatype": {
                                "type": "number",
                                "value": "100"
                            }
                        },
                        {
                            "@name": "anchor",
                            "@optional": "true",
                            "shortdesc": "The point to resize about.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/AnchorPosition",
                                    "@": "AnchorPosition"
                                },
                                "value": "AnchorPosition.MIDDLECENTER"
                            }
                        }
                    ]
                }
            }
        ]
    },
    "Channel": {
        "class": "Channel",
        "superClass": null,
        "shortdesc": "Object that stores information about a color element in the image, analogous to a plate in the printing process that applies a single color. The document's color mode determines the number of default channels. For example, an RGB document has four default channels: A composite channel: RGB; and three component channels: red, green, and blue. A channel can also be an alpha channel, which stores selections as masks; or a spot channel, which stores spot colors.",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 6,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "histogram",
                "@rwaccess": "readonly",
                "shortdesc": "A histogram of the color of the channel.",
                "datatype": {
                    "type": "int",
                    "array": ""
                }
            },
            {
                "@name": "name",
                "shortdesc": "The channel name.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "kind",
                "shortdesc": "The type of channel.",
                "datatype": {
                    "type": {
                        "@href": "#\/ChannelType",
                        "@": "ChannelType"
                    }
                }
            },
            {
                "@name": "opacity",
                "shortdesc": "The opacity of alpha channels (called solidity for spot channels). Range: 0 to 100. Valid only when 'type' = masked area or selected area.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "visible",
                "shortdesc": "If true, the channel is visible.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "color",
                "shortdesc": "The color of the channel. Not valid for component channels.",
                "datatype": {
                    "type": {
                        "@href": "#\/SolidColor",
                        "@": "SolidColor"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    }
                }
            },
            {
                "@name": "duplicate",
                "shortdesc": "Duplicate this object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "relativeObject",
                            "datatype": {
                                "type": "Object"
                            }
                        },
                        {
                            "@name": "insertionLocation",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ElementPlacement",
                                    "@": "ElementPlacement"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    }
                }
            },
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "merge",
                "shortdesc": "Merges a spot channel into the component channels."
            },
            {
                "@name": "duplicate",
                "shortdesc": "Duplicates the channel.",
                "parameters": {
                    "parameter": {
                        "@name": "targetDocument",
                        "@optional": "true",
                        "shortdesc": "The document to duplicate the channel to.",
                        "datatype": {
                            "type": {
                                "@href": "#\/Document",
                                "@": "Document"
                            }
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/Channel",
                        "@": "Channel"
                    }
                }
            }
        ]
    },
    "Guide": {
        "class": "Guide",
        "superClass": null,
        "shortdesc": "A guide in the document.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "direction",
                "shortdesc": "Indicates whether the guide is vertical or horizontal.",
                "datatype": {
                    "type": {
                        "@href": "#\/Direction",
                        "@": "Direction"
                    }
                }
            },
            {
                "@name": "coordinate",
                "shortdesc": "Location of the guide from origin of image.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            }
        ]
    },
    "HistoryState": {
        "class": "HistoryState",
        "superClass": null,
        "shortdesc": "A version of the document stored automatically (and added to the history states collection, which preserves the document state each time the document is changed).",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "name",
                "@rwaccess": "readonly",
                "shortdesc": "The history state name.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "snapshot",
                "@rwaccess": "readonly",
                "shortdesc": "If true, the history state is a snapshot.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": []
    },
    "TextFont": {
        "class": "TextFont",
        "superClass": null,
        "shortdesc": "An installed font.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "name",
                "@rwaccess": "readonly",
                "shortdesc": "The font name.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "postScriptName",
                "@rwaccess": "readonly",
                "shortdesc": "The PostScript name of the font.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "family",
                "@rwaccess": "readonly",
                "shortdesc": "The font family.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "style",
                "@rwaccess": "readonly",
                "shortdesc": "The font style.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": []
    },
    "TextItem": {
        "class": "TextItem",
        "superClass": null,
        "shortdesc": "The text object contained in an art layer.",
        "elementCount": 1,
        "propertyCount": 59,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "antiAliasMethod",
                "shortdesc": "The method of anti-aliasing to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/AntiAlias",
                        "@": "AntiAlias"
                    }
                }
            },
            {
                "@name": "autoKerning",
                "shortdesc": "Options for auto kerning.",
                "datatype": {
                    "type": {
                        "@href": "#\/AutoKernType",
                        "@": "AutoKernType"
                    }
                }
            },
            {
                "@name": "color",
                "shortdesc": "The text color.",
                "datatype": {
                    "type": {
                        "@href": "#\/SolidColor",
                        "@": "SolidColor"
                    }
                }
            },
            {
                "@name": "useAutoLeading",
                "shortdesc": "If true, uses the font's built-in leading information.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "tracking",
                "shortdesc": "The amount of uniform spacing between multiple characters. Range: -1000 to 10000.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "verticalScale",
                "shortdesc": "Character scaling (vertical) in proportion to horizontal scale. Range: 0 - 1000 as a percentage.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "horizontalScale",
                "shortdesc": "Character scaling (horizontal) in proportion to horizontal scale. Range: 0 - 1000 as a percentage.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "baselineShift",
                "shortdesc": "The amount of baseline offset of text.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "contents",
                "shortdesc": "The actual text in the layer.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "font",
                "shortdesc": "The text face of the character.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "leading",
                "shortdesc": "The leading amount.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "ligatures",
                "shortdesc": "If true, ligatures are used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "alternateLigatures",
                "shortdesc": "If true, alternate ligatures are used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "oldStyle",
                "shortdesc": "If true, old style is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "position",
                "shortdesc": "The position of the origin for the text. The array must contain two values. Setting this property is basically equivalent to clicking the text tool at a point in the document to create the point of origin for text.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitPoint",
                        "@": "UnitPoint"
                    }
                }
            },
            {
                "@name": "direction",
                "shortdesc": "The text orientation.",
                "datatype": {
                    "type": {
                        "@href": "#\/Direction",
                        "@": "Direction"
                    }
                }
            },
            {
                "@name": "size",
                "shortdesc": "The font size in points.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "fauxBold",
                "shortdesc": "If true, faux bold is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "fauxItalic",
                "shortdesc": "If true, faux italic is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "capitalization",
                "shortdesc": "The case of the text.",
                "datatype": {
                    "type": {
                        "@href": "#\/Case",
                        "@": "Case"
                    }
                }
            },
            {
                "@name": "strikeThru",
                "shortdesc": "The strike through option to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/StrikeThruType",
                        "@": "StrikeThruType"
                    }
                }
            },
            {
                "@name": "underline",
                "shortdesc": "Options for underlining the text.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnderlineType",
                        "@": "UnderlineType"
                    }
                }
            },
            {
                "@name": "language",
                "shortdesc": "The language.",
                "datatype": {
                    "type": {
                        "@href": "#\/Language",
                        "@": "Language"
                    }
                }
            },
            {
                "@name": "noBreak",
                "shortdesc": "If true, words are not allowed to break at the end of a line. When enacted on large amounts of consecutive characters, can prevent word wrap and thus may prevent some text from appearing on the screen.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "kind",
                "shortdesc": "The type of text.",
                "datatype": {
                    "type": {
                        "@href": "#\/TextType",
                        "@": "TextType"
                    }
                }
            },
            {
                "@name": "justification",
                "shortdesc": "The paragraph justification.",
                "datatype": {
                    "type": {
                        "@href": "#\/Justification",
                        "@": "Justification"
                    }
                }
            },
            {
                "@name": "leftIndent",
                "shortdesc": "The amount to indent text from the left. Range: -1296 to 1296.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "firstLineIndent",
                "shortdesc": "The amount to indent the first line of paragraphs. Range: -1296 to 1296.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "rightIndent",
                "shortdesc": "The amount to indent text from the right. Range: -1296 to 1296.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "spaceBefore",
                "shortdesc": "The amount of space before each paragraph. Range: -1296 to 1296.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "spaceAfter",
                "shortdesc": "The amount of space after each paragraph. Range: -1296 to 1296.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "hangingPuntuation",
                "shortdesc": "If true, uses Roman hanging punctuation.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "textComposer",
                "shortdesc": "The text composing engine to use.",
                "datatype": {
                    "type": {
                        "@href": "#\/TextComposer",
                        "@": "TextComposer"
                    }
                }
            },
            {
                "@name": "hyphenation",
                "shortdesc": "If true, hyphenation is used.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "minimumGlyphScaling",
                "shortdesc": "The minimum amount (as a percentage) to scale the horizontal size of the text letters. Range: 50 - 200; at 100, the width of characters is not scaled. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "desiredGlyphScaling",
                "shortdesc": "The desired amount (as a percentage) to scale the horizontal size of the text letters. Range: 50 - 200; at 100, the width of characters is not scaled. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "maximumGlyphScaling",
                "shortdesc": "The maximum amount (as a percentage) to scale the horizontal size of the text letters. Range: 50 - 200; at 100, the width of characters is not scaled. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "minimumLetterScaling",
                "shortdesc": "The minimum amount of space (as a percentage) between letters. Range: 100 to 500; at 0, no space is added between letters. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "desiredLetterScaling",
                "shortdesc": "The amount of space (as a percentage) between letters. Range: 100 - 500; at 0, no space is added between letters. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "maximumLetterScaling",
                "shortdesc": "The maximum amount (as a percentage) of space between letters. Range: 100 - 500; at 0, no space is added between letters. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "minimumWordScaling",
                "shortdesc": "The minimum amount (as a percentage) of space between words. Range: 0 -1000; at 100, no additional space is added between words. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "desiredWordScaling",
                "shortdesc": "The amount (as a percentage) of space between words. Range: 0 -1000; at 100, no additional space is added between words. Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "maximumWordScaling",
                "shortdesc": "The maximum amount (as a percentage) of space between words (0 -1000; at 100, no additional space is added between words). Valid only for justified text.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "autoLeadingAmount",
                "shortdesc": "The percentage to use for auto leading. Range: 0.01 to 5000.00.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "hyphenateWordsLongerThan",
                "shortdesc": "The minimum number of letters a word must have in order for hyphenation in word wrap to be allowed. Range: 2 to 25.",
                "datatype": {
                    "type": "int",
                    "min": "0"
                }
            },
            {
                "@name": "hyphenateAfterFirst",
                "shortdesc": "The number of letters after which hyphenation in word wrap is allowed. Range: 1 to 15.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "hyphenateBeforeLast",
                "shortdesc": "The number of letters before which hyphenation in word wrap is allowed. Range: 1 to 15.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "hyphenLimit",
                "shortdesc": "The maximum number of consecutive lines that can end with a hyphenated word.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "hyphenationZone",
                "shortdesc": "The distance at the end of a line that will cause a word to break in unjustified type. Range: 0 - 720 picas.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "hyphenateCapitalWords",
                "shortdesc": "If true, capitalized words can be hyphenated.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "width",
                "shortdesc": "The width of the bounding box for paragraph text.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "height",
                "shortdesc": "The height of the bounding box for paragraph text.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitValue",
                        "@": "UnitValue"
                    }
                }
            },
            {
                "@name": "warpStyle",
                "shortdesc": "The style of warp.",
                "datatype": {
                    "type": {
                        "@href": "#\/WarpStyle",
                        "@": "WarpStyle"
                    }
                }
            },
            {
                "@name": "warpDirection",
                "shortdesc": "The warp direction.",
                "datatype": {
                    "type": {
                        "@href": "#\/Direction",
                        "@": "Direction"
                    }
                }
            },
            {
                "@name": "warpBend",
                "shortdesc": "The warp bend percentage. Range: -100 to 100.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "warpHorizontalDistortion",
                "shortdesc": "The warp horizontal distortion percentage. Range: -100 to 100.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "warpVerticalDistortion",
                "shortdesc": "The warp vertical distortion percentage. Range: -100 to 100.",
                "datatype": {
                    "type": "number"
                }
            }
        ],
        "methods": [
            {
                "@name": "createPath",
                "shortdesc": "Creates a clipping path from the outlines of the actual text items (such as letters or words)."
            },
            {
                "@name": "convertToShape",
                "shortdesc": "Converts the text object and its containing layer to a fill layer with the text changed to a clipping path."
            }
        ]
    },
    "LayerComp": {
        "class": "LayerComp",
        "superClass": null,
        "shortdesc": "A snapshot of a state of the layers in a document (can be used to view different page layouts or compostions).",
        "elementCount": 1,
        "propertyCount": 8,
        "methodCount": 6,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "name",
                "shortdesc": "The name of the layer comp.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "comment",
                "shortdesc": "The description of the layer comp.",
                "datatype": {
                    "type": "any"
                }
            },
            {
                "@name": "appearance",
                "shortdesc": "If true, uses layer appearance (layer styles) settings.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "position",
                "shortdesc": "If true, uses layer position.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "visibility",
                "shortdesc": "If true, the layer comp is visible.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "selected",
                "@rwaccess": "readonly",
                "shortdesc": "If true, the layer comp is currently selected.",
                "datatype": {
                    "type": "bool"
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/LayerComp",
                        "@": "LayerComp"
                    }
                }
            },
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "apply",
                "shortdesc": "Applies the layer comp to the document."
            },
            {
                "@name": "recapture",
                "shortdesc": "Recaptures the current layer state(s) for this layer comp."
            },
            {
                "@name": "resetFromComp",
                "shortdesc": "Resets the layer comp state to the document state."
            }
        ]
    },
    "PathItem": {
        "class": "PathItem",
        "superClass": null,
        "shortdesc": "A path or drawing object, such as the outline of a shape or a straight or curved line, which contains sub paths that comprise its geometry.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 11,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "name",
                "shortdesc": "The name of the path item.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "subPathItems",
                "@rwaccess": "readonly",
                "shortdesc": "The sub path objects for this path item.",
                "datatype": {
                    "type": {
                        "@href": "#\/SubPathItems",
                        "@": "SubPathItems"
                    }
                }
            },
            {
                "@name": "kind",
                "shortdesc": "The type of path.",
                "datatype": {
                    "type": {
                        "@href": "#\/PathKind",
                        "@": "PathKind"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/PathItem",
                        "@": "PathItem"
                    }
                }
            },
            {
                "@name": "duplicate",
                "shortdesc": "Duplicate this object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "relativeObject",
                            "datatype": {
                                "type": "Object"
                            }
                        },
                        {
                            "@name": "insertionLocation",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ElementPlacement",
                                    "@": "ElementPlacement"
                                }
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": {
                        "@href": "#\/PathItem",
                        "@": "PathItem"
                    }
                }
            },
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "duplicate",
                "shortdesc": "Duplicates this path item.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "@optional": "true",
                        "shortdesc": "The name for the new path.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": {
                        "@href": "#\/PathItem",
                        "@": "PathItem"
                    }
                }
            },
            {
                "@name": "makeSelection",
                "shortdesc": "Makes a selection object, whose border is the path, from this path item object.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "feather",
                            "@optional": "true",
                            "shortdesc": "The feather amount in pixels. Range: 0.0 to 250.0.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "antiAlias",
                            "@optional": "true",
                            "shortdesc": "If true, the selection uses anti-aliasing.",
                            "datatype": {
                                "type": "bool"
                            }
                        },
                        {
                            "@name": "operation",
                            "@optional": "true",
                            "shortdesc": "The selection behavior relative to the existing selection (when a selection already exists).",
                            "datatype": {
                                "type": {
                                    "@href": "#\/SelectionType",
                                    "@": "SelectionType"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "@name": "fillPath",
                "shortdesc": "Fills the area enclosed by the path.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "fillColor",
                            "@optional": "true",
                            "shortdesc": "The color of the fill for this path.",
                            "datatype": {
                                "type": "any"
                            }
                        },
                        {
                            "@name": "mode",
                            "@optional": "true",
                            "shortdesc": "The blending mode of the fill for this path.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ColorBlendMode",
                                    "@": "ColorBlendMode"
                                }
                            }
                        },
                        {
                            "@name": "opacity",
                            "@optional": "true",
                            "shortdesc": "The opacity of the fill for this path (as a percentage). Range: 0.0 to 100.0.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "preserveTransparency",
                            "@optional": "true",
                            "shortdesc": "If true, transparency is preserved.",
                            "datatype": {
                                "type": "bool"
                            }
                        },
                        {
                            "@name": "feather",
                            "@optional": "true",
                            "shortdesc": "The feather amount in pixels. Range: 0.0 to 250.0.",
                            "datatype": {
                                "type": "number"
                            }
                        },
                        {
                            "@name": "antiAlias",
                            "@optional": "true",
                            "shortdesc": "If true, uses anti-aliasing for the selection.",
                            "datatype": {
                                "type": "bool"
                            }
                        },
                        {
                            "@name": "wholePath",
                            "@optional": "true",
                            "shortdesc": "If true, uses all subpaths when doing the fill.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "strokePath",
                "shortdesc": "Strokes the path.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "tool",
                            "@optional": "true",
                            "shortdesc": "The tool to use when stroking the path.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/ToolType",
                                    "@": "ToolType"
                                }
                            }
                        },
                        {
                            "@name": "simulatePressure",
                            "@optional": "true",
                            "shortdesc": "If true, simulates the pressure when using the tool.",
                            "datatype": {
                                "type": "bool"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "makeClippingPath",
                "shortdesc": "Makes this path item the clipping path for this document.",
                "parameters": {
                    "parameter": {
                        "@name": "flatness",
                        "@optional": "true",
                        "shortdesc": "Flatness in device pixels; tells the PostScript printer how to approximate curves. Range: 0.2 to 100).",
                        "datatype": {
                            "type": "number"
                        }
                    }
                }
            },
            {
                "@name": "select",
                "shortdesc": "Makes this path item the active or selected path item."
            },
            {
                "@name": "deselect",
                "shortdesc": "Unselects the selection, no path items are selected."
            }
        ]
    },
    "SubPathItem": {
        "class": "SubPathItem",
        "superClass": null,
        "shortdesc": "Information about a path. You do not use the sub path item object to create a path. Rather, you create path segments using the sub path info object. Use the sub path item object to retrieve information about a path. All properties are read-only.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "closed",
                "@rwaccess": "readonly",
                "shortdesc": "If true, the path is closed.",
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "operation",
                "@rwaccess": "readonly",
                "shortdesc": "The sub path operation on other sub paths.",
                "datatype": {
                    "type": {
                        "@href": "#\/ShapeOperation",
                        "@": "ShapeOperation"
                    }
                }
            },
            {
                "@name": "pathPoints",
                "@rwaccess": "readonly",
                "shortdesc": "The path points collection in the sub path.",
                "datatype": {
                    "type": {
                        "@href": "#\/PathPoints",
                        "@": "PathPoints"
                    }
                }
            }
        ],
        "methods": []
    },
    "PathPoint": {
        "class": "PathPoint",
        "superClass": null,
        "shortdesc": "Information about an array of path point info objects. You do not use the path point object to create points that make up a path. Rather, you use the path point object to retrieve information about the points that describe path segments. To create path points, use the path point info object.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "anchor",
                "@rwaccess": "readonly",
                "shortdesc": "The position (coordinates) of the anchor point.",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    }
                }
            },
            {
                "@name": "leftDirection",
                "@rwaccess": "readonly",
                "shortdesc": "The location of the left direction point (the \"in\" position).",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    }
                }
            },
            {
                "@name": "rightDirection",
                "@rwaccess": "readonly",
                "shortdesc": "The location of the right direction point (the \"out\" position).",
                "datatype": {
                    "type": {
                        "@href": "#\/Point",
                        "@": "Point"
                    }
                }
            },
            {
                "@name": "kind",
                "@rwaccess": "readonly",
                "shortdesc": "The type of point.",
                "datatype": {
                    "type": {
                        "@href": "#\/PointKind",
                        "@": "PointKind"
                    }
                }
            }
        ],
        "methods": []
    },
    "MeasurementLog": {
        "class": "MeasurementLog",
        "superClass": null,
        "shortdesc": "The log of measurements taken.",
        "elementCount": 1,
        "propertyCount": 2,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": [
            {
                "@name": "exportMeasurements",
                "shortdesc": "Exports the specified measurements.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "file",
                            "@optional": "true",
                            "shortdesc": "The file to export to. If not specified, a 'file save' dialog is displayed.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/File",
                                    "@": "File"
                                }
                            }
                        },
                        {
                            "@name": "range",
                            "@optional": "true",
                            "shortdesc": "The measurements to export. Default: selected.",
                            "datatype": {
                                "type": {
                                    "@href": "#\/MeasurementRange",
                                    "@": "MeasurementRange"
                                }
                            }
                        },
                        {
                            "@name": "dataPoints",
                            "@optional": "true",
                            "shortdesc": "An array of identifiers of data points to export. The order of the data points is respected in the exported file. Defaults to data points visible in Measurement Log palette.",
                            "datatype": {
                                "type": "string",
                                "array": ""
                            }
                        }
                    ]
                }
            },
            {
                "@name": "deleteMeasurements",
                "shortdesc": "Deletes the specified measurements.",
                "parameters": {
                    "parameter": {
                        "@name": "range",
                        "@optional": "true",
                        "shortdesc": "The measurements to delete. Default: selected.",
                        "datatype": {
                            "type": {
                                "@href": "#\/MeasurementRange",
                                "@": "MeasurementRange"
                            }
                        }
                    }
                }
            }
        ]
    },
    "MeasurementScale": {
        "class": "MeasurementScale",
        "superClass": null,
        "shortdesc": "The measurement scale for the document.",
        "elementCount": 1,
        "propertyCount": 6,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "name",
                "shortdesc": "The name of the scale.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "pixelLength",
                "shortdesc": "The length (in pixels) to which this scale equates.",
                "datatype": {
                    "type": "int"
                }
            },
            {
                "@name": "logicalLength",
                "shortdesc": "The logical length this scale equates to.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "logicalUnits",
                "shortdesc": "The logical units for this scale.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": []
    },
    "Notifier": {
        "class": "Notifier",
        "superClass": null,
        "shortdesc": "An event-handler object that tells the script to execute specified code when a specified event occurs. For notifiers to work, they must be enabled. See the 'notifiers enabled' property of the Application object. Events that occur within scripts do not generally trigger notifiers, because they occur inside of a \"play script\" event.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 2,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "event",
                "@rwaccess": "readonly",
                "shortdesc": "The event ID in four characters or a unique string that the notifier is associated with.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "eventFile",
                "@rwaccess": "readonly",
                "shortdesc": "The path to the file to execute when the event occurs\/activates the notifier.",
                "datatype": {
                    "type": {
                        "@href": "$COMMON\/javascript.xml#\/File",
                        "@": "File"
                    }
                }
            },
            {
                "@name": "eventClass",
                "@rwaccess": "readonly",
                "shortdesc": "The class ID associated with the event for the Notifier object, four characters or a unique string.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": [
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            }
        ]
    },
    "CountItem": {
        "class": "CountItem",
        "superClass": null,
        "shortdesc": "A counted item in the document. The count item feature is available in the Extended Version only.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 3,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "position",
                "@rwaccess": "readonly",
                "shortdesc": "The position of count item in the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitPoint",
                        "@": "UnitPoint"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/CountItem",
                        "@": "CountItem"
                    }
                }
            },
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            }
        ]
    },
    "ColorSampler": {
        "class": "ColorSampler",
        "superClass": null,
        "shortdesc": "A color sampler in a document.",
        "elementCount": 1,
        "propertyCount": 4,
        "methodCount": 4,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "position",
                "@rwaccess": "readonly",
                "shortdesc": "The position of the color sampler in the document.",
                "datatype": {
                    "type": {
                        "@href": "#\/UnitPoint",
                        "@": "UnitPoint"
                    }
                }
            },
            {
                "@name": "color",
                "@rwaccess": "readonly",
                "shortdesc": "The color of the color sampler.",
                "datatype": {
                    "type": {
                        "@href": "#\/SolidColor",
                        "@": "SolidColor"
                    }
                }
            }
        ],
        "methods": [
            {
                "@name": "add",
                "shortdesc": "Adds an element.",
                "datatype": {
                    "type": {
                        "@href": "#\/ColorSampler",
                        "@": "ColorSampler"
                    }
                }
            },
            {
                "@name": "remove",
                "shortdesc": "Deletes this object."
            },
            {
                "@name": "removeAll",
                "shortdesc": "Deletes all elements."
            },
            {
                "@name": "move",
                "shortdesc": "Moves the color sampler to a new location.",
                "parameters": {
                    "parameter": {
                        "@name": "position",
                        "shortdesc": "Position of destination (unit value)",
                        "datatype": {
                            "type": {
                                "@href": "#\/UnitPoint",
                                "@": "UnitPoint"
                            }
                        }
                    }
                }
            }
        ]
    },
    "XMPMetadata": {
        "class": "XMPMetadata",
        "superClass": null,
        "shortdesc": "Camera raw image file settings stored in an XMP file in the same folder as the raw file with the same base name and an XMP extension.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "parent",
                "@rwaccess": "readonly",
                "shortdesc": "The object's container.",
                "datatype": {
                    "type": "Object"
                }
            },
            {
                "@name": "typename",
                "@rwaccess": "readonly",
                "shortdesc": "The class name of the object.",
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "rawData",
                "shortdesc": "The raw XML form of file information.",
                "datatype": {
                    "type": "string"
                }
            }
        ],
        "methods": []
    },
    "Point": {
        "class": "Point",
        "superClass": null,
        "shortdesc": "Describes a point. This class is also a two-element collection.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 0,
        "properties": [
            {
                "@name": "x",
                "shortdesc": "The left coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "y",
                "shortdesc": "The top coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "left",
                "shortdesc": "The left coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "top",
                "shortdesc": "The top coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "The array length.",
                "datatype": {
                    "type": "number",
                    "value": "2"
                }
            }
        ],
        "methods": []
    },
    "Rectangle": {
        "class": "Rectangle",
        "superClass": null,
        "shortdesc": "Describes a rectangle. This class is also a four-element collection.",
        "elementCount": 1,
        "propertyCount": 9,
        "methodCount": 0,
        "properties": [
            {
                "@name": "x",
                "shortdesc": "The left coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "y",
                "shortdesc": "The top coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "width",
                "shortdesc": "The width.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "height",
                "shortdesc": "The height.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "left",
                "shortdesc": "The left coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "right",
                "shortdesc": "The right coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "top",
                "shortdesc": "The top coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "bottom",
                "shortdesc": "The bottom coordinate.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "length",
                "@rwaccess": "readonly",
                "shortdesc": "The array length.",
                "datatype": {
                    "type": "number",
                    "value": "4"
                }
            }
        ],
        "methods": []
    },
    "global": {
        "class": "global",
        "superClass": null,
        "shortdesc": "The global methods and properties.",
        "elementCount": 1,
        "propertyCount": 5,
        "methodCount": 18,
        "properties": [
            {
                "@name": "app",
                "@rwaccess": "readonly",
                "shortdesc": "The application object",
                "datatype": {
                    "type": "Application"
                }
            },
            {
                "@name": "NaN",
                "shortdesc": "The NaN global property is a predefined variable with the value NaN (Not-a-Number), as specified by the IEEE-754 standard.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "Infinity",
                "shortdesc": "The Infinity global property is a predefined variable with the value for infinity.",
                "datatype": {
                    "type": "number"
                }
            },
            {
                "@name": "undefined",
                "shortdesc": "This global property is a predefined variable with the value for an undefined value.",
                "datatype": {
                    "type": "Undefined"
                }
            },
            {
                "@name": "BridgeTalk",
                "shortdesc": "The global BridgeTalk object.",
                "datatype": {
                    "type": "BridgeTalk"
                }
            }
        ],
        "methods": [
            {
                "@name": "encodeURI",
                "shortdesc": "Encodes a string after RFC2396.",
                "description": "Create an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escape\n            character of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*'();\/?:@&=+$,#. The method returns false on errors.",
                "parameters": {
                    "parameter": {
                        "@name": "text",
                        "shortdesc": "The text to encode.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "encodeURIComponent",
                "shortdesc": "Encodes a string after RFC2396.",
                "description": "Create an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escape\n            character of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*'(). The method returns false on errors.",
                "parameters": {
                    "parameter": {
                        "@name": "text",
                        "shortdesc": "The text to encode.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "decodeURI",
                "shortdesc": "Decodes a string created with ;encodeURI().",
                "parameters": {
                    "parameter": {
                        "@name": "uri",
                        "shortdesc": "The text to decode.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "decodeURIComponent",
                "shortdesc": "Decodes a string created with ;encodeURIComponent().",
                "parameters": {
                    "parameter": {
                        "@name": "uri",
                        "shortdesc": "The text to decode.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "escape",
                "shortdesc": "Creates a URL-encoded string from aString.",
                "description": "In the new string, characters of aString that require URL encoding are replaced with the format %xx, where xx is the hexadecimal value of the character code in the Unicode character set.  This format is used to transmit information appended to a URL during, for example, execution of the GET method.  Use the unescape() global function to translate the string back into its original format. Returns a string which is aString URL-encoded.",
                "parameters": {
                    "parameter": {
                        "@name": "aString",
                        "shortdesc": "The string to be encoded.",
                        "description": "",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                },
                "example": "escape(aString)"
            },
            {
                "@name": "eval",
                "shortdesc": "Evaluates its argument as a JavaScript script, and returns the result of evaluation.",
                "description": "You can pass the result of an object's toSource() method to reconstruct that object.",
                "parameters": {
                    "parameter": {
                        "@name": "stringExpression",
                        "shortdesc": "The string to evaluate.",
                        "description": "",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "any"
                },
                "example": "eval(stringExpression)"
            },
            {
                "@name": "uneval",
                "shortdesc": "Creates a source code representation of the supplied argument, and returns it as a string.",
                "parameters": {
                    "parameter": {
                        "@name": "what",
                        "shortdesc": "The object to uneval.",
                        "datatype": {
                            "type": "any"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "isFinite",
                "shortdesc": "Evaluates an expression and reports whether the result is a finite number.",
                "description": "Returns true if the expression is a finite number, false otherwise. False if the value is infinity or negative infinity.",
                "parameters": {
                    "parameter": {
                        "@name": "expression",
                        "shortdesc": "Any valid JavaScript expression.",
                        "description": "",
                        "datatype": {
                            "type": "number"
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                },
                "example": "isFinite(expression)"
            },
            {
                "@name": "isNaN",
                "shortdesc": "Evaluates an expression and reports whether the result is \"Not-a-Number\" (NaN).",
                "description": "Returns true if the result of evaluation is not a number (NaN), false if the value is a number.",
                "parameters": {
                    "parameter": {
                        "@name": "expression",
                        "shortdesc": "Any valid JavaScript expression.",
                        "description": "",
                        "datatype": {
                            "type": "number"
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                },
                "example": "isNaN(expression)"
            },
            {
                "@name": "parseInt",
                "shortdesc": "Extracts an integer from a string.",
                "description": "Parses a string to find the first set of characters, in a specified base, that can be converted to an integer, and returns that integer, or NaN if it does not encounter characters that it can convert to a number.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "text",
                            "shortdesc": "The string from which to extract an integer.",
                            "description": "",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "base",
                            "@optional": "true",
                            "shortdesc": "The base of the string to parse (from base 2 to base 36).",
                            "description": "If not supplied, base is determined by the format of string.",
                            "datatype": {
                                "type": "number",
                                "min": "2",
                                "max": "36"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "number"
                },
                "example": "parseInt(aString, base)"
            },
            {
                "@name": "parseFloat",
                "shortdesc": "Extracts a floating-point number from a string.",
                "description": "Parses a string to find the first set of characters that can be converted to a floating point number, and returns that number, or NaN if it does not encounter characters that it can converted to a number.  The function supports exponential notation.",
                "parameters": {
                    "parameter": {
                        "@name": "text",
                        "shortdesc": "The string from which to extract a floating point number.",
                        "description": "",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "number"
                },
                "example": "parseFloat(aString)"
            },
            {
                "@name": "unescape",
                "shortdesc": "Translates URL-encoded string into a regular string, and returns that string.",
                "description": "Use the escape() global function to URL-encode strings.",
                "parameters": {
                    "parameter": {
                        "@name": "stringExpression",
                        "shortdesc": "The URL-encoded string to convert.",
                        "description": "",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "string"
                },
                "example": "unescape(stringExpression)"
            },
            {
                "@name": "localize",
                "shortdesc": "Localizes a ZString-encoded string and merges additional arguments into the string.",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "what",
                            "shortdesc": "The string to localize. A ZString-encoded string that can contain placeholder for additional arguments in the form %1 to %n.",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "argument",
                            "@optional": "true",
                            "shortdesc": "Optional argument(s) to be merged into the string.",
                            "datatype": {
                                "type": "any"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            },
            {
                "@name": "isXMLName",
                "shortdesc": "Returns true is the supplied string is a valid XML name.",
                "parameters": {
                    "parameter": {
                        "@name": "name",
                        "shortdesc": "The XML name to test.",
                        "datatype": {
                            "type": "string"
                        }
                    }
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "setDefaultXMLNamespace",
                "shortdesc": "Defines the default XML namespace.",
                "description": {
                    "font": {
                        "@face": "_typewriter",
                        "@": ";set default xml namespace"
                    },
                    "@": "This is a replacement function for the standard JavaScript statement."
                },
                "parameters": {
                    "parameter": {
                        "@name": "namespace",
                        "shortdesc": "The namespace to use.",
                        "description": "Omit this parameter to return to the empty namespace. This is either a ;Namespace ;object or a string.",
                        "datatype": {
                            "type": {
                                "@href": "#\/Namespace",
                                "@": "Namespace"
                            }
                        }
                    }
                }
            },
            {
                "@name": "alert",
                "shortdesc": "Displays an alert box",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "message",
                            "shortdesc": "The text to display",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "title",
                            "@optional": "true",
                            "shortdesc": "The title of the alert; ignored on the Macintosh",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "errorIcon",
                            "shortdesc": "Display an Error icon; ignored on the Macintosh",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        }
                    ]
                }
            },
            {
                "@name": "confirm",
                "shortdesc": "Displays an alert box with Yes and No buttons; returns true for Yes",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "message",
                            "shortdesc": "The text to display",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "noAsDefault",
                            "shortdesc": "Set to true to set the No button as the default button",
                            "datatype": {
                                "type": "bool",
                                "value": "false"
                            }
                        },
                        {
                            "@name": "title",
                            "@optional": "true",
                            "shortdesc": "The title of the alert; ignored on the Macintosh",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "bool"
                }
            },
            {
                "@name": "prompt",
                "shortdesc": "Displays a dialog allowing the user to enter text",
                "description": "Returns null if the user cancelled the dialog, the text otherwise",
                "parameters": {
                    "parameter": [
                        {
                            "@name": "prompt",
                            "shortdesc": "The text to display",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "default",
                            "@optional": "true",
                            "shortdesc": "The default text to preset the edit field with",
                            "datatype": {
                                "type": "string"
                            }
                        },
                        {
                            "@name": "title",
                            "@optional": "true",
                            "shortdesc": "The title of the dialog;",
                            "datatype": {
                                "type": "string"
                            }
                        }
                    ]
                },
                "datatype": {
                    "type": "string"
                }
            }
        ]
    },
    "ElementPlacement": {
        "class": "ElementPlacement",
        "superClass": null,
        "shortdesc": "Controls where Photoshop places an element.",
        "elementCount": 1,
        "propertyCount": 3,
        "methodCount": 0,
        "properties": [
            {
                "@name": "PLACEAFTER",
                "@rwaccess": "readonly",
                "shortdesc": "Place after an element.",
                "datatype": {
                    "type": "int",
                    "value": "1"
                }
            },
            {
                "@name": "PLACEBEFORE",
                "@rwaccess": "readonly",
                "shortdesc": "Place before an element.",
                "datatype": {
                    "type": "int",
                    "value": "2"
                }
            },
            {
                "@name": "PLACEATEND",
                "@rwaccess": "readonly",
                "shortdesc": "Place an element at the end.",
                "datatype": {
                    "type": "int",
                    "value": "3"
                }
            }
        ],
        "methods": []
    }
}